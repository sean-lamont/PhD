{"∀(s :α -> bool) (t :α -> bool). t ⊆ s ⇒ s DIFF (s DIFF t) = t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_applied"], "∀(set :α -> bool) (e :α -> bool). e ∈ POW set ⇔ e ⊆ set": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "FINITE 𝕌(:α # β) ⇔ FINITE 𝕌(:α) ∧ FINITE 𝕌(:β)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_applied", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(f :α -> β) (s :α -> bool) (t :β -> bool). FINITE s ∧ BIJ f s t ⇒ CARD s = CARD t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_BIJ", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "{x | T} = 𝕌(:α)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.RPROD_DEF", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.WF_RPROD", "pairTheory.WF_LEX", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.transitive_LEX", "pairTheory.total_LEX", "pairTheory.symmetric_LEX", "pairTheory.SND_PAIR_MAP", "pairTheory.SND_EQ_EQUIV", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.reflexive_LEX", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LEX_MONO", "pairTheory.LEX_DEF_THM", "pairTheory.LEX_CONG", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST_EQ_EQUIV", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "COMPL (∅ :α -> bool) = 𝕌(:α)": ["pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(s :α -> bool) (t :α -> bool). s = t ⇔ ∀(x :α). x ∈ s ⇔ x ∈ t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(s :α -> bool). (∃(f :num -> α). BIJ f 𝕌(:num) s) ⇒ countable s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(a0 :α) (a1 :α list) (a0' :α) (a1' :α list). a0::a1 = a0'::a1' ⇔ a0 = a0' ∧ a1 = a1'": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LENGTH_MAP2", "listTheory.EL_MAP2", "listTheory.datatype_list"], "∀(s1 :(α -> bool) -> bool) (s2 :(α -> bool) -> bool). BIGINTER (s1 ∪ s2) = BIGINTER s1 ∩ BIGINTER s2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(f :α -> β -> bool) (s :γ -> bool) (t :α -> bool). s × BIGUNION (IMAGE f t) = BIGUNION (IMAGE (λ(n :α). s × f n) t)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_applied", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "PMATCH_EQUIV_ROWS (v :α) (rows1 :(α -> β option) list) (rows2 :(α -> β option) list) ⇒ PMATCH v rows1 = PMATCH v rows2": ["patternMatchesTheory.PMATCH_ROW_def", "patternMatchesTheory.PMATCH_ROW_COND_def", "patternMatchesTheory.PMATCH_INCOMPLETE_def", "patternMatchesTheory.PMATCH_EQUIV_ROWS_def", "patternMatchesTheory.PMATCH_def", "patternMatchesTheory.some_var_bool_T", "patternMatchesTheory.some_var_bool_F", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN_VAR", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN", "patternMatchesTheory.PMATCH_ROW_EXTEND_INPUT", "patternMatchesTheory.PMATCH_ROW_EQ_SOME", "patternMatchesTheory.PMATCH_ROW_EQ_NONE", "patternMatchesTheory.PMATCH_ROW_EQ_AUX", "patternMatchesTheory.PMATCH_ROW_CONG", "patternMatchesTheory.PMATCH_ROW_COND_DEF_GSYM", "patternMatchesTheory.PMATCH_EXTEND_OLD", "patternMatchesTheory.PMATCH_EXTEND_BOTH_ID", "patternMatchesTheory.PMATCH_EXTEND_BOTH", "patternMatchesTheory.PMATCH_EXTEND_BASE", "patternMatchesTheory.PMATCH_EVAL_MATCH", "patternMatchesTheory.PMATCH_EVAL", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_3", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_2", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_1", "patternMatchesTheory.PMATCH_EQUIV_ROWS_EQUIV_EXPAND", "patternMatchesTheory.PMATCH_CONG", "patternMatchesTheory.PMATCH_COND_SELECT_UNIQUE"], "∀(l :α list) (x :α). SEG (1 :num) (LENGTH l) (SNOC x l) = [x]": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.ELL_compute", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.ALL_EL_MAP"], "∀(s :α -> bool). FINITE s ⇒ countable s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(l :α list). FINITE (set l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.PREIMAGE_def", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.is_measure_maximal_def", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF_2", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF_EMPTY", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.PREIMAGE_UNIV", "pred_setTheory.PREIMAGE_UNION", "pred_setTheory.PREIMAGE_SUBSET", "pred_setTheory.PREIMAGE_K", "pred_setTheory.PREIMAGE_INTER", "pred_setTheory.PREIMAGE_IMAGE", "pred_setTheory.PREIMAGE_I", "pred_setTheory.PREIMAGE_EMPTY", "pred_setTheory.PREIMAGE_DISJOINT", "pred_setTheory.PREIMAGE_DIFF", "pred_setTheory.PREIMAGE_CROSS", "pred_setTheory.PREIMAGE_COMPL_INTER", "pred_setTheory.PREIMAGE_COMPL", "pred_setTheory.PREIMAGE_COMP", "pred_setTheory.PREIMAGE_BIGUNION", "pred_setTheory.PREIMAGE_applied", "pred_setTheory.PREIMAGE_ALT", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.is_measure_maximal_SING", "pred_setTheory.is_measure_maximal_INSERT", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_EQ_SING", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_PREIMAGE", "pred_setTheory.IN_POW", "pred_setTheory.in_max_set", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT_EXPAND", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET_gen", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_PREIMAGE", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_SING", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_PREIMAGE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_is_measure_maximal", "pred_setTheory.FINITE_INTER", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_SUBSET", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.count_add1", "pred_setTheory.count_add", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.compl_insert", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_LE", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_REST", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.HD_DROP", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_APPEND"], "∀(f :α -> num) (x :α) (ls :α list). MEM x ls ⇒ f x ≤ SUM (MAP f ls)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.HD_DROP", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_APPEND"], "∀(x :α) (s :α -> bool). x ∈ x INSERT s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied"], "∀(n :num) (l :α list). n < LENGTH l ⇒ BUTLASTN n (FRONT l) = FRONT (BUTLASTN n l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.ELL_compute", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.ALL_EL_MAP"], "∀(v :α) (p :β -> α) (g :β -> bool) (p' :γ -> α) (g' :γ -> bool) (RES :bool). PMATCH_ROW_COND_EX v p g ⇒ (∀(x :β). g x ⇒ ((∃(x' :γ). p' x' = p x ∧ g' x') ⇔ RES)) ⇒ (PMATCH_ROW_COND_EX v p' g' ⇔ RES)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_DISJ_def", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_def", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_def", "patternMatchesTheory.PMATCH_ROW_def", "patternMatchesTheory.PMATCH_ROW_COND_EX_def", "patternMatchesTheory.PMATCH_ROW_COND_def", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_def", "patternMatchesTheory.PMATCH_INCOMPLETE_def", "patternMatchesTheory.PMATCH_EQUIV_ROWS_def", "patternMatchesTheory.PMATCH_def", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_OK", "patternMatchesTheory.some_var_bool_T", "patternMatchesTheory.some_var_bool_F", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_DISJ_THM", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_THM", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_REWRITE", "patternMatchesTheory.REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN_VAR", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_SUC", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_NIL", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_LT", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_GE", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_0", "patternMatchesTheory.PMATCH_ROW_EXTEND_INPUT", "patternMatchesTheory.PMATCH_ROW_EQ_SOME", "patternMatchesTheory.PMATCH_ROW_EQ_NONE", "patternMatchesTheory.PMATCH_ROW_EQ_AUX", "patternMatchesTheory.PMATCH_ROW_CONG", "patternMatchesTheory.PMATCH_ROW_COND_EX_WEAKEN", "patternMatchesTheory.PMATCH_ROW_COND_EX_FULL_DEF", "patternMatchesTheory.PMATCH_ROW_COND_EX_FALSE", "patternMatchesTheory.PMATCH_ROW_COND_DEF_GSYM", "patternMatchesTheory.PMATCH_REMOVE_ARB_NO_OVERLAP", "patternMatchesTheory.PMATCH_REMOVE_ARB", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_REWRITES", "patternMatchesTheory.PMATCH_INTRO_CATCHALL", "patternMatchesTheory.PMATCH_EXTEND_OLD", "patternMatchesTheory.PMATCH_EXTEND_BOTH_ID", "patternMatchesTheory.PMATCH_EXTEND_BOTH", "patternMatchesTheory.PMATCH_EXTEND_BASE", "patternMatchesTheory.PMATCH_EVAL_MATCH", "patternMatchesTheory.PMATCH_EVAL", "patternMatchesTheory.PMATCH_EQUIV_ROWS_MATCH", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_3", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_2", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_1", "patternMatchesTheory.PMATCH_EQUIV_ROWS_EQUIV_EXPAND", "patternMatchesTheory.PMATCH_EQUIV_ROWS_CONS_NONE", "patternMatchesTheory.PMATCH_EQUIV_APPEND", "patternMatchesTheory.PMATCH_CONG", "patternMatchesTheory.PMATCH_COND_SELECT_UNIQUE", "patternMatchesTheory.PMATCH_APPEND_SEM", "patternMatchesTheory.LENGTH_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.LENGTH_STRONGEST_REDUNDANT_ROWS_INFO", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_NIL", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_CONS", "patternMatchesTheory.FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.EL_STRONGEST_REDUNDANT_ROWS_INFO", "patternMatchesTheory.EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.EL1_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_THMS", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(x :α). (∅ :α -> bool) DELETE x = (∅ :α -> bool)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(s :α -> bool) (t :α -> bool). s DIFF t ∩ s = s DIFF t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied"], "∀(n :num) (l1 :α list) (l2 :α list). TAKE n (l1 ++ l2) = TAKE n l1 ++ TAKE (n − LENGTH l1) l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(s :α -> bool) (t :α -> bool) (u :α -> bool). s ∩ (t ∩ u) = s ∩ t ∩ u": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "∀(P :α list -> bool). (∀(l :α list). LENGTH l = (0 :num) ⇒ P l) ⇔ P ([] :α list)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.SING_HD", "listTheory.NULL_LENGTH", "listTheory.NULL_EQ", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_APPEND", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "ASSOC ($++ :α list -> α list -> α list)": ["listTheory.LENGTH_NIL_SYM", "combinTheory.W_DEF", "combinTheory.UPDATE_def", "combinTheory.S_DEF", "combinTheory.RIGHT_ID_DEF", "combinTheory.o_DEF", "combinTheory.MONOID_DEF", "combinTheory.LEFT_ID_DEF", "combinTheory.K_DEF", "combinTheory.I_DEF", "combinTheory.FCOMM_DEF", "combinTheory.FAIL_DEF", "combinTheory.COMM_DEF", "combinTheory.C_DEF", "combinTheory.ASSOC_DEF", "combinTheory.APP_DEF", "combinTheory.W_THM", "combinTheory.UPDATE_EQ", "combinTheory.UPDATE_COMMUTES", "combinTheory.UPDATE_APPLY_IMP_ID", "combinTheory.UPDATE_APPLY_ID_RWT", "combinTheory.UPDATE_APPLY_ID", "combinTheory.UPDATE_APPLY", "combinTheory.UPD_SAME_KEY_UNWIND", "combinTheory.UPD11_SAME_KEY_AND_BASE", "combinTheory.UPD11_SAME_BASE", "combinTheory.SAME_KEY_UPDATE_DIFFER", "combinTheory.S_THM", "combinTheory.S_ABS_R", "combinTheory.S_ABS_L", "combinTheory.o_THM", "combinTheory.o_ASSOC'", "combinTheory.o_ASSOC", "combinTheory.o_ABS_R", "combinTheory.o_ABS_L", "combinTheory.MONOID_DISJ_F", "combinTheory.MONOID_CONJ_T", "combinTheory.literal_case_FORALL_ELIM", "combinTheory.LET_FORALL_ELIM", "combinTheory.K_THM", "combinTheory.K_o_THM", "combinTheory.I_THM", "combinTheory.I_o_ID", "combinTheory.GEN_literal_case_RATOR", "combinTheory.GEN_literal_case_RAND", "combinTheory.GEN_LET_RATOR", "combinTheory.GEN_LET_RAND", "combinTheory.FCOMM_ASSOC", "combinTheory.FAIL_THM", "combinTheory.C_THM", "combinTheory.C_ABS_L", "combinTheory.ASSOC_SYM", "combinTheory.ASSOC_DISJ", "combinTheory.ASSOC_CONJ", "combinTheory.APPLY_UPDATE_THM", "combinTheory.APPLY_UPDATE_ID", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "PMATCH_ROW_REDUNDANT (v :α) ([] :(α -> β option) list) (i :num) ⇔ F": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_def", "patternMatchesTheory.PMATCH_ROW_def", "patternMatchesTheory.PMATCH_ROW_COND_def", "patternMatchesTheory.PMATCH_INCOMPLETE_def", "patternMatchesTheory.PMATCH_EQUIV_ROWS_def", "patternMatchesTheory.PMATCH_def", "patternMatchesTheory.some_var_bool_T", "patternMatchesTheory.some_var_bool_F", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN_VAR", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN", "patternMatchesTheory.PMATCH_ROW_EXTEND_INPUT", "patternMatchesTheory.PMATCH_ROW_EQ_SOME", "patternMatchesTheory.PMATCH_ROW_EQ_NONE", "patternMatchesTheory.PMATCH_ROW_EQ_AUX", "patternMatchesTheory.PMATCH_ROW_CONG", "patternMatchesTheory.PMATCH_ROW_COND_DEF_GSYM", "patternMatchesTheory.PMATCH_REMOVE_ARB_NO_OVERLAP", "patternMatchesTheory.PMATCH_REMOVE_ARB", "patternMatchesTheory.PMATCH_INTRO_CATCHALL", "patternMatchesTheory.PMATCH_EXTEND_OLD", "patternMatchesTheory.PMATCH_EXTEND_BOTH_ID", "patternMatchesTheory.PMATCH_EXTEND_BOTH", "patternMatchesTheory.PMATCH_EXTEND_BASE", "patternMatchesTheory.PMATCH_EVAL_MATCH", "patternMatchesTheory.PMATCH_EVAL", "patternMatchesTheory.PMATCH_EQUIV_ROWS_MATCH", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_3", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_2", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_1", "patternMatchesTheory.PMATCH_EQUIV_ROWS_EQUIV_EXPAND", "patternMatchesTheory.PMATCH_EQUIV_ROWS_CONS_NONE", "patternMatchesTheory.PMATCH_EQUIV_APPEND", "patternMatchesTheory.PMATCH_CONG", "patternMatchesTheory.PMATCH_COND_SELECT_UNIQUE", "patternMatchesTheory.PMATCH_APPEND_SEM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(ZRECSPACE' :(num -> α -> bool) -> bool). ZRECSPACE' (ind_type$ZBOT :num -> α -> bool) ∧ (∀(c :num) (i :α) (r :num -> num -> α -> bool). (∀(n :num). ZRECSPACE' (r n)) ⇒ ZRECSPACE' (ind_type$ZCONSTR c i r)) ⇒ ∀(a0 :num -> α -> bool). ZRECSPACE a0 ⇒ ZRECSPACE' a0": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "ind_typeTheory.ZRECSPACE_def", "ind_typeTheory.ZCONSTR", "ind_typeTheory.ZBOT", "ind_typeTheory.NUMSUM_DEST", "ind_typeTheory.NUMSUM", "ind_typeTheory.NUMPAIR_DEST", "ind_typeTheory.NUMPAIR", "ind_typeTheory.INJP", "ind_typeTheory.INJN", "ind_typeTheory.INJF", "ind_typeTheory.INJA", "ind_typeTheory.ZRECSPACE_rules", "ind_typeTheory.ZCONSTR_ZBOT", "ind_typeTheory.NUMSUM_INJ", "ind_typeTheory.NUMPAIR_INJ_LEMMA", "ind_typeTheory.NUMPAIR_INJ", "ind_typeTheory.INJP_INJ", "ind_typeTheory.INJN_INJ", "ind_typeTheory.INJF_INJ", "ind_typeTheory.INJA_INJ", "ind_typeTheory.INJ_INVERSE2", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(l1 :α list) (l2 :β list). LENGTH l1 = LENGTH l2 ⇒ ∀(x1 :α) (x2 :β). ZIP (SNOC x1 l1,SNOC x2 l2) = SNOC (x1,x2) (ZIP (l1,l2))": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.RPROD_DEF", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.WF_RPROD", "pairTheory.WF_LEX", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.transitive_LEX", "pairTheory.total_LEX", "pairTheory.symmetric_LEX", "pairTheory.SND_PAIR_MAP", "pairTheory.SND_EQ_EQUIV", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.reflexive_LEX", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LEX_MONO", "pairTheory.LEX_DEF_THM", "pairTheory.LEX_CONG", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST_EQ_EQUIV", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "¬SHORTLEX (R :α -> α -> bool) (l :α list) ([] :α list)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_MONO", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(e :α). ∃(fn :unit -> α). fn () = e": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "oneTheory.one_TY_DEF", "oneTheory.one_DEF", "oneTheory.one_Axiom", "oneTheory.one_axiom", "oneTheory.one", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(l :α list). l ≠ ([] :α list) ⇒ FRONT l ++ [LAST l] = l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.TL", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "∀(l :α list) (n :num). n < LENGTH l ⇒ LAST (DROP n l) = LAST l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(n :num) (l :α list). n ≤ LENGTH l ⇒ ∀(x :α). BUTLASTN n (x::l) = x::BUTLASTN n l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.ELL_compute", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.ALL_EL_MAP"], "∀(f :α -> β) (s :β -> bool) (t :β -> bool). DISJOINT s t ⇒ DISJOINT (PREIMAGE f s) (PREIMAGE f t)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.PREIMAGE_def", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF_2", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF_EMPTY", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.PREIMAGE_UNIV", "pred_setTheory.PREIMAGE_UNION", "pred_setTheory.PREIMAGE_K", "pred_setTheory.PREIMAGE_INTER", "pred_setTheory.PREIMAGE_I", "pred_setTheory.PREIMAGE_EMPTY", "pred_setTheory.PREIMAGE_DIFF", "pred_setTheory.PREIMAGE_COMPL", "pred_setTheory.PREIMAGE_COMP", "pred_setTheory.PREIMAGE_BIGUNION", "pred_setTheory.PREIMAGE_applied", "pred_setTheory.PREIMAGE_ALT", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_EQ_SING", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_PREIMAGE", "pred_setTheory.IN_POW", "pred_setTheory.in_max_set", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT_EXPAND", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET_gen", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_SING", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INTER", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_SUBSET", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.count_add1", "pred_setTheory.count_add", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.compl_insert", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_LE", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_REST", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "(∃(ls :α list). (P :α list -> bool) ls) ⇔ ∃(n :num) (f :num -> α). P (GENLIST f n)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "nub ([] :α list) = ([] :α list)": ["listTheory.LENGTH_NIL_SYM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "WF (R :α -> α -> bool)⁺ ⇔ WF R": ["relationTheory.WF_DEF", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.antisymmetric_def", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_NOT_REFL", "relationTheory.WF_irreflexive", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.transitive_EQC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_EQC", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_EQC", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.INDUCTION_WF_THM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RC", "relationTheory.ALT_equivalence"], "∀(n :num). countable (count n)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "{x | (y :α) = x} = {y}": ["pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.RPROD_DEF", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.WF_RPROD", "pairTheory.WF_LEX", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.transitive_LEX", "pairTheory.total_LEX", "pairTheory.symmetric_LEX", "pairTheory.SND_PAIR_MAP", "pairTheory.SND_EQ_EQUIV", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.reflexive_LEX", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LEX_MONO", "pairTheory.LEX_DEF_THM", "pairTheory.LEX_CONG", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST_EQ_EQUIV", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(x :α) (l :α list). SNOC x l = l ++ [x]": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.SNOC", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_DROP", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(s :α -> bool) (t :α -> bool). DISJOINT s t ⇔ ∀(x :α). x ∈ s ⇒ x ∉ t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_SYM"], "GENLIST (f :num -> α) (0 :num) = ([] :α list) ∧ GENLIST f (NUMERAL (n :num)) = GENLIST_AUX f (NUMERAL n) ([] :α list)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.SNOC", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_eq_0", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(s :α) (x :α -> bool). x ⊂ {s} ⇔ x = (∅ :α -> bool)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(R :α -> α -> bool). symmetric Rᵀ ⇔ symmetric R": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.transitive_inv_image", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_EQC", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RESTRICT_LEMMA", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_EQC", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.irreflexive_inv", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_EQC", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RC", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(t1 :α) (t2 :α). (if F then t1 else t2) = t2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(l1 :α list) (l2 :α list). set (l1 ++ l2) = set l1 ∪ set l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.PREIMAGE_def", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.is_measure_maximal_def", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF_2", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF_EMPTY", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.PREIMAGE_UNIV", "pred_setTheory.PREIMAGE_UNION", "pred_setTheory.PREIMAGE_SUBSET", "pred_setTheory.PREIMAGE_K", "pred_setTheory.PREIMAGE_INTER", "pred_setTheory.PREIMAGE_IMAGE", "pred_setTheory.PREIMAGE_I", "pred_setTheory.PREIMAGE_EMPTY", "pred_setTheory.PREIMAGE_DISJOINT", "pred_setTheory.PREIMAGE_DIFF", "pred_setTheory.PREIMAGE_CROSS", "pred_setTheory.PREIMAGE_COMPL_INTER", "pred_setTheory.PREIMAGE_COMPL", "pred_setTheory.PREIMAGE_COMP", "pred_setTheory.PREIMAGE_BIGUNION", "pred_setTheory.PREIMAGE_applied", "pred_setTheory.PREIMAGE_ALT", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.is_measure_maximal_SING", "pred_setTheory.is_measure_maximal_INSERT", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_EQ_SING", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_PREIMAGE", "pred_setTheory.IN_POW", "pred_setTheory.in_max_set", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT_EXPAND", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET_gen", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_PREIMAGE", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_SING", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_PREIMAGE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_is_measure_maximal", "pred_setTheory.FINITE_INTER", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_SUBSET", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.count_add1", "pred_setTheory.count_add", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.compl_insert", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_LE", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_REST", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.HD_DROP", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_APPEND"], "∀(l1 :α list) (l2 :α list). l2 ≼ l1 ⇔ ∃(l :α list). l1 = l2 ++ l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(R :α -> α -> bool). irreflexive Rᵀ ⇔ irreflexive R": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.transitive_inv_image", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_EQC", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RESTRICT_LEMMA", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_EQC", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_EQC", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RC", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(s :α -> bool). CHOICE s ∉ REST s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(l1 :α list) (l2 :α list). l1 ++ l2 = FOLDL (λ(l' :α list) (x :α). SNOC x l') l1 l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(L :α list) (n :num). LEN L n = LENGTH L + n": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.SNOC", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(x :bool) (x' :bool) (y :bool) (y' :bool). (x ⇒ y' ⇒ y) ∧ (¬y' ⇒ x ⇒ x') ⇒ (x' ⇒ y') ⇒ x ⇒ y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(P :α -> bool) (l :α list). EVERY P l ⇔ ∀(e :α). MEM e l ⇒ P e": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MEM_TL", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_APPEND", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "∀(n1 :num) (n2 :num). count n1 = count n2 ⇔ n1 = n2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_applied", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_COUNT", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(n :num). (0 :num) < n ⇒ ∀(x :α) (l :α list). EL n (x::l) = EL (PRE n) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(e :α) (l :α list). LIST_ELEM_COUNT e l > (0 :num) ⇔ MEM e l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.longest_prefix_def", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.common_prefixes_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_TAKE_LEQ", "rich_listTheory.ZIP_TAKE", "rich_listTheory.ZIP_SNOC", "rich_listTheory.ZIP_APPEND", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.two_common_prefixes", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_REVERSE", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_EVERY", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SNOC_EL_TAKE", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_REVERSE", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_LASTN_BUTLASTN", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REPLICATE_compute", "rich_listTheory.prefixes_is_prefix_total", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.OR_EL_FOLDR", "rich_listTheory.OR_EL_FOLDL", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.NIL_IN_common_prefixes", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_REPLICATE", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_LAST_FRONT", "rich_listTheory.MEM_LAST", "rich_listTheory.MEM_FRONT", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_COUNT_LIST", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.MAP_COUNT_LIST", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.longest_prefix_UNIQUE", "rich_listTheory.longest_prefix_SING", "rich_listTheory.longest_prefix_PAIR", "rich_listTheory.longest_prefix_NIL", "rich_listTheory.longest_prefix_EMPTY", "rich_listTheory.LIST_ELEM_COUNT_THM", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_REPLICATE", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_COUNT_LIST", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_REVERSE", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_DROP", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_TRANS", "rich_listTheory.IS_PREFIX_SNOC", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_REFL", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_NIL", "rich_listTheory.IS_PREFIX_LENGTH_ANTI", "rich_listTheory.IS_PREFIX_LENGTH", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_BUTLAST", "rich_listTheory.IS_PREFIX_APPENDS", "rich_listTheory.IS_PREFIX_APPEND3", "rich_listTheory.IS_PREFIX_APPEND2", "rich_listTheory.IS_PREFIX_APPEND1", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX_ANTISYM", "rich_listTheory.IS_PREFIX", "rich_listTheory.FRONT_APPEND", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FINITE_prefix", "rich_listTheory.FINITE_common_prefixes", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_FRONT", "rich_listTheory.EL_ELL", "rich_listTheory.EL_COUNT_LIST", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_REVERSE", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_LASTN", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_CONS_EL", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_SNOC", "rich_listTheory.COUNT_LIST_GENLIST", "rich_listTheory.COUNT_LIST_COUNT", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.COUNT_LIST_ADD", "rich_listTheory.CONS_APPEND", "rich_listTheory.common_prefixes_PAIR", "rich_listTheory.common_prefixes_NONEMPTY", "rich_listTheory.common_prefixes_NIL", "rich_listTheory.common_prefixes_BIGINTER", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_REVERSE", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_SNOC1", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.APPEND_ASSOC_CONS", "rich_listTheory.AND_EL_FOLDR", "rich_listTheory.AND_EL_FOLDL", "rich_listTheory.ALL_EL_MAP"], "∀(t :bool). t ∨ t ⇔ t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "(∀(x :α) (y :α). (f :α -> β) x = f y ⇔ x = y) ⇒ (DISJOINT (IMAGE f (s1 :α -> bool)) (IMAGE f (s2 :α -> bool)) ⇔ DISJOINT s1 s2)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(x :bool) (x' :bool) (y :bool) (y' :bool). (y ⇒ x' ⇒ x) ∧ (x' ⇒ y' ⇒ y) ⇒ x' ∧ y' ⇒ x ∧ y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(n :num). DROP n ([] :α list) = ([] :α list)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.TL", "listTheory.TAKE_nil", "listTheory.TAKE_cons", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "∀(s :α -> bool). s ⊂ 𝕌(:α) ⇔ ∃(x :α). x ∉ s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "(Q :α option -> bool) ($some (P :α -> bool)) ⇒ (∃(x :α). P x ∧ Q (SOME x)) ∨ (∀(x :α). ¬P x) ∧ Q (NONE :α option)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "optionTheory.some_def", "optionTheory.SOME_DEF", "optionTheory.OPTREL_def", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MCOMP_def", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.OPTION_GUARD_def", "optionTheory.OPTION_CHOICE_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.OPTION_APPLY_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_SOME_APPLY", "optionTheory.some_intro", "optionTheory.SOME_APPLY_PERMUTE", "optionTheory.SOME_11", "optionTheory.OPTREL_THM", "optionTheory.OPTREL_SOME", "optionTheory.OPTREL_refl", "optionTheory.OPTREL_O", "optionTheory.OPTREL_MONO", "optionTheory.OPTREL_eq", "optionTheory.option_nchotomy", "optionTheory.OPTION_MCOMP_ID", "optionTheory.OPTION_MCOMP_ASSOC", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION", "optionTheory.OPTION_GUARD_EQ_THM", "optionTheory.OPTION_GUARD_COND", "optionTheory.OPTION_CHOICE_NONE", "optionTheory.OPTION_CHOICE_EQ_NONE", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.OPTION_APPLY_o", "optionTheory.OPTION_APPLY_MAP2", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "transitive ($SUBSET :(α -> bool) -> (α -> bool) -> bool)": ["relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.WeakOrder", "relationTheory.WeakLinearOrder", "relationTheory.WCR_def", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.STRORD", "relationTheory.StrongOrder", "relationTheory.StrongLinearOrder", "relationTheory.SN_def", "relationTheory.SC_DEF", "relationTheory.RUNIV", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RRESTRICT_DEF", "relationTheory.RRANGE", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RDOM_DELETE_DEF", "relationTheory.RDOM_DEF", "relationTheory.RCOMPL", "relationTheory.rcdiamond_def", "relationTheory.RC_DEF", "relationTheory.PreOrder", "relationTheory.Order", "relationTheory.O_DEF", "relationTheory.nf_def", "relationTheory.LinearOrder", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.diamond_def", "relationTheory.diag_def", "relationTheory.CR_def", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.WeakOrder_EQ", "relationTheory.WeakOrd_Ord", "relationTheory.WeakLinearOrder_dichotomy", "relationTheory.trichotomous_STRORD", "relationTheory.trichotomous_RC", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_O_RSUBSET", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_RSUBSET", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRORD_Strong", "relationTheory.STRORD_RC", "relationTheory.STRORD_AND_NOT_Id", "relationTheory.StrongOrd_Ord", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNIV_SUBSET", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.RTC_RINTER", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RSUBSET_WeakOrder", "relationTheory.RSUBSET_antisymmetric", "relationTheory.RSUBSET_ANTISYM", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.REMPTY_SUBSET", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_Id_RSUBSET", "relationTheory.reflexive_EQC", "relationTheory.rcdiamond_diamond", "relationTheory.RC_Weak", "relationTheory.RC_SUBSET", "relationTheory.RC_STRORD", "relationTheory.RC_RTC", "relationTheory.RC_OR_Id", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.O_MONO", "relationTheory.O_Id", "relationTheory.O_ASSOC", "relationTheory.NOT_INVOL", "relationTheory.Newmans_lemma", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.irrefl_trans_implies_antisym", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_Id", "relationTheory.inv_EQC", "relationTheory.inv_diag", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IN_RRANGE", "relationTheory.IN_RDOM_RUNION", "relationTheory.IN_RDOM_RRESTRICT", "relationTheory.IN_RDOM_DELETE", "relationTheory.IN_RDOM", "relationTheory.IDEM_TC", "relationTheory.IDEM_STRORD", "relationTheory.IDEM_SC", "relationTheory.IDEM_RTC", "relationTheory.IDEM_RC", "relationTheory.IDEM", "relationTheory.Id_O", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.establish_CR", "relationTheory.equivalence_inv_identity", "relationTheory.EqIsBothRSUBSET", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.diamond_TC_diamond", "relationTheory.diamond_RC_diamond", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "pred_setTheory.UNIV_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_applied", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "∀(f :α -> β) (g :β -> γ) (s :α -> bool) (t :β -> bool) (u :γ -> bool). INJ f s t ∧ INJ g t u ⇒ INJ (g ∘ f) s u": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "combinTheory.W_DEF", "combinTheory.UPDATE_def", "combinTheory.S_DEF", "combinTheory.RIGHT_ID_DEF", "combinTheory.o_DEF", "combinTheory.MONOID_DEF", "combinTheory.LEFT_ID_DEF", "combinTheory.K_DEF", "combinTheory.I_DEF", "combinTheory.FCOMM_DEF", "combinTheory.FAIL_DEF", "combinTheory.COMM_DEF", "combinTheory.C_DEF", "combinTheory.ASSOC_DEF", "combinTheory.APP_DEF", "combinTheory.W_THM", "combinTheory.UPDATE_EQ", "combinTheory.UPDATE_COMMUTES", "combinTheory.UPDATE_APPLY_IMP_ID", "combinTheory.UPDATE_APPLY_ID_RWT", "combinTheory.UPDATE_APPLY_ID", "combinTheory.UPDATE_APPLY", "combinTheory.UPD_SAME_KEY_UNWIND", "combinTheory.UPD11_SAME_KEY_AND_BASE", "combinTheory.UPD11_SAME_BASE", "combinTheory.SAME_KEY_UPDATE_DIFFER", "combinTheory.S_THM", "combinTheory.S_ABS_R", "combinTheory.S_ABS_L", "combinTheory.o_THM", "combinTheory.o_ASSOC'", "combinTheory.o_ASSOC", "combinTheory.o_ABS_R", "combinTheory.o_ABS_L", "combinTheory.MONOID_DISJ_F", "combinTheory.MONOID_CONJ_T", "combinTheory.literal_case_FORALL_ELIM", "combinTheory.LET_FORALL_ELIM", "combinTheory.K_THM", "combinTheory.K_o_THM", "combinTheory.I_THM", "combinTheory.I_o_ID", "combinTheory.GEN_literal_case_RATOR", "combinTheory.GEN_literal_case_RAND", "combinTheory.GEN_LET_RATOR", "combinTheory.GEN_LET_RAND", "combinTheory.FCOMM_ASSOC", "combinTheory.FAIL_THM", "combinTheory.C_THM", "combinTheory.C_ABS_L", "combinTheory.ASSOC_SYM", "combinTheory.ASSOC_DISJ", "combinTheory.ASSOC_CONJ", "combinTheory.APPLY_UPDATE_THM", "combinTheory.APPLY_UPDATE_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(y :β) (s :α -> bool) (f :α -> β). IMAGE f s y ⇔ ∃(x :α). y = f x ∧ x ∈ s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(f :α -> β) (g :β -> γ) (s :α -> bool) (t :β -> bool) (u :γ -> bool). SURJ f s t ∧ SURJ g t u ⇒ SURJ (g ∘ f) s u": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "combinTheory.W_DEF", "combinTheory.UPDATE_def", "combinTheory.S_DEF", "combinTheory.RIGHT_ID_DEF", "combinTheory.o_DEF", "combinTheory.MONOID_DEF", "combinTheory.LEFT_ID_DEF", "combinTheory.K_DEF", "combinTheory.I_DEF", "combinTheory.FCOMM_DEF", "combinTheory.FAIL_DEF", "combinTheory.COMM_DEF", "combinTheory.C_DEF", "combinTheory.ASSOC_DEF", "combinTheory.APP_DEF", "combinTheory.W_THM", "combinTheory.UPDATE_EQ", "combinTheory.UPDATE_COMMUTES", "combinTheory.UPDATE_APPLY_IMP_ID", "combinTheory.UPDATE_APPLY_ID_RWT", "combinTheory.UPDATE_APPLY_ID", "combinTheory.UPDATE_APPLY", "combinTheory.UPD_SAME_KEY_UNWIND", "combinTheory.UPD11_SAME_KEY_AND_BASE", "combinTheory.UPD11_SAME_BASE", "combinTheory.SAME_KEY_UPDATE_DIFFER", "combinTheory.S_THM", "combinTheory.S_ABS_R", "combinTheory.S_ABS_L", "combinTheory.o_THM", "combinTheory.o_ASSOC'", "combinTheory.o_ASSOC", "combinTheory.o_ABS_R", "combinTheory.o_ABS_L", "combinTheory.MONOID_DISJ_F", "combinTheory.MONOID_CONJ_T", "combinTheory.literal_case_FORALL_ELIM", "combinTheory.LET_FORALL_ELIM", "combinTheory.K_THM", "combinTheory.K_o_THM", "combinTheory.I_THM", "combinTheory.I_o_ID", "combinTheory.GEN_literal_case_RATOR", "combinTheory.GEN_literal_case_RAND", "combinTheory.GEN_LET_RATOR", "combinTheory.GEN_LET_RAND", "combinTheory.FCOMM_ASSOC", "combinTheory.FAIL_THM", "combinTheory.C_THM", "combinTheory.C_ABS_L", "combinTheory.ASSOC_SYM", "combinTheory.ASSOC_DISJ", "combinTheory.ASSOC_CONJ", "combinTheory.APPLY_UPDATE_THM", "combinTheory.APPLY_UPDATE_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_ID", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(f :'z -> 'z). INVOL f ⇒ ∀(a :'z) (b :'z). f a = f b ⇔ a = b": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RESTRICT_LEMMA", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_EQC", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.irreflexive_inv", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_EQC", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.equivalence_inv_identity", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(l1 :α list) (l2 :α list) (l3 :α list). l1 ++ (l2 ++ l3) = l1 ++ l2 ++ l3": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL"], "$OLEAST (P :num -> bool) = (NONE :num option) ⇔ ∀(n :num). ¬P n": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "whileTheory.WHILE", "whileTheory.OLEAST_def", "whileTheory.LEAST_DEF", "whileTheory.HOARE_SPEC_DEF", "whileTheory.WHILE_RULE", "whileTheory.WHILE_INDUCTION", "whileTheory.OLEAST_INTRO", "whileTheory.OLEAST_EQNS", "whileTheory.LESS_LEAST", "whileTheory.LEAST_T", "whileTheory.LEAST_LESS_EQ", "whileTheory.LEAST_INTRO", "whileTheory.LEAST_EXISTS_IMP", "whileTheory.LEAST_EXISTS", "whileTheory.LEAST_EQ", "whileTheory.LEAST_ELIM", "whileTheory.ITERATION", "whileTheory.FULL_LEAST_INTRO", "optionTheory.some_def", "optionTheory.SOME_DEF", "optionTheory.OPTREL_def", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MCOMP_def", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.OPTION_GUARD_def", "optionTheory.OPTION_CHOICE_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.OPTION_APPLY_def", "optionTheory.OPTION_ALL_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_SOME_APPLY", "optionTheory.some_intro", "optionTheory.some_F", "optionTheory.some_EQ", "optionTheory.some_elim", "optionTheory.SOME_APPLY_PERMUTE", "optionTheory.SOME_11", "optionTheory.OPTREL_THM", "optionTheory.OPTREL_SOME", "optionTheory.OPTREL_refl", "optionTheory.OPTREL_O", "optionTheory.OPTREL_MONO", "optionTheory.OPTREL_eq", "optionTheory.option_nchotomy", "optionTheory.OPTION_MCOMP_ID", "optionTheory.OPTION_MCOMP_ASSOC", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.option_Induct", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION", "optionTheory.OPTION_GUARD_EQ_THM", "optionTheory.OPTION_GUARD_COND", "optionTheory.OPTION_CHOICE_NONE", "optionTheory.OPTION_CHOICE_EQ_NONE", "optionTheory.option_CASES", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_eq", "optionTheory.option_case_cong", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.OPTION_APPLY_o", "optionTheory.OPTION_APPLY_MAP2", "optionTheory.OPTION_ALL_MONO", "optionTheory.OPTION_ALL_CONG", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "optionTheory.datatype_option", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(n :num) (l1 :α list) (l2 :α list). DROP n (l1 ++ l2) = DROP n l1 ++ DROP (n − LENGTH l1) l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(ls :α list) (f :β -> α). EVERY (λ(x :α). ∃(y :β). x = f y) ls ⇒ ∃(l :β list). ls = MAP f l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(opt :α option). (∃(x :α). opt = SOME x) ∨ opt = (NONE :α option)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "optionTheory.some_def", "optionTheory.SOME_DEF", "optionTheory.OPTREL_def", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MCOMP_def", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.OPTION_GUARD_def", "optionTheory.OPTION_CHOICE_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.OPTION_APPLY_def", "optionTheory.OPTION_ALL_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_SOME_APPLY", "optionTheory.some_intro", "optionTheory.some_F", "optionTheory.some_EQ", "optionTheory.some_elim", "optionTheory.SOME_APPLY_PERMUTE", "optionTheory.SOME_11", "optionTheory.OPTREL_THM", "optionTheory.OPTREL_SOME", "optionTheory.OPTREL_refl", "optionTheory.OPTREL_O", "optionTheory.OPTREL_MONO", "optionTheory.OPTREL_eq", "optionTheory.option_nchotomy", "optionTheory.OPTION_MCOMP_ID", "optionTheory.OPTION_MCOMP_ASSOC", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.option_Induct", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION", "optionTheory.OPTION_GUARD_EQ_THM", "optionTheory.OPTION_GUARD_COND", "optionTheory.OPTION_CHOICE_NONE", "optionTheory.OPTION_CHOICE_EQ_NONE", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_eq", "optionTheory.option_case_cong", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.OPTION_APPLY_o", "optionTheory.OPTION_APPLY_MAP2", "optionTheory.OPTION_ALL_MONO", "optionTheory.OPTION_ALL_CONG", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "SURJ (f :α -> β) (s :α -> bool) (t :β -> bool) ⇒ ∃(g :β -> α). INJ g t s ∧ ∀(y :β). y ∈ t ⇒ f (g y) = y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(R :α -> α -> bool) (x :α) (y :α) (z :α). R꙳ x y ∧ R y z ⇒ R⁺ x z": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.antisymmetric_def", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.symmetric_RC", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RC_REFLEXIVE", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.antisymmetric_RC", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(f :α -> β) (s :α -> bool) (t :β -> bool). INJ f s t ∧ INFINITE s ⇒ INFINITE t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_COUNT", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(x1 :α) (l1 :α list) (x2 :α) (l2 :α list). SNOC x1 l1 = SNOC x2 l2 ⇒ LENGTH l1 = LENGTH l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(x :α) (l :α list). TL (SNOC x l) = if NULL l then ([] :α list) else SNOC x (TL l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(P :α list -> bool) (n :num). (∀(l :α list). LENGTH l = SUC n ⇒ P l) ⇔ ∀(l :α list). LENGTH l = n ⇒ (λ(l :α list). ∀(x :α). P (x::l)) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.SING_HD", "listTheory.NULL_LENGTH", "listTheory.NULL_EQ", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_APPEND", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "(x :α) ∈ RDOM (RRESTRICT (R :α -> β -> bool) (s :α -> bool)) ⇔ x ∈ RDOM R ∧ x ∈ s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.WeakOrder", "relationTheory.WeakLinearOrder", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.STRORD", "relationTheory.StrongOrder", "relationTheory.StrongLinearOrder", "relationTheory.SC_DEF", "relationTheory.RUNIV", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RRESTRICT_DEF", "relationTheory.RRANGE", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RDOM_DEF", "relationTheory.RCOMPL", "relationTheory.RC_DEF", "relationTheory.PreOrder", "relationTheory.Order", "relationTheory.O_DEF", "relationTheory.LinearOrder", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.diag_def", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.WeakOrder_EQ", "relationTheory.WeakOrd_Ord", "relationTheory.WeakLinearOrder_dichotomy", "relationTheory.trichotomous_STRORD", "relationTheory.trichotomous_RC", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_O_RSUBSET", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_RSUBSET", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRORD_Strong", "relationTheory.STRORD_RC", "relationTheory.STRORD_AND_NOT_Id", "relationTheory.StrongOrd_Ord", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNIV_SUBSET", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.RTC_RINTER", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RSUBSET_WeakOrder", "relationTheory.RSUBSET_antisymmetric", "relationTheory.RSUBSET_ANTISYM", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.REMPTY_SUBSET", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_Id_RSUBSET", "relationTheory.reflexive_EQC", "relationTheory.RC_Weak", "relationTheory.RC_SUBSET", "relationTheory.RC_STRORD", "relationTheory.RC_RTC", "relationTheory.RC_OR_Id", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.O_MONO", "relationTheory.O_Id", "relationTheory.O_ASSOC", "relationTheory.NOT_INVOL", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.irrefl_trans_implies_antisym", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_Id", "relationTheory.inv_EQC", "relationTheory.inv_diag", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IN_RRANGE", "relationTheory.IN_RDOM_RUNION", "relationTheory.IN_RDOM", "relationTheory.IDEM_TC", "relationTheory.IDEM_STRORD", "relationTheory.IDEM_SC", "relationTheory.IDEM_RTC", "relationTheory.IDEM_RC", "relationTheory.IDEM", "relationTheory.Id_O", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.equivalence_inv_identity", "relationTheory.EqIsBothRSUBSET", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(x :α) (l :α list). FRONT (SNOC x l) = l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.SNOC", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_DROP", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(l :α list) (x :α). MEM x (REVERSE l) ⇔ MEM x l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.TL", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "∀(l :α list). NULL l ⇔ FOLDL (λ(x :bool) (l' :α). F) T l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(l :α list) (m :num) (x :α). MEM x (DROP m l) ⇒ MEM x l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(x :α + β). ISR x ⇒ (INR (OUTR x) :α + β) = x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "sumTheory.sum_TY_DEF", "sumTheory.sum_ISO_DEF", "sumTheory.OUTR", "sumTheory.OUTL", "sumTheory.ISR", "sumTheory.ISL", "sumTheory.IS_SUM_REP", "sumTheory.INR_DEF", "sumTheory.INL_DEF", "sumTheory.sum_INDUCT", "sumTheory.sum_distinct1", "sumTheory.sum_distinct", "sumTheory.sum_CASES", "sumTheory.sum_Axiom", "sumTheory.sum_axiom", "sumTheory.ISL_OR_ISR", "sumTheory.INR_neq_INL", "sumTheory.INR_INL_11", "sumTheory.INR_11", "sumTheory.INL_11", "sumTheory.INL", "sumTheory.FORALL_SUM", "sumTheory.EXISTS_SUM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "(([(f :β -> α)] <*> (l :β list)) :α list) = MAP f l": ["listTheory.LENGTH_NIL_SYM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(n :num) (x :α). SNOC x (REPLICATE n x) = REPLICATE (SUC n) x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "rich_listTheory.EVERY2_APPEND_suff", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "rich_listTheory.EVERY2_APPEND", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "rich_listTheory.ALL_DISTINCT_DROP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.longest_prefix_def", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.common_prefixes_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_TAKE_LEQ", "rich_listTheory.ZIP_TAKE", "rich_listTheory.ZIP_SNOC", "rich_listTheory.ZIP_COUNT_LIST", "rich_listTheory.ZIP_APPEND", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.two_common_prefixes", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_REVERSE", "rich_listTheory.TAKE_PRE_LENGTH", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_EL_SNOC", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_EVERY", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SNOC_EL_TAKE", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_REVERSE", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_LASTN_BUTLASTN", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_ZIP", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REVERSE_DROP", "rich_listTheory.REPLICATE_NIL", "rich_listTheory.REPLICATE_GENLIST", "rich_listTheory.REPLICATE_compute", "rich_listTheory.REPLICATE_APPEND", "rich_listTheory.prefixes_is_prefix_total", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.OR_EL_FOLDR", "rich_listTheory.OR_EL_FOLDL", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.NIL_IN_common_prefixes", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SING_APPEND", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_REPLICATE", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_LAST_FRONT", "rich_listTheory.MEM_LAST", "rich_listTheory.MEM_FRONT", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_COUNT_LIST", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_SND_FILTER_NEQ", "rich_listTheory.MAP_REVERSE", "rich_listTheory.map_replicate", "rich_listTheory.MAP_FST_funs", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.MAP_COUNT_LIST", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.longest_prefix_UNIQUE", "rich_listTheory.longest_prefix_SING", "rich_listTheory.longest_prefix_PAIR", "rich_listTheory.longest_prefix_NIL", "rich_listTheory.longest_prefix_EMPTY", "rich_listTheory.LIST_TO_SET_EQ_SING", "rich_listTheory.LIST_REL_REVERSE_EQ", "rich_listTheory.LIST_REL_REPLICATE_same", "rich_listTheory.LIST_REL_GENLIST", "rich_listTheory.LIST_REL_APPEND_SING", "rich_listTheory.LIST_ELEM_COUNT_THM", "rich_listTheory.LIST_ELEM_COUNT_MEM", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_REPLICATE", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LESS", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_COUNT_LIST", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_REVERSE", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_DROP", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_TRANS", "rich_listTheory.IS_PREFIX_SNOC", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_REFL", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_NIL", "rich_listTheory.IS_PREFIX_LENGTH_ANTI", "rich_listTheory.IS_PREFIX_LENGTH", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_BUTLAST", "rich_listTheory.IS_PREFIX_APPENDS", "rich_listTheory.IS_PREFIX_APPEND3", "rich_listTheory.IS_PREFIX_APPEND2", "rich_listTheory.IS_PREFIX_APPEND1", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX_ANTISYM", "rich_listTheory.IS_PREFIX", "rich_listTheory.FRONT_APPEND", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FINITE_prefix", "rich_listTheory.FINITE_common_prefixes", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_REPLICATE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.every_count_list", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.EVERY2_TAKE", "rich_listTheory.EVERY2_REVERSE1", "rich_listTheory.EVERY2_DROP", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_REPLICATE", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.el_map_count", "rich_listTheory.EL_LENGTH_APPEND_rwt", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_FRONT", "rich_listTheory.EL_ELL", "rich_listTheory.EL_COUNT_LIST", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_REVERSE", "rich_listTheory.DROP_REPLICATE", "rich_listTheory.DROP_LENGTH_NIL_rwt", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_LASTN", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_EL_CONS", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_CONS_EL", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.count_list_sub1", "rich_listTheory.COUNT_LIST_SNOC", "rich_listTheory.COUNT_LIST_GENLIST", "rich_listTheory.COUNT_LIST_COUNT", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.COUNT_LIST_ADD", "rich_listTheory.CONS_APPEND", "rich_listTheory.common_prefixes_PAIR", "rich_listTheory.common_prefixes_NONEMPTY", "rich_listTheory.common_prefixes_NIL", "rich_listTheory.common_prefixes_BIGINTER", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_REVERSE", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_SNOC1", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.APPEND_ASSOC_CONS", "rich_listTheory.AND_EL_FOLDR", "rich_listTheory.AND_EL_FOLDL", "rich_listTheory.ALL_EL_MAP", "rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP"], "∀(s :α -> bool) (x :α) (y :α). x INSERT s = {y} ⇔ x = y ∧ s ⊆ {y}": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT_EXPAND", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INTER", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(n :num) (l1 :α list) (l2 :α list). l1 ≼ l2 ∧ n < LENGTH l1 ∧ n < LENGTH l2 ⇒ EL n l1 = EL n l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(R :α -> α -> bool). reflexive (RC R)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.antisymmetric_def", "relationTheory.RTC_TRANSITIVE", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_RULES", "relationTheory.SC_SYMMETRIC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_cases", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "(R1 :γ -> β -> bool) ∘ᵣ (R2 :δ -> γ -> bool) ∘ᵣ (R3 :α -> δ -> bool) = (R1 ∘ᵣ R2) ∘ᵣ R3": ["relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.WeakOrder", "relationTheory.WeakLinearOrder", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.STRORD", "relationTheory.StrongOrder", "relationTheory.StrongLinearOrder", "relationTheory.SC_DEF", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RCOMPL", "relationTheory.RC_DEF", "relationTheory.PreOrder", "relationTheory.Order", "relationTheory.O_DEF", "relationTheory.LinearOrder", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.diag_def", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.WeakOrder_EQ", "relationTheory.WeakOrd_Ord", "relationTheory.WeakLinearOrder_dichotomy", "relationTheory.trichotomous_STRORD", "relationTheory.trichotomous_RC", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_O_RSUBSET", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_RSUBSET", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRORD_Strong", "relationTheory.STRORD_RC", "relationTheory.STRORD_AND_NOT_Id", "relationTheory.StrongOrd_Ord", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.RTC_RINTER", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RSUBSET_WeakOrder", "relationTheory.RSUBSET_antisymmetric", "relationTheory.RSUBSET_ANTISYM", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_Id_RSUBSET", "relationTheory.reflexive_EQC", "relationTheory.RC_Weak", "relationTheory.RC_SUBSET", "relationTheory.RC_STRORD", "relationTheory.RC_RTC", "relationTheory.RC_OR_Id", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.NOT_INVOL", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.irrefl_trans_implies_antisym", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_EQC", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IDEM_TC", "relationTheory.IDEM_STRORD", "relationTheory.IDEM_SC", "relationTheory.IDEM_RTC", "relationTheory.IDEM_RC", "relationTheory.IDEM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.equivalence_inv_identity", "relationTheory.EqIsBothRSUBSET", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence"], "∀(n :num). (0 :num) < n ⇒ ∀(x :α) (l :α list). ELL n (SNOC x l) = ELL (PRE n) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.ALL_EL_MAP"], "∀(l1 :α list) (l2 :α list). ALL_DISTINCT (l1 ++ l2) ⇔ ALL_DISTINCT l1 ∧ ALL_DISTINCT l2 ∧ ∀(e :α). MEM e l1 ⇒ ¬MEM e l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.HD_DROP", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP"], "∀(l :α list). l ≠ ([] :α list) ⇒ BUTLASTN (1 :num) l = FRONT l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.ELL_compute", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.ALL_EL_MAP"], "∀(s :α -> bool) (t :α -> bool). BIGUNION {s; t} = s ∪ t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_COUNT", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(l2 :α list) (l1 :α list). ¬NULL l2 ⇒ EL (LENGTH l1) (l1 ++ l2) = HD l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "reflexive ((R1 :α -> α -> bool) LEX (R2 :β -> β -> bool)) ⇔ reflexive R1 ∨ reflexive R2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.RPROD_DEF", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.WF_RPROD", "pairTheory.WF_LEX", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.transitive_LEX", "pairTheory.total_LEX", "pairTheory.SND_PAIR_MAP", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LEX_MONO", "pairTheory.LEX_DEF_THM", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.WeakOrder", "relationTheory.WeakLinearOrder", "relationTheory.WCR_def", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.STRORD", "relationTheory.StrongOrder", "relationTheory.StrongLinearOrder", "relationTheory.SN_def", "relationTheory.SC_DEF", "relationTheory.RUNIV", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RRESTRICT_DEF", "relationTheory.RRANGE", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RDOM_DELETE_DEF", "relationTheory.RDOM_DEF", "relationTheory.RCOMPL", "relationTheory.rcdiamond_def", "relationTheory.RC_DEF", "relationTheory.PreOrder", "relationTheory.Order", "relationTheory.O_DEF", "relationTheory.nf_def", "relationTheory.LinearOrder", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.diamond_def", "relationTheory.diag_def", "relationTheory.CR_def", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.WeakOrder_EQ", "relationTheory.WeakOrd_Ord", "relationTheory.WeakLinearOrder_dichotomy", "relationTheory.trichotomous_STRORD", "relationTheory.trichotomous_RC", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_O_RSUBSET", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_RSUBSET", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRORD_Strong", "relationTheory.STRORD_RC", "relationTheory.STRORD_AND_NOT_Id", "relationTheory.StrongOrd_Ord", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNIV_SUBSET", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.RTC_RINTER", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RSUBSET_WeakOrder", "relationTheory.RSUBSET_antisymmetric", "relationTheory.RSUBSET_ANTISYM", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.REMPTY_SUBSET", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_Id_RSUBSET", "relationTheory.reflexive_EQC", "relationTheory.rcdiamond_diamond", "relationTheory.RC_Weak", "relationTheory.RC_SUBSET", "relationTheory.RC_STRORD", "relationTheory.RC_RTC", "relationTheory.RC_OR_Id", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.O_MONO", "relationTheory.O_Id", "relationTheory.O_ASSOC", "relationTheory.NOT_INVOL", "relationTheory.Newmans_lemma", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.irrefl_trans_implies_antisym", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_Id", "relationTheory.inv_EQC", "relationTheory.inv_diag", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IN_RRANGE", "relationTheory.IN_RDOM_RUNION", "relationTheory.IN_RDOM_RRESTRICT", "relationTheory.IN_RDOM_DELETE", "relationTheory.IN_RDOM", "relationTheory.IDEM_TC", "relationTheory.IDEM_STRORD", "relationTheory.IDEM_SC", "relationTheory.IDEM_RTC", "relationTheory.IDEM_RC", "relationTheory.IDEM", "relationTheory.Id_O", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.establish_CR", "relationTheory.equivalence_inv_identity", "relationTheory.EqIsBothRSUBSET", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.diamond_TC_diamond", "relationTheory.diamond_RC_diamond", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "INJ (f :α -> β) (s :α -> bool) (IMAGE f s) ⇒ (countable (IMAGE f s) ⇔ countable s)": ["pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "MAP (f :β -> α) (LIST_BIND (l :γ list) (g :γ -> β list)) = LIST_BIND l (MAP f ∘ g)": ["listTheory.LENGTH_NIL_SYM", "combinTheory.W_DEF", "combinTheory.UPDATE_def", "combinTheory.S_DEF", "combinTheory.RIGHT_ID_DEF", "combinTheory.o_DEF", "combinTheory.MONOID_DEF", "combinTheory.LEFT_ID_DEF", "combinTheory.K_DEF", "combinTheory.I_DEF", "combinTheory.FCOMM_DEF", "combinTheory.FAIL_DEF", "combinTheory.COMM_DEF", "combinTheory.C_DEF", "combinTheory.ASSOC_DEF", "combinTheory.APP_DEF", "combinTheory.W_THM", "combinTheory.UPDATE_EQ", "combinTheory.UPDATE_COMMUTES", "combinTheory.UPDATE_APPLY_IMP_ID", "combinTheory.UPDATE_APPLY_ID_RWT", "combinTheory.UPDATE_APPLY_ID", "combinTheory.UPDATE_APPLY", "combinTheory.UPD_SAME_KEY_UNWIND", "combinTheory.UPD11_SAME_KEY_AND_BASE", "combinTheory.UPD11_SAME_BASE", "combinTheory.SAME_KEY_UPDATE_DIFFER", "combinTheory.S_THM", "combinTheory.S_ABS_R", "combinTheory.S_ABS_L", "combinTheory.o_THM", "combinTheory.o_ASSOC'", "combinTheory.o_ASSOC", "combinTheory.o_ABS_R", "combinTheory.o_ABS_L", "combinTheory.MONOID_DISJ_F", "combinTheory.MONOID_CONJ_T", "combinTheory.literal_case_FORALL_ELIM", "combinTheory.LET_FORALL_ELIM", "combinTheory.K_THM", "combinTheory.K_o_THM", "combinTheory.I_THM", "combinTheory.I_o_ID", "combinTheory.GEN_literal_case_RATOR", "combinTheory.GEN_literal_case_RAND", "combinTheory.GEN_LET_RATOR", "combinTheory.GEN_LET_RAND", "combinTheory.FCOMM_ASSOC", "combinTheory.FAIL_THM", "combinTheory.C_THM", "combinTheory.C_ABS_L", "combinTheory.ASSOC_SYM", "combinTheory.ASSOC_DISJ", "combinTheory.ASSOC_CONJ", "combinTheory.APPLY_UPDATE_THM", "combinTheory.APPLY_UPDATE_ID", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "FUNSET 𝕌(:α) 𝕌(:β) = 𝕌(:α -> β)": ["pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(A :bool) (B :bool) (C :bool). A ∧ B ⇒ C ⇔ A ⇒ B ⇒ C": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "MAP (SND :β # α -> α) (FILTER (λ((x :β),(y :α)). y ≠ (z :α)) (ls :(β # α) list)) = FILTER (λ(y :α). z ≠ y) (MAP (SND :β # α -> α) ls)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.RPROD_DEF", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.WF_RPROD", "pairTheory.WF_LEX", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.transitive_LEX", "pairTheory.total_LEX", "pairTheory.symmetric_LEX", "pairTheory.SND_PAIR_MAP", "pairTheory.SND_EQ_EQUIV", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.reflexive_LEX", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LEX_MONO", "pairTheory.LEX_DEF_THM", "pairTheory.LEX_CONG", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST_EQ_EQUIV", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "REPLICATE (n :num) (a :α) ++ REPLICATE (m :num) a = REPLICATE (n + m) a": ["listTheory.LENGTH_NIL_SYM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "rich_listTheory.EVERY2_APPEND_suff", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "rich_listTheory.EVERY2_APPEND", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "rich_listTheory.ALL_DISTINCT_DROP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.longest_prefix_def", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.common_prefixes_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_TAKE_LEQ", "rich_listTheory.ZIP_TAKE", "rich_listTheory.ZIP_SNOC", "rich_listTheory.ZIP_COUNT_LIST", "rich_listTheory.ZIP_APPEND", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.two_common_prefixes", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_REVERSE", "rich_listTheory.TAKE_PRE_LENGTH", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_EL_SNOC", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_EVERY", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SNOC_EL_TAKE", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_REVERSE", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_LASTN_BUTLASTN", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_ZIP", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REVERSE_DROP", "rich_listTheory.REPLICATE_NIL", "rich_listTheory.REPLICATE_GENLIST", "rich_listTheory.REPLICATE_compute", "rich_listTheory.prefixes_is_prefix_total", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.OR_EL_FOLDR", "rich_listTheory.OR_EL_FOLDL", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.NIL_IN_common_prefixes", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SING_APPEND", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_REPLICATE", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_LAST_FRONT", "rich_listTheory.MEM_LAST", "rich_listTheory.MEM_FRONT", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_COUNT_LIST", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_SND_FILTER_NEQ", "rich_listTheory.MAP_REVERSE", "rich_listTheory.map_replicate", "rich_listTheory.MAP_FST_funs", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.MAP_COUNT_LIST", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.longest_prefix_UNIQUE", "rich_listTheory.longest_prefix_SING", "rich_listTheory.longest_prefix_PAIR", "rich_listTheory.longest_prefix_NIL", "rich_listTheory.longest_prefix_EMPTY", "rich_listTheory.LIST_TO_SET_EQ_SING", "rich_listTheory.LIST_REL_REVERSE_EQ", "rich_listTheory.LIST_REL_GENLIST", "rich_listTheory.LIST_REL_APPEND_SING", "rich_listTheory.LIST_ELEM_COUNT_THM", "rich_listTheory.LIST_ELEM_COUNT_MEM", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_REPLICATE", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LESS", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_COUNT_LIST", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_REVERSE", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_DROP", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_TRANS", "rich_listTheory.IS_PREFIX_SNOC", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_REFL", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_NIL", "rich_listTheory.IS_PREFIX_LENGTH_ANTI", "rich_listTheory.IS_PREFIX_LENGTH", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_BUTLAST", "rich_listTheory.IS_PREFIX_APPENDS", "rich_listTheory.IS_PREFIX_APPEND3", "rich_listTheory.IS_PREFIX_APPEND2", "rich_listTheory.IS_PREFIX_APPEND1", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX_ANTISYM", "rich_listTheory.IS_PREFIX", "rich_listTheory.FRONT_APPEND", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FINITE_prefix", "rich_listTheory.FINITE_common_prefixes", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_REPLICATE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.every_count_list", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.EVERY2_TAKE", "rich_listTheory.EVERY2_REVERSE1", "rich_listTheory.EVERY2_DROP", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_REPLICATE", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.el_map_count", "rich_listTheory.EL_LENGTH_APPEND_rwt", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_FRONT", "rich_listTheory.EL_ELL", "rich_listTheory.EL_COUNT_LIST", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_REVERSE", "rich_listTheory.DROP_LENGTH_NIL_rwt", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_LASTN", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_EL_CONS", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_CONS_EL", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.count_list_sub1", "rich_listTheory.COUNT_LIST_SNOC", "rich_listTheory.COUNT_LIST_GENLIST", "rich_listTheory.COUNT_LIST_COUNT", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.COUNT_LIST_ADD", "rich_listTheory.CONS_APPEND", "rich_listTheory.common_prefixes_PAIR", "rich_listTheory.common_prefixes_NONEMPTY", "rich_listTheory.common_prefixes_NIL", "rich_listTheory.common_prefixes_BIGINTER", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_REVERSE", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_SNOC1", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.APPEND_ASSOC_CONS", "rich_listTheory.AND_EL_FOLDR", "rich_listTheory.AND_EL_FOLDL", "rich_listTheory.ALL_EL_MAP", "rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP"], "∀(b :bool). ¬b ⇒ (b ⇔ F)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(x :α) (y :β) (a :α) (b :β). (x,y) = (a,b) ⇔ x = a ∧ y = b": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "pairTheory.prod_TY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.PAIR_EQ", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(f :α -> β) (n :num) (x :α). MAP f (REPLICATE n x) = REPLICATE n (f x)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "rich_listTheory.EVERY2_APPEND_suff", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "rich_listTheory.EVERY2_APPEND", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "rich_listTheory.ALL_DISTINCT_DROP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.longest_prefix_def", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.common_prefixes_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_TAKE_LEQ", "rich_listTheory.ZIP_TAKE", "rich_listTheory.ZIP_SNOC", "rich_listTheory.ZIP_COUNT_LIST", "rich_listTheory.ZIP_APPEND", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.two_common_prefixes", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_REVERSE", "rich_listTheory.TAKE_PRE_LENGTH", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_EL_SNOC", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_EVERY", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SNOC_EL_TAKE", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_REVERSE", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_LASTN_BUTLASTN", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_ZIP", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REVERSE_DROP", "rich_listTheory.REPLICATE_GENLIST", "rich_listTheory.REPLICATE_compute", "rich_listTheory.prefixes_is_prefix_total", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.OR_EL_FOLDR", "rich_listTheory.OR_EL_FOLDL", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.NIL_IN_common_prefixes", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SING_APPEND", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_REPLICATE", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_LAST_FRONT", "rich_listTheory.MEM_LAST", "rich_listTheory.MEM_FRONT", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_COUNT_LIST", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_SND_FILTER_NEQ", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FST_funs", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.MAP_COUNT_LIST", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.longest_prefix_UNIQUE", "rich_listTheory.longest_prefix_SING", "rich_listTheory.longest_prefix_PAIR", "rich_listTheory.longest_prefix_NIL", "rich_listTheory.longest_prefix_EMPTY", "rich_listTheory.LIST_TO_SET_EQ_SING", "rich_listTheory.LIST_REL_REVERSE_EQ", "rich_listTheory.LIST_REL_GENLIST", "rich_listTheory.LIST_REL_APPEND_SING", "rich_listTheory.LIST_ELEM_COUNT_THM", "rich_listTheory.LIST_ELEM_COUNT_MEM", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_REPLICATE", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LESS", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_COUNT_LIST", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_REVERSE", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_DROP", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_TRANS", "rich_listTheory.IS_PREFIX_SNOC", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_REFL", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_NIL", "rich_listTheory.IS_PREFIX_LENGTH_ANTI", "rich_listTheory.IS_PREFIX_LENGTH", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_BUTLAST", "rich_listTheory.IS_PREFIX_APPENDS", "rich_listTheory.IS_PREFIX_APPEND3", "rich_listTheory.IS_PREFIX_APPEND2", "rich_listTheory.IS_PREFIX_APPEND1", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX_ANTISYM", "rich_listTheory.IS_PREFIX", "rich_listTheory.FRONT_APPEND", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FINITE_prefix", "rich_listTheory.FINITE_common_prefixes", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_REPLICATE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.every_count_list", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.EVERY2_TAKE", "rich_listTheory.EVERY2_REVERSE1", "rich_listTheory.EVERY2_DROP", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_REPLICATE", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.el_map_count", "rich_listTheory.EL_LENGTH_APPEND_rwt", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_FRONT", "rich_listTheory.EL_ELL", "rich_listTheory.EL_COUNT_LIST", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_REVERSE", "rich_listTheory.DROP_LENGTH_NIL_rwt", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_LASTN", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_EL_CONS", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_CONS_EL", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.count_list_sub1", "rich_listTheory.COUNT_LIST_SNOC", "rich_listTheory.COUNT_LIST_GENLIST", "rich_listTheory.COUNT_LIST_COUNT", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.COUNT_LIST_ADD", "rich_listTheory.CONS_APPEND", "rich_listTheory.common_prefixes_PAIR", "rich_listTheory.common_prefixes_NONEMPTY", "rich_listTheory.common_prefixes_NIL", "rich_listTheory.common_prefixes_BIGINTER", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_REVERSE", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_SNOC1", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.APPEND_ASSOC_CONS", "rich_listTheory.AND_EL_FOLDR", "rich_listTheory.AND_EL_FOLDL", "rich_listTheory.ALL_EL_MAP", "rich_listTheory.ALL_DISTINCT_MEM_ZIP_MAP"], "∀(n :num) (l :α list). n < LENGTH l ⇒ SNOC (EL n l) (TAKE n l) = TAKE (SUC n) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "PMATCH_ROW_COND_EX (i :α) (p :β -> α) (g :β -> bool) ⇒ PMATCH_ROW p g (r :β -> γ) i = SOME (r (@(x :β). PMATCH_ROW_COND p g i x))": ["patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_DISJ_def", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_def", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_def", "patternMatchesTheory.PMATCH_ROW_def", "patternMatchesTheory.PMATCH_ROW_COND_EX_def", "patternMatchesTheory.PMATCH_ROW_COND_def", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_def", "patternMatchesTheory.PMATCH_INCOMPLETE_def", "patternMatchesTheory.PMATCH_EQUIV_ROWS_def", "patternMatchesTheory.PMATCH_def", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_OK", "patternMatchesTheory.some_var_bool_T", "patternMatchesTheory.some_var_bool_F", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_DISJ_THM", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_THM", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_REWRITE", "patternMatchesTheory.REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN_VAR", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_SUC", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_NIL", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_LT", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_GE", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_0", "patternMatchesTheory.PMATCH_ROW_EXTEND_INPUT", "patternMatchesTheory.PMATCH_ROW_EQ_SOME", "patternMatchesTheory.PMATCH_ROW_EQ_NONE", "patternMatchesTheory.PMATCH_ROW_EQ_AUX", "patternMatchesTheory.PMATCH_ROW_CONG", "patternMatchesTheory.PMATCH_ROW_COND_EX_WEAKEN", "patternMatchesTheory.PMATCH_ROW_COND_EX_IMP_REWRITE", "patternMatchesTheory.PMATCH_ROW_COND_EX_FULL_DEF", "patternMatchesTheory.PMATCH_ROW_COND_EX_FALSE", "patternMatchesTheory.PMATCH_ROW_COND_DEF_GSYM", "patternMatchesTheory.PMATCH_REMOVE_ARB_NO_OVERLAP", "patternMatchesTheory.PMATCH_REMOVE_ARB", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_REWRITES", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_CONTRADICT", "patternMatchesTheory.PMATCH_INTRO_CATCHALL", "patternMatchesTheory.PMATCH_EXTEND_OLD", "patternMatchesTheory.PMATCH_EXTEND_BOTH_ID", "patternMatchesTheory.PMATCH_EXTEND_BOTH", "patternMatchesTheory.PMATCH_EXTEND_BASE", "patternMatchesTheory.PMATCH_EVAL_MATCH", "patternMatchesTheory.PMATCH_EVAL", "patternMatchesTheory.PMATCH_EQUIV_ROWS_MATCH", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_3", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_2", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_1", "patternMatchesTheory.PMATCH_EQUIV_ROWS_EQUIV_EXPAND", "patternMatchesTheory.PMATCH_EQUIV_ROWS_CONS_NONE", "patternMatchesTheory.PMATCH_EQUIV_APPEND", "patternMatchesTheory.PMATCH_CONG", "patternMatchesTheory.PMATCH_COND_SELECT_UNIQUE", "patternMatchesTheory.PMATCH_APPEND_SEM", "patternMatchesTheory.LENGTH_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.LENGTH_STRONGEST_REDUNDANT_ROWS_INFO", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_NIL", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_CONS", "patternMatchesTheory.FST_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.EL_STRONGEST_REDUNDANT_ROWS_INFO", "patternMatchesTheory.EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.EL1_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_THMS", "optionTheory.some_def", "optionTheory.SOME_DEF", "optionTheory.OPTREL_def", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MCOMP_def", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.OPTION_GUARD_def", "optionTheory.OPTION_CHOICE_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.OPTION_APPLY_def", "optionTheory.OPTION_ALL_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_SOME_APPLY", "optionTheory.some_intro", "optionTheory.some_F", "optionTheory.some_EQ", "optionTheory.some_elim", "optionTheory.SOME_APPLY_PERMUTE", "optionTheory.SOME_11", "optionTheory.OPTREL_THM", "optionTheory.OPTREL_SOME", "optionTheory.OPTREL_refl", "optionTheory.OPTREL_O", "optionTheory.OPTREL_MONO", "optionTheory.OPTREL_eq", "optionTheory.option_nchotomy", "optionTheory.OPTION_MCOMP_ID", "optionTheory.OPTION_MCOMP_ASSOC", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.option_Induct", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION", "optionTheory.OPTION_GUARD_EQ_THM", "optionTheory.OPTION_GUARD_COND", "optionTheory.OPTION_CHOICE_NONE", "optionTheory.OPTION_CHOICE_EQ_NONE", "optionTheory.option_CASES", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_eq", "optionTheory.option_case_cong", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.OPTION_APPLY_o", "optionTheory.OPTION_APPLY_MAP2", "optionTheory.OPTION_ALL_MONO", "optionTheory.OPTION_ALL_CONG", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "optionTheory.datatype_option"], "∀(R1 :α -> α -> bool) (R2 :α -> α -> bool) (x :α) (y :α). (R1 ∩ᵣ R2)꙳ x y ⇒ (R1꙳ ∩ᵣ R2꙳) x y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.O_DEF", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_EQC", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.NOT_INVOL", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_EQC", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IDEM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.equivalence_inv_identity", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(P :α -> bool) (a :α) (s :α -> bool). (∃(x :α). x ∈ a INSERT s ∧ P x) ⇔ P a ∨ ∃(x :α). x ∈ s ∧ P x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(f :α -> γ) (g :β -> δ) (z :α + β). SUM_MAP f g z = if ISL z then (INL (f (OUTL z)) :γ + δ) else (INR (g (OUTR z)) :γ + δ)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "sumTheory.sum_TY_DEF", "sumTheory.SUM_MAP_def", "sumTheory.sum_ISO_DEF", "sumTheory.sum_case_def", "sumTheory.OUTR", "sumTheory.OUTL", "sumTheory.ISR", "sumTheory.ISL", "sumTheory.IS_SUM_REP", "sumTheory.INR_DEF", "sumTheory.INL_DEF", "sumTheory.sum_INDUCT", "sumTheory.sum_distinct1", "sumTheory.sum_distinct", "sumTheory.sum_CASES", "sumTheory.sum_case_cong", "sumTheory.sum_Axiom", "sumTheory.sum_axiom", "sumTheory.ISL_OR_ISR", "sumTheory.INR_neq_INL", "sumTheory.INR_INL_11", "sumTheory.INR_11", "sumTheory.INR", "sumTheory.INL_11", "sumTheory.INL", "sumTheory.FORALL_SUM", "sumTheory.EXISTS_SUM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(l :α list list). REVERSE (FLAT l) = FLAT (REVERSE (MAP (REVERSE :α list -> α list) l))": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(f1 :α -> β) (f2 :α -> β) (l :α list). MAP f1 l = MAP f2 l ⇔ ∀(e :α). MEM e l ⇒ f1 e = f2 e": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_CONS", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "($= :α -> α -> bool)ᵀ = ($= :α -> α -> bool)": ["relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.WeakOrder", "relationTheory.WeakLinearOrder", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.STRORD", "relationTheory.StrongOrder", "relationTheory.StrongLinearOrder", "relationTheory.SC_DEF", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RCOMPL", "relationTheory.RC_DEF", "relationTheory.PreOrder", "relationTheory.Order", "relationTheory.O_DEF", "relationTheory.LinearOrder", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.diag_def", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.WeakOrder_EQ", "relationTheory.WeakOrd_Ord", "relationTheory.WeakLinearOrder_dichotomy", "relationTheory.trichotomous_STRORD", "relationTheory.trichotomous_RC", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_O_RSUBSET", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_RSUBSET", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRORD_Strong", "relationTheory.STRORD_RC", "relationTheory.STRORD_AND_NOT_Id", "relationTheory.StrongOrd_Ord", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.RTC_RINTER", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RSUBSET_WeakOrder", "relationTheory.RSUBSET_antisymmetric", "relationTheory.RSUBSET_ANTISYM", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_Id_RSUBSET", "relationTheory.reflexive_EQC", "relationTheory.RC_Weak", "relationTheory.RC_SUBSET", "relationTheory.RC_STRORD", "relationTheory.RC_RTC", "relationTheory.RC_OR_Id", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.O_MONO", "relationTheory.O_Id", "relationTheory.O_ASSOC", "relationTheory.NOT_INVOL", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.irrefl_trans_implies_antisym", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_EQC", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IDEM_TC", "relationTheory.IDEM_STRORD", "relationTheory.IDEM_SC", "relationTheory.IDEM_RTC", "relationTheory.IDEM_RC", "relationTheory.IDEM", "relationTheory.Id_O", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.equivalence_inv_identity", "relationTheory.EqIsBothRSUBSET", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence"], "∀(n :num) (l :α list). n < LENGTH l ⇒ ELL n (REVERSE l) = ELL (PRE (LENGTH l − n)) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_SNOC", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_ELL", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.ALL_EL_MAP"], "∀(x :α) (s :α -> bool). (∅ :α -> bool) ≠ x INSERT s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "(¬SHORTLEX (R :α -> α -> bool) ([] :α list) ([] :α list) ∧ ¬SHORTLEX R ((h1 :α)::(t1 :α list)) ([] :α list)) ∧ SHORTLEX R ([] :α list) ((h2 :α)::(t2 :α list)) ∧ (SHORTLEX R (h1::t1) (h2::t2) ⇔ LENGTH t1 < LENGTH t2 ∨ LENGTH t1 = LENGTH t2 ∧ (R h1 h2 ∨ h1 = h2 ∧ SHORTLEX R t1 t2))": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "(∀(v :α). PMATCH_IS_EXHAUSTIVE v ([] :(α -> β option) list) ⇔ F) ∧ ∀(v :γ) (r :γ -> δ option) (rs :(γ -> δ option) list). PMATCH_IS_EXHAUSTIVE v (r::rs) ⇔ r v ≠ (NONE :δ option) ∨ PMATCH_IS_EXHAUSTIVE v rs": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_def", "patternMatchesTheory.PMATCH_ROW_def", "patternMatchesTheory.PMATCH_ROW_COND_EX_def", "patternMatchesTheory.PMATCH_ROW_COND_def", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_def", "patternMatchesTheory.PMATCH_INCOMPLETE_def", "patternMatchesTheory.PMATCH_EQUIV_ROWS_def", "patternMatchesTheory.PMATCH_def", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.some_var_bool_T", "patternMatchesTheory.some_var_bool_F", "patternMatchesTheory.REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN_VAR", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_SUC", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_NIL", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_LT", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_GE", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_0", "patternMatchesTheory.PMATCH_ROW_EXTEND_INPUT", "patternMatchesTheory.PMATCH_ROW_EQ_SOME", "patternMatchesTheory.PMATCH_ROW_EQ_NONE", "patternMatchesTheory.PMATCH_ROW_EQ_AUX", "patternMatchesTheory.PMATCH_ROW_CONG", "patternMatchesTheory.PMATCH_ROW_COND_DEF_GSYM", "patternMatchesTheory.PMATCH_REMOVE_ARB_NO_OVERLAP", "patternMatchesTheory.PMATCH_REMOVE_ARB", "patternMatchesTheory.PMATCH_INTRO_CATCHALL", "patternMatchesTheory.PMATCH_EXTEND_OLD", "patternMatchesTheory.PMATCH_EXTEND_BOTH_ID", "patternMatchesTheory.PMATCH_EXTEND_BOTH", "patternMatchesTheory.PMATCH_EXTEND_BASE", "patternMatchesTheory.PMATCH_EVAL_MATCH", "patternMatchesTheory.PMATCH_EVAL", "patternMatchesTheory.PMATCH_EQUIV_ROWS_MATCH", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_3", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_2", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_1", "patternMatchesTheory.PMATCH_EQUIV_ROWS_EQUIV_EXPAND", "patternMatchesTheory.PMATCH_EQUIV_ROWS_CONS_NONE", "patternMatchesTheory.PMATCH_EQUIV_APPEND", "patternMatchesTheory.PMATCH_CONG", "patternMatchesTheory.PMATCH_COND_SELECT_UNIQUE", "patternMatchesTheory.PMATCH_APPEND_SEM", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_NIL", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_CONS", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_THMS", "optionTheory.some_def", "optionTheory.SOME_DEF", "optionTheory.OPTREL_def", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MCOMP_def", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.OPTION_GUARD_def", "optionTheory.OPTION_CHOICE_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.OPTION_APPLY_def", "optionTheory.OPTION_ALL_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_SOME_APPLY", "optionTheory.some_intro", "optionTheory.some_F", "optionTheory.some_EQ", "optionTheory.some_elim", "optionTheory.SOME_APPLY_PERMUTE", "optionTheory.SOME_11", "optionTheory.OPTREL_THM", "optionTheory.OPTREL_SOME", "optionTheory.OPTREL_refl", "optionTheory.OPTREL_O", "optionTheory.OPTREL_MONO", "optionTheory.OPTREL_eq", "optionTheory.option_nchotomy", "optionTheory.OPTION_MCOMP_ID", "optionTheory.OPTION_MCOMP_ASSOC", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.option_Induct", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION", "optionTheory.OPTION_GUARD_EQ_THM", "optionTheory.OPTION_GUARD_COND", "optionTheory.OPTION_CHOICE_NONE", "optionTheory.OPTION_CHOICE_EQ_NONE", "optionTheory.option_CASES", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_eq", "optionTheory.option_case_cong", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.OPTION_APPLY_o", "optionTheory.OPTION_APPLY_MAP2", "optionTheory.OPTION_ALL_MONO", "optionTheory.OPTION_ALL_CONG", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "optionTheory.datatype_option", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "(∀(s :α -> bool). 𝕌(:α) ∩ s = s) ∧ ∀(s :α -> bool). s ∩ 𝕌(:α) = s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "∀(f :α -> β) (s :α -> bool) (t :β -> bool). BIJ f s t ⇔ f ∈ FUNSET s t ∧ ∀(y :β). y ∈ t ⇒ ∃!(x :α). x ∈ s ∧ y = f x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(n :num) (l :α list). n ≤ LENGTH l ⇒ BUTLASTN n l = TAKE (LENGTH l − n) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_SNOC", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_ELL", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.ALL_EL_MAP"], "∀(l2 :α list) (l1 :α list). IS_SUFFIX (REVERSE l1) (REVERSE l2) ⇔ l2 ≼ l1": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LASTN", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.ELL_compute", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.ALL_EL_MAP"], "∀(s :α -> bool) (x :α) (y :α). x ∈ s DELETE y ⇔ x ∈ s ∧ x ≠ y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(ls :α list) (n :num). n ≤ LENGTH ls ⇒ REVERSE (DROP n ls) = REVERSE (LASTN (LENGTH ls − n) ls)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "rich_listTheory.ALL_DISTINCT_DROP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.longest_prefix_def", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.common_prefixes_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_TAKE_LEQ", "rich_listTheory.ZIP_TAKE", "rich_listTheory.ZIP_SNOC", "rich_listTheory.ZIP_APPEND", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.two_common_prefixes", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_REVERSE", "rich_listTheory.TAKE_PRE_LENGTH", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_EL_SNOC", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_EVERY", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SNOC_EL_TAKE", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_REVERSE", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_LASTN_BUTLASTN", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REPLICATE_GENLIST", "rich_listTheory.REPLICATE_compute", "rich_listTheory.prefixes_is_prefix_total", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.OR_EL_FOLDR", "rich_listTheory.OR_EL_FOLDL", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.NIL_IN_common_prefixes", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SING_APPEND", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_REPLICATE", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_LAST_FRONT", "rich_listTheory.MEM_LAST", "rich_listTheory.MEM_FRONT", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_COUNT_LIST", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_SND_FILTER_NEQ", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FST_funs", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.MAP_COUNT_LIST", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.longest_prefix_UNIQUE", "rich_listTheory.longest_prefix_SING", "rich_listTheory.longest_prefix_PAIR", "rich_listTheory.longest_prefix_NIL", "rich_listTheory.longest_prefix_EMPTY", "rich_listTheory.LIST_TO_SET_EQ_SING", "rich_listTheory.LIST_ELEM_COUNT_THM", "rich_listTheory.LIST_ELEM_COUNT_MEM", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_REPLICATE", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_COUNT_LIST", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_REVERSE", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_DROP", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_TRANS", "rich_listTheory.IS_PREFIX_SNOC", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_REFL", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_NIL", "rich_listTheory.IS_PREFIX_LENGTH_ANTI", "rich_listTheory.IS_PREFIX_LENGTH", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_BUTLAST", "rich_listTheory.IS_PREFIX_APPENDS", "rich_listTheory.IS_PREFIX_APPEND3", "rich_listTheory.IS_PREFIX_APPEND2", "rich_listTheory.IS_PREFIX_APPEND1", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX_ANTISYM", "rich_listTheory.IS_PREFIX", "rich_listTheory.FRONT_APPEND", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FINITE_prefix", "rich_listTheory.FINITE_common_prefixes", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_REPLICATE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_REPLICATE", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.EL_LENGTH_APPEND_rwt", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_FRONT", "rich_listTheory.EL_ELL", "rich_listTheory.EL_COUNT_LIST", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_REVERSE", "rich_listTheory.DROP_LENGTH_NIL_rwt", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_LASTN", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_EL_CONS", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_CONS_EL", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_SNOC", "rich_listTheory.COUNT_LIST_GENLIST", "rich_listTheory.COUNT_LIST_COUNT", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.COUNT_LIST_ADD", "rich_listTheory.CONS_APPEND", "rich_listTheory.common_prefixes_PAIR", "rich_listTheory.common_prefixes_NONEMPTY", "rich_listTheory.common_prefixes_NIL", "rich_listTheory.common_prefixes_BIGINTER", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_REVERSE", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_SNOC1", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.APPEND_ASSOC_CONS", "rich_listTheory.AND_EL_FOLDR", "rich_listTheory.AND_EL_FOLDL", "rich_listTheory.ALL_EL_MAP"], "∀(f :α -> β). PREIMAGE f (∅ :β -> bool) = (∅ :α -> bool)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.PREIMAGE_def", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF_2", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF_EMPTY", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.PREIMAGE_applied", "pred_setTheory.PREIMAGE_ALT", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_EQ_SING", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_PREIMAGE", "pred_setTheory.IN_POW", "pred_setTheory.in_max_set", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT_EXPAND", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET_gen", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_SING", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INTER", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_SUBSET", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.count_add1", "pred_setTheory.count_add", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.compl_insert", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_LE", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_REST", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(f :α -> β) (l :α list). MAP f (REVERSE l) = REVERSE (MAP f l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(s :α -> bool) (t :α -> bool) (x :α). (s ∪ t) x ⇔ x ∈ s ∨ x ∈ t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "∀(n :num). LENGTH (COUNT_LIST n) = n": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.longest_prefix_def", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.common_prefixes_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_SNOC", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.two_common_prefixes", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_REVERSE", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_REVERSE", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_LASTN_BUTLASTN", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REPLICATE_compute", "rich_listTheory.prefixes_is_prefix_total", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.OR_EL_FOLDR", "rich_listTheory.OR_EL_FOLDL", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.NIL_IN_common_prefixes", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_REPLICATE", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.longest_prefix_UNIQUE", "rich_listTheory.longest_prefix_SING", "rich_listTheory.longest_prefix_PAIR", "rich_listTheory.longest_prefix_NIL", "rich_listTheory.longest_prefix_EMPTY", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_REPLICATE", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_REVERSE", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_DROP", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_TRANS", "rich_listTheory.IS_PREFIX_SNOC", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_REFL", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_NIL", "rich_listTheory.IS_PREFIX_LENGTH_ANTI", "rich_listTheory.IS_PREFIX_LENGTH", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_BUTLAST", "rich_listTheory.IS_PREFIX_APPENDS", "rich_listTheory.IS_PREFIX_APPEND3", "rich_listTheory.IS_PREFIX_APPEND2", "rich_listTheory.IS_PREFIX_APPEND1", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX_ANTISYM", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FINITE_prefix", "rich_listTheory.FINITE_common_prefixes", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_ELL", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_REVERSE", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_LASTN", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_GENLIST", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.common_prefixes_PAIR", "rich_listTheory.common_prefixes_NONEMPTY", "rich_listTheory.common_prefixes_NIL", "rich_listTheory.common_prefixes_BIGINTER", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_REVERSE", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.AND_EL_FOLDR", "rich_listTheory.AND_EL_FOLDL", "rich_listTheory.ALL_EL_MAP"], "(∃(p :α # β). (P :α # β -> bool) p) ⇔ ∃(p_1 :α) (p_2 :β). P (p_1,p_2)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.prod_TY_DEF", "pairTheory.PAIR", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.SND", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_Axiom", "pairTheory.LAMBDA_PROD", "pairTheory.FST", "pairTheory.ELIM_UNCURRY", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(l1 :α list) (l2 :α list). l1 ++ l2 = FOLDR (CONS :α -> α list -> α list) l2 l1": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(s :α -> bool) (x :α). COMPL (x INSERT s) = COMPL s DELETE x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF_2", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF_EMPTY", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_EQ_SING", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT_EXPAND", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET_gen", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_SING", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INTER", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_SUBSET", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.count_add1", "pred_setTheory.count_add", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_LE", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_REST", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(t :bool). t ⇒ T ⇔ T": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "countable (∅ :α -> bool)": ["pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(R :α -> α -> bool). Order R ⇔ StrongOrder (STRORD R)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.WeakOrder", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.STRORD", "relationTheory.StrongOrder", "relationTheory.SC_DEF", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RCOMPL", "relationTheory.RC_DEF", "relationTheory.PreOrder", "relationTheory.Order", "relationTheory.O_DEF", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.WeakOrder_EQ", "relationTheory.WeakOrd_Ord", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_O_RSUBSET", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_RSUBSET", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRORD_AND_NOT_Id", "relationTheory.StrongOrd_Ord", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.RTC_RINTER", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RSUBSET_WeakOrder", "relationTheory.RSUBSET_antisymmetric", "relationTheory.RSUBSET_ANTISYM", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_Id_RSUBSET", "relationTheory.reflexive_EQC", "relationTheory.RC_Weak", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_OR_Id", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.NOT_INVOL", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.irrefl_trans_implies_antisym", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_EQC", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IDEM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.equivalence_inv_identity", "relationTheory.EqIsBothRSUBSET", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(x :bool) (x' :bool) (y :bool) (y' :bool). (x ⇒ y ⇒ y') ∧ (¬y' ⇒ x' ⇒ x) ⇒ (x ⇒ y) ⇒ x' ⇒ y'": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "(x :α list) ≼ (y :α)::(ys :α list) ⇔ x = ([] :α list) ∨ ∃(xs :α list). x = y::xs ∧ xs ≼ ys": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_DROP", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(P :α -> bool) (l :α list) (m :num). EVERY P l ⇒ EVERY P (TAKE m l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "IS_SOME (OPTION_BIND (x :α option) (g :α -> β option)) ⇒ IS_SOME x": ["optionTheory.SOME_DEF", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_11", "optionTheory.option_nchotomy", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION"], "(∀(x :α) (y :α). (R :α -> α -> bool) x y ⇒ (Q :α -> α -> bool) x y) ⇒ R꙳ (x :α) (y :α) ⇒ Q꙳ x y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.antisymmetric_def", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RC", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(x :α list). x ≼ x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "count (0 :num) = (∅ :num -> bool)": ["numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COUNT_applied", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "(∀(x :α). (P :α -> bool) x ⇒ (Q :α -> bool) x) ⇒ EXISTS P (l :α list) ⇒ EXISTS Q l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_APPEND", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EVERY_SIMP", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "∀(s :α -> bool) (t :α -> bool). s ⊆ t ⇒ s ∩ t = s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "∀(R :α -> α -> bool) (x :α) (y :α). R x y ⇒ R⁺ x y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.antisymmetric_def", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_RULES", "relationTheory.symmetric_RC", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_cases", "relationTheory.RC_REFLEXIVE", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.antisymmetric_RC", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(xs :α list). FILTER (λ(x :α). T) xs = xs": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.SING_HD", "listTheory.NULL_LENGTH", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_APPEND", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_TL", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.FOLDR_CONS", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "∀(s :α -> bool). (λ(x :α). x) PERMUTES s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(l1 :α list) (n :num). LENGTH l1 ≤ n ⇒ ∀(l2 :α list). TAKE n (l1 ++ l2) = l1 ++ TAKE (n − LENGTH l1) l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(s :α -> bool). INFINITE s ⇒ ∀(t :α -> bool). s ⊆ t ⇒ INFINITE t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_COUNT", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "(option_CASE (NONE :α option) :β -> (α -> β) -> β) = (λ(v :β) (f :α -> β). v) ∧ (option_CASE (SOME (x :α)) :β -> (α -> β) -> β) = (λ(v :β) (f :α -> β). f x)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "optionTheory.SOME_DEF", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.option_case_def", "optionTheory.NONE_DEF", "optionTheory.option_nchotomy", "optionTheory.option_induction", "optionTheory.option_Axiom", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(t :bool). t ⇒ F ⇔ ¬t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(f1 :α -> bool) (f2 :α -> bool) (l :α list). FILTER f1 (FILTER f2 l) = FILTER f2 (FILTER f1 l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(f :α -> β) (P :α -> bool) (Q :β -> bool). FUNSET P Q f ⇔ ∀(x :α). x ∈ P ⇒ f x ∈ Q": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "𝕌(:α + β) = IMAGE (INL :α -> α + β) 𝕌(:α) ∪ IMAGE (INR :β -> α + β) 𝕌(:β)": ["sumTheory.sum_TY_DEF", "sumTheory.SUM_MAP_def", "sumTheory.sum_ISO_DEF", "sumTheory.sum_case_def", "sumTheory.SUM_ALL_def", "sumTheory.OUTR", "sumTheory.OUTL", "sumTheory.ISR", "sumTheory.ISL", "sumTheory.IS_SUM_REP", "sumTheory.INR_DEF", "sumTheory.INL_DEF", "sumTheory.SUM_MAP_o", "sumTheory.SUM_MAP_I", "sumTheory.SUM_MAP_CASE", "sumTheory.SUM_MAP", "sumTheory.sum_INDUCT", "sumTheory.sum_distinct1", "sumTheory.sum_distinct", "sumTheory.sum_CASES", "sumTheory.sum_case_cong", "sumTheory.sum_Axiom", "sumTheory.sum_axiom", "sumTheory.SUM_ALL_MONO", "sumTheory.SUM_ALL_CONG", "sumTheory.NOT_ISR_ISL", "sumTheory.NOT_ISL_ISR", "sumTheory.ISL_OR_ISR", "sumTheory.INR_neq_INL", "sumTheory.INR_INL_11", "sumTheory.INR_11", "sumTheory.INR", "sumTheory.INL_11", "sumTheory.INL", "sumTheory.FORALL_SUM", "sumTheory.EXISTS_SUM", "sumTheory.datatype_sum", "sumTheory.cond_sum_expand", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(x :α) (s :α -> bool). s ⊆ x INSERT s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(l :α list) (x :α). l ≠ x::l ∧ x::l ≠ l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.SING_HD", "listTheory.NULL_LENGTH", "listTheory.NULL_EQ", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_APPEND", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "PROD_SET (∅ :num -> bool) = (1 :num) ∧ ∀(x :num) (s :num -> bool). FINITE s ⇒ PROD_SET (x INSERT s) = x * PROD_SET (s DELETE x)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(f :α -> β) (s :β -> bool) (x :α). PREIMAGE f s x ⇔ f x ∈ s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.PREIMAGE_def", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF_2", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF_EMPTY", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.PREIMAGE_ALT", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_EQ_SING", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_PREIMAGE", "pred_setTheory.IN_POW", "pred_setTheory.in_max_set", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT_EXPAND", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET_gen", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_SING", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INTER", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_SUBSET", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.count_add1", "pred_setTheory.count_add", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.compl_insert", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_LE", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_REST", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(f :α -> β -> β) (e :β) (l1 :α list) (l2 :α list). FOLDR f e (l1 ++ l2) = FOLDR f (FOLDR f e l2) l1": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(n :num) (l :α list). n ≤ LENGTH l ⇒ DROP n l = LASTN (LENGTH l − n) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_SNOC", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_DROP", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_ELL", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.ALL_EL_MAP"], "∀(n :num) (l :α list). n ≤ LENGTH l ⇒ LENGTH (TAKE n l) = n": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.TL", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_cons", "listTheory.TAKE_0", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.DROP_nil", "listTheory.DROP_cons", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "(0 :num) < (n :num) ⇒ DROP n ((x :α)::(xs :α list)) = DROP (n − (1 :num)) xs": ["listTheory.LENGTH_NIL_SYM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.TL", "listTheory.TAKE_nil", "listTheory.TAKE_cons", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.DROP_nil", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "∀(l :bool list). AND_EL l ⇔ FOLDL $/\\ T l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_SNOC", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_REVERSE", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_REVERSE", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_LASTN_BUTLASTN", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_REPLICATE", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_REPLICATE", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_REVERSE", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_DROP", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_ELL", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_REVERSE", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_LASTN", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_REVERSE", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.ALL_EL_MAP"], "∀(P :α -> bool) (l :α list). FILTER P l = ([] :α list) ⇔ EVERY (λ(x :α). ¬P x) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.SING_HD", "listTheory.NULL_LENGTH", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_APPEND", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_TL", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.FOLDR_CONS", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "∀(v :α) (rows :(α -> β option) list) (p :bool) (infos :bool list). FST (STRONGEST_REDUNDANT_ROWS_INFO_AUX v rows p infos) ⇔ p ∧ EVERY (λ(r :α -> β option). r v = (NONE :β option)) rows": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_DISJ_def", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_def", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_def", "patternMatchesTheory.PMATCH_ROW_def", "patternMatchesTheory.PMATCH_ROW_COND_EX_def", "patternMatchesTheory.PMATCH_ROW_COND_def", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_def", "patternMatchesTheory.PMATCH_INCOMPLETE_def", "patternMatchesTheory.PMATCH_EQUIV_ROWS_def", "patternMatchesTheory.PMATCH_def", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.some_var_bool_T", "patternMatchesTheory.some_var_bool_F", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_DISJ_THM", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_THM", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_REWRITE", "patternMatchesTheory.REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN_VAR", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_SUC", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_NIL", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_LT", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_GE", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_0", "patternMatchesTheory.PMATCH_ROW_EXTEND_INPUT", "patternMatchesTheory.PMATCH_ROW_EQ_SOME", "patternMatchesTheory.PMATCH_ROW_EQ_NONE", "patternMatchesTheory.PMATCH_ROW_EQ_AUX", "patternMatchesTheory.PMATCH_ROW_CONG", "patternMatchesTheory.PMATCH_ROW_COND_DEF_GSYM", "patternMatchesTheory.PMATCH_REMOVE_ARB_NO_OVERLAP", "patternMatchesTheory.PMATCH_REMOVE_ARB", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_REWRITES", "patternMatchesTheory.PMATCH_INTRO_CATCHALL", "patternMatchesTheory.PMATCH_EXTEND_OLD", "patternMatchesTheory.PMATCH_EXTEND_BOTH_ID", "patternMatchesTheory.PMATCH_EXTEND_BOTH", "patternMatchesTheory.PMATCH_EXTEND_BASE", "patternMatchesTheory.PMATCH_EVAL_MATCH", "patternMatchesTheory.PMATCH_EVAL", "patternMatchesTheory.PMATCH_EQUIV_ROWS_MATCH", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_3", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_2", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_1", "patternMatchesTheory.PMATCH_EQUIV_ROWS_EQUIV_EXPAND", "patternMatchesTheory.PMATCH_EQUIV_ROWS_CONS_NONE", "patternMatchesTheory.PMATCH_EQUIV_APPEND", "patternMatchesTheory.PMATCH_CONG", "patternMatchesTheory.PMATCH_COND_SELECT_UNIQUE", "patternMatchesTheory.PMATCH_APPEND_SEM", "patternMatchesTheory.LENGTH_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.LENGTH_STRONGEST_REDUNDANT_ROWS_INFO", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_NIL", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_CONS", "patternMatchesTheory.EL2_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.EL1_STRONGEST_REDUNDANT_ROWS_INFO_AUX", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_THMS", "optionTheory.some_def", "optionTheory.SOME_DEF", "optionTheory.OPTREL_def", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MCOMP_def", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.OPTION_GUARD_def", "optionTheory.OPTION_CHOICE_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.OPTION_APPLY_def", "optionTheory.OPTION_ALL_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_SOME_APPLY", "optionTheory.some_intro", "optionTheory.some_F", "optionTheory.some_EQ", "optionTheory.some_elim", "optionTheory.SOME_APPLY_PERMUTE", "optionTheory.SOME_11", "optionTheory.OPTREL_THM", "optionTheory.OPTREL_SOME", "optionTheory.OPTREL_refl", "optionTheory.OPTREL_O", "optionTheory.OPTREL_MONO", "optionTheory.OPTREL_eq", "optionTheory.option_nchotomy", "optionTheory.OPTION_MCOMP_ID", "optionTheory.OPTION_MCOMP_ASSOC", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.option_Induct", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION", "optionTheory.OPTION_GUARD_EQ_THM", "optionTheory.OPTION_GUARD_COND", "optionTheory.OPTION_CHOICE_NONE", "optionTheory.OPTION_CHOICE_EQ_NONE", "optionTheory.option_CASES", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_eq", "optionTheory.option_case_cong", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.OPTION_APPLY_o", "optionTheory.OPTION_APPLY_MAP2", "optionTheory.OPTION_ALL_MONO", "optionTheory.OPTION_ALL_CONG", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "optionTheory.datatype_option", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.RPROD_DEF", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.WF_RPROD", "pairTheory.WF_LEX", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.transitive_LEX", "pairTheory.total_LEX", "pairTheory.symmetric_LEX", "pairTheory.SND_PAIR_MAP", "pairTheory.SND_EQ_EQUIV", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.reflexive_LEX", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LEX_MONO", "pairTheory.LEX_DEF_THM", "pairTheory.LEX_CONG", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST_EQ_EQUIV", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(s :α -> bool). s ∩ s = s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "∀(x :α -> bool) (y :α -> bool) (z :α -> bool). x DIFF y DIFF z = x DIFF z DIFF y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_applied"], "∀(c :bool) (x :bool) (x' :bool) (y :bool) (y' :bool). (c ⇒ x' ⇒ x) ∧ (¬c ⇒ y' ⇒ y) ⇒ (if c then x' else y') ⇒ if c then x else y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(x :α). SING {x}": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "((a :α),(b :α)) ∈ {(x,x) | (P :α -> bool) x} ⇔ P a ∧ a = b": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.RPROD_DEF", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.WF_RPROD", "pairTheory.WF_LEX", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.transitive_LEX", "pairTheory.total_LEX", "pairTheory.symmetric_LEX", "pairTheory.SND_PAIR_MAP", "pairTheory.SND_EQ_EQUIV", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.reflexive_LEX", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LEX_MONO", "pairTheory.LEX_DEF_THM", "pairTheory.LEX_CONG", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST_EQ_EQUIV", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.GSPECIFICATION", "pred_setTheory.SPECIFICATION", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.EXTENSION"], "∀(M :α list) (M' :α list) (v :β) (f :α -> α list -> β). M = M' ∧ (M' = ([] :α list) ⇒ v = (v' :β)) ∧ (∀(a0 :α) (a1 :α list). M' = a0::a1 ⇒ f a0 a1 = (f' :α -> α list -> β) a0 a1) ⇒ (list_CASE M v f :β) = (list_CASE M' v' f' :β)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.list_TY_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.list_distinct", "listTheory.list_Axiom", "listTheory.datatype_list"], "∀(x :α) (l :α list). SNOC x l ≠ ([] :α list)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(g :α -> α -> α) (f :β -> α -> α). FCOMM g f ⇒ ∀(e :α). LEFT_ID g e ⇒ ∀(l :β list list). FOLDR f e (FLAT l) = FOLDR g e (MAP (FOLDR f e) l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "combinTheory.W_DEF", "combinTheory.UPDATE_def", "combinTheory.S_DEF", "combinTheory.RIGHT_ID_DEF", "combinTheory.o_DEF", "combinTheory.MONOID_DEF", "combinTheory.LEFT_ID_DEF", "combinTheory.K_DEF", "combinTheory.I_DEF", "combinTheory.FCOMM_DEF", "combinTheory.FAIL_DEF", "combinTheory.COMM_DEF", "combinTheory.C_DEF", "combinTheory.ASSOC_DEF", "combinTheory.APP_DEF", "combinTheory.W_THM", "combinTheory.UPDATE_EQ", "combinTheory.UPDATE_COMMUTES", "combinTheory.UPDATE_APPLY_IMP_ID", "combinTheory.UPDATE_APPLY_ID_RWT", "combinTheory.UPDATE_APPLY_ID", "combinTheory.UPDATE_APPLY", "combinTheory.UPD_SAME_KEY_UNWIND", "combinTheory.UPD11_SAME_KEY_AND_BASE", "combinTheory.UPD11_SAME_BASE", "combinTheory.SAME_KEY_UPDATE_DIFFER", "combinTheory.S_THM", "combinTheory.S_ABS_R", "combinTheory.S_ABS_L", "combinTheory.o_THM", "combinTheory.o_ASSOC'", "combinTheory.o_ASSOC", "combinTheory.o_ABS_R", "combinTheory.o_ABS_L", "combinTheory.MONOID_DISJ_F", "combinTheory.MONOID_CONJ_T", "combinTheory.literal_case_FORALL_ELIM", "combinTheory.LET_FORALL_ELIM", "combinTheory.K_THM", "combinTheory.K_o_THM", "combinTheory.I_THM", "combinTheory.I_o_ID", "combinTheory.GEN_literal_case_RATOR", "combinTheory.GEN_literal_case_RAND", "combinTheory.GEN_LET_RATOR", "combinTheory.GEN_LET_RAND", "combinTheory.FCOMM_ASSOC", "combinTheory.FAIL_THM", "combinTheory.C_THM", "combinTheory.C_ABS_L", "combinTheory.ASSOC_SYM", "combinTheory.ASSOC_DISJ", "combinTheory.ASSOC_CONJ", "combinTheory.APPLY_UPDATE_THM", "combinTheory.APPLY_UPDATE_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(m :num) (n :num). m < SUC n ⇒ m ≠ n ⇒ m < n": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "prim_recTheory.PRE_DEF", "prim_recTheory.LESS_DEF", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRE", "prim_recTheory.NOT_LESS_0", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ"], "∀(s :α -> bool) (t :α -> bool) (u :α -> bool). s ⊂ t ∧ t ⊂ u ⇒ s ⊂ u": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "∀(s :α -> bool) (t :α -> bool). FINITE s ∧ FINITE t ⇒ CARD (s ∪ t) = CARD s + CARD t − CARD (s ∩ t)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DELETE", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(s :α -> bool). 𝕌(:α) ⊆ s ⇔ s = 𝕌(:α)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "∀(v :α) (rows :(α -> β option) list) (p :bool) (infos :bool list). LENGTH (SND (STRONGEST_REDUNDANT_ROWS_INFO_AUX v rows p infos)) = LENGTH rows + LENGTH infos": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.STRONGEST_REDUNDANT_ROWS_INFO_AUX_def", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_DISJ_def", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_def", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_def", "patternMatchesTheory.PMATCH_ROW_def", "patternMatchesTheory.PMATCH_ROW_COND_EX_def", "patternMatchesTheory.PMATCH_ROW_COND_def", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_def", "patternMatchesTheory.PMATCH_INCOMPLETE_def", "patternMatchesTheory.PMATCH_EQUIV_ROWS_def", "patternMatchesTheory.PMATCH_def", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.some_var_bool_T", "patternMatchesTheory.some_var_bool_F", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_DISJ_THM", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_THM", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_REWRITE", "patternMatchesTheory.REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN_VAR", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_SUC", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_NIL", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_LT", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_GE", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_0", "patternMatchesTheory.PMATCH_ROW_EXTEND_INPUT", "patternMatchesTheory.PMATCH_ROW_EQ_SOME", "patternMatchesTheory.PMATCH_ROW_EQ_NONE", "patternMatchesTheory.PMATCH_ROW_EQ_AUX", "patternMatchesTheory.PMATCH_ROW_CONG", "patternMatchesTheory.PMATCH_ROW_COND_DEF_GSYM", "patternMatchesTheory.PMATCH_REMOVE_ARB_NO_OVERLAP", "patternMatchesTheory.PMATCH_REMOVE_ARB", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_REWRITES", "patternMatchesTheory.PMATCH_INTRO_CATCHALL", "patternMatchesTheory.PMATCH_EXTEND_OLD", "patternMatchesTheory.PMATCH_EXTEND_BOTH_ID", "patternMatchesTheory.PMATCH_EXTEND_BOTH", "patternMatchesTheory.PMATCH_EXTEND_BASE", "patternMatchesTheory.PMATCH_EVAL_MATCH", "patternMatchesTheory.PMATCH_EVAL", "patternMatchesTheory.PMATCH_EQUIV_ROWS_MATCH", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_3", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_2", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_1", "patternMatchesTheory.PMATCH_EQUIV_ROWS_EQUIV_EXPAND", "patternMatchesTheory.PMATCH_EQUIV_ROWS_CONS_NONE", "patternMatchesTheory.PMATCH_EQUIV_APPEND", "patternMatchesTheory.PMATCH_CONG", "patternMatchesTheory.PMATCH_COND_SELECT_UNIQUE", "patternMatchesTheory.PMATCH_APPEND_SEM", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_NIL", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_CONS", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_THMS", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.RPROD_DEF", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.WF_RPROD", "pairTheory.WF_LEX", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.transitive_LEX", "pairTheory.total_LEX", "pairTheory.symmetric_LEX", "pairTheory.SND_PAIR_MAP", "pairTheory.SND_EQ_EQUIV", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.reflexive_LEX", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LEX_MONO", "pairTheory.LEX_DEF_THM", "pairTheory.LEX_CONG", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST_EQ_EQUIV", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "LIST_REL (R :α -> β -> bool) (xs :α list) ((h :β)::(t :β list)) ⇔ ∃(h' :α) (t' :α list). xs = h'::t' ∧ R h' h ∧ LIST_REL R t' t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.WF_LIST_PRED", "listTheory.TL", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_TL", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.FOLDR_CONS", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "(∀(x :α) (y :α). (P :α -> bool) x ∧ (R :α -> α -> bool) x y ⇒ P y) ⇒ ∀(x :α) (y :α). P x ∧ R꙳ x y ⇒ P y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.antisymmetric_def", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.transitive_EQC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_EQC", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_EQC", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RC", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "((p :bool) ⇔ if (q :bool) then (r :bool) else (s :bool)) ⇔ (p ∨ q ∨ ¬s) ∧ (p ∨ ¬r ∨ ¬q) ∧ (p ∨ ¬r ∨ ¬s) ∧ (¬q ∨ r ∨ ¬p) ∧ (q ∨ s ∨ ¬p)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(s :α -> bool) (x :α). x ∈ s ⇔ ∃(t :α -> bool). s = x INSERT t ∧ x ∉ t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.COMPONENT"], "PMATCH_ROW_REDUNDANT (v :α) ((r :α -> β option)::(rs :(α -> β option) list)) (0 :num) ⇔ r v = (NONE :β option)": ["listTheory.LENGTH_NIL_SYM", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_def", "patternMatchesTheory.PMATCH_ROW_def", "patternMatchesTheory.PMATCH_ROW_COND_def", "patternMatchesTheory.PMATCH_INCOMPLETE_def", "patternMatchesTheory.PMATCH_EQUIV_ROWS_def", "patternMatchesTheory.PMATCH_def", "patternMatchesTheory.some_var_bool_T", "patternMatchesTheory.some_var_bool_F", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN_VAR", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_NIL", "patternMatchesTheory.PMATCH_ROW_EXTEND_INPUT", "patternMatchesTheory.PMATCH_ROW_EQ_SOME", "patternMatchesTheory.PMATCH_ROW_EQ_NONE", "patternMatchesTheory.PMATCH_ROW_EQ_AUX", "patternMatchesTheory.PMATCH_ROW_CONG", "patternMatchesTheory.PMATCH_ROW_COND_DEF_GSYM", "patternMatchesTheory.PMATCH_REMOVE_ARB_NO_OVERLAP", "patternMatchesTheory.PMATCH_REMOVE_ARB", "patternMatchesTheory.PMATCH_INTRO_CATCHALL", "patternMatchesTheory.PMATCH_EXTEND_OLD", "patternMatchesTheory.PMATCH_EXTEND_BOTH_ID", "patternMatchesTheory.PMATCH_EXTEND_BOTH", "patternMatchesTheory.PMATCH_EXTEND_BASE", "patternMatchesTheory.PMATCH_EVAL_MATCH", "patternMatchesTheory.PMATCH_EVAL", "patternMatchesTheory.PMATCH_EQUIV_ROWS_MATCH", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_3", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_2", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_1", "patternMatchesTheory.PMATCH_EQUIV_ROWS_EQUIV_EXPAND", "patternMatchesTheory.PMATCH_EQUIV_ROWS_CONS_NONE", "patternMatchesTheory.PMATCH_EQUIV_APPEND", "patternMatchesTheory.PMATCH_CONG", "patternMatchesTheory.PMATCH_COND_SELECT_UNIQUE", "patternMatchesTheory.PMATCH_APPEND_SEM", "optionTheory.some_def", "optionTheory.SOME_DEF", "optionTheory.OPTREL_def", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MCOMP_def", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.OPTION_GUARD_def", "optionTheory.OPTION_CHOICE_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.OPTION_APPLY_def", "optionTheory.OPTION_ALL_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_SOME_APPLY", "optionTheory.some_intro", "optionTheory.some_F", "optionTheory.some_EQ", "optionTheory.some_elim", "optionTheory.SOME_APPLY_PERMUTE", "optionTheory.SOME_11", "optionTheory.OPTREL_THM", "optionTheory.OPTREL_SOME", "optionTheory.OPTREL_refl", "optionTheory.OPTREL_O", "optionTheory.OPTREL_MONO", "optionTheory.OPTREL_eq", "optionTheory.option_nchotomy", "optionTheory.OPTION_MCOMP_ID", "optionTheory.OPTION_MCOMP_ASSOC", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.option_Induct", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION", "optionTheory.OPTION_GUARD_EQ_THM", "optionTheory.OPTION_GUARD_COND", "optionTheory.OPTION_CHOICE_NONE", "optionTheory.OPTION_CHOICE_EQ_NONE", "optionTheory.option_CASES", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_eq", "optionTheory.option_case_cong", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.OPTION_APPLY_o", "optionTheory.OPTION_APPLY_MAP2", "optionTheory.OPTION_ALL_MONO", "optionTheory.OPTION_ALL_CONG", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "optionTheory.datatype_option", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(s :α -> bool) (t :α -> bool). DISJOINT t (s DIFF t) ∧ DISJOINT (s DIFF t) t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied"], "∀(f :α -> β -> bool) (s :α -> bool) (y :β). y ∈ BIGUNION (IMAGE f s) ⇔ ∃(x :α). x ∈ s ∧ y ∈ f x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_COUNT", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "(∀(e :α). LIST_ELEM_COUNT e ([] :α list) = (0 :num)) ∧ (∀(e :β) (l1 :β list) (l2 :β list). LIST_ELEM_COUNT e (l1 ++ l2) = LIST_ELEM_COUNT e l1 + LIST_ELEM_COUNT e l2) ∧ (∀(e :γ) (h :γ) (l :γ list). h = e ⇒ LIST_ELEM_COUNT e (h::l) = SUC (LIST_ELEM_COUNT e l)) ∧ ∀(e :δ) (h :δ) (l :δ list). h ≠ e ⇒ LIST_ELEM_COUNT e (h::l) = LIST_ELEM_COUNT e l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.longest_prefix_def", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.common_prefixes_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_TAKE_LEQ", "rich_listTheory.ZIP_TAKE", "rich_listTheory.ZIP_SNOC", "rich_listTheory.ZIP_APPEND", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.two_common_prefixes", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_REVERSE", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_EVERY", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SNOC_EL_TAKE", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_REVERSE", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_LASTN_BUTLASTN", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REPLICATE_compute", "rich_listTheory.prefixes_is_prefix_total", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.OR_EL_FOLDR", "rich_listTheory.OR_EL_FOLDL", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.NIL_IN_common_prefixes", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_REPLICATE", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_LAST_FRONT", "rich_listTheory.MEM_LAST", "rich_listTheory.MEM_FRONT", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_COUNT_LIST", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.MAP_COUNT_LIST", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.longest_prefix_UNIQUE", "rich_listTheory.longest_prefix_SING", "rich_listTheory.longest_prefix_PAIR", "rich_listTheory.longest_prefix_NIL", "rich_listTheory.longest_prefix_EMPTY", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_REPLICATE", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_COUNT_LIST", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_REVERSE", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_DROP", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_TRANS", "rich_listTheory.IS_PREFIX_SNOC", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_REFL", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_NIL", "rich_listTheory.IS_PREFIX_LENGTH_ANTI", "rich_listTheory.IS_PREFIX_LENGTH", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_BUTLAST", "rich_listTheory.IS_PREFIX_APPENDS", "rich_listTheory.IS_PREFIX_APPEND3", "rich_listTheory.IS_PREFIX_APPEND2", "rich_listTheory.IS_PREFIX_APPEND1", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX_ANTISYM", "rich_listTheory.IS_PREFIX", "rich_listTheory.FRONT_APPEND", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FINITE_prefix", "rich_listTheory.FINITE_common_prefixes", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_FRONT", "rich_listTheory.EL_ELL", "rich_listTheory.EL_COUNT_LIST", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_REVERSE", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_LASTN", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_CONS_EL", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_SNOC", "rich_listTheory.COUNT_LIST_GENLIST", "rich_listTheory.COUNT_LIST_COUNT", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.COUNT_LIST_ADD", "rich_listTheory.CONS_APPEND", "rich_listTheory.common_prefixes_PAIR", "rich_listTheory.common_prefixes_NONEMPTY", "rich_listTheory.common_prefixes_NIL", "rich_listTheory.common_prefixes_BIGINTER", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_REVERSE", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_SNOC1", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.APPEND_ASSOC_CONS", "rich_listTheory.AND_EL_FOLDR", "rich_listTheory.AND_EL_FOLDL", "rich_listTheory.ALL_EL_MAP"], "∀(s :α -> bool) (t :α -> bool) (x :α). (s ∩ t) x ⇔ x ∈ s ∧ x ∈ t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "∀(P :α -> bool) (l1 :α list) (l2 :α list). EXISTS P (l1 ++ l2) ⇔ EXISTS P l1 ∨ EXISTS P l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_APPEND", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_APPEND", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "∀(ls :α list) (f :α # α -> β). MAP f (ZIP (ls,ls)) = MAP (λ(x :α). f (x,x)) ls": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.RPROD_DEF", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.WF_RPROD", "pairTheory.WF_LEX", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.transitive_LEX", "pairTheory.total_LEX", "pairTheory.symmetric_LEX", "pairTheory.SND_PAIR_MAP", "pairTheory.SND_EQ_EQUIV", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.reflexive_LEX", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LEX_MONO", "pairTheory.LEX_DEF_THM", "pairTheory.LEX_CONG", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST_EQ_EQUIV", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.SNOC", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "MAP (f :α -> β) (l :α list) = (h :β)::(t :β list) ⇔ ∃(x0 :α) (t0 :α list). l = x0::t0 ∧ h = f x0 ∧ t = MAP f t0": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MAP_ID", "listTheory.MAP_EQ_NIL", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "∀(R :α -> α -> bool). symmetric R ⇒ SC R = R": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.antisymmetric_def", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.symmetric_RC", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.antisymmetric_RC", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(l1 :α list) (l2 :α list). SHORTLEX (R :α -> α -> bool) l1 l2 ⇒ LENGTH l1 ≤ LENGTH l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(f :β -> α -> β) (e :β) (x :α) (l :α list). FOLDL f e (SNOC x l) = f (FOLDL f e l) x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.SNOC", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_eq_0", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(P :(α -> bool) -> bool). P (∅ :α -> bool) ∧ (∀(s :α -> bool). FINITE s ∧ P s ⇒ ∀(e :α). e ∉ s ⇒ P (e INSERT s)) ⇒ ∀(s :α -> bool). FINITE s ⇒ P s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(s :α -> bool). FINITE s ⇒ FINITE (REST s)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DELETE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(s :α -> bool). FINITE s ⇒ ∃(f :num -> α) (b :num). BIJ f (count b) s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_COUNT", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(P :α -> bool) (l1 :α list) (l2 :α list). EVERY P l1 ⇒ dropWhile P (l1 ++ l2) = dropWhile P l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "(OPTION_IGNORE_BIND (m1 :α option) (m2 :β option) = (NONE :β option) ⇔ m1 = (NONE :α option) ∨ m2 = (NONE :β option)) ∧ (OPTION_IGNORE_BIND m1 m2 = SOME (y :β) ⇔ ∃(x :α). m1 = SOME x ∧ m2 = SOME y)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "optionTheory.SOME_DEF", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_11", "optionTheory.option_nchotomy", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(P :α -> bool) (l :α list). EVERY P l ⇔ ¬EXISTS (λ(x :α). ¬P x) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_APPEND", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EVERY_SIMP", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "∀(s :α -> bool). s = 𝕌(:α) ⇒ ∀(v :α). v ∈ s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_applied"], "∀(n :num). SUC (m :num) = n ⇒ m < n": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "prim_recTheory.PRE_DEF", "prim_recTheory.LESS_DEF", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRE", "prim_recTheory.NOT_LESS_0", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ"], "((if (P :bool) then SOME (x :α) else (NONE :α option)) = (NONE :α option) ⇔ ¬P) ∧ ((if P then (NONE :α option) else SOME x) = (NONE :α option) ⇔ P) ∧ ((if P then SOME x else (NONE :α option)) = SOME (y :α) ⇔ P ∧ x = y) ∧ ((if P then (NONE :α option) else SOME x) = SOME y ⇔ ¬P ∧ x = y)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "optionTheory.SOME_DEF", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.option_case_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_11", "optionTheory.option_nchotomy", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_compute", "optionTheory.option_Axiom", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "(some(x :bool). x) = SOME T": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "optionTheory.some_def", "optionTheory.SOME_DEF", "optionTheory.OPTREL_def", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MCOMP_def", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.OPTION_GUARD_def", "optionTheory.OPTION_CHOICE_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.OPTION_APPLY_def", "optionTheory.OPTION_ALL_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_SOME_APPLY", "optionTheory.some_intro", "optionTheory.some_F", "optionTheory.some_EQ", "optionTheory.some_elim", "optionTheory.SOME_APPLY_PERMUTE", "optionTheory.SOME_11", "optionTheory.OPTREL_THM", "optionTheory.OPTREL_SOME", "optionTheory.OPTREL_refl", "optionTheory.OPTREL_O", "optionTheory.OPTREL_MONO", "optionTheory.OPTREL_eq", "optionTheory.option_nchotomy", "optionTheory.OPTION_MCOMP_ID", "optionTheory.OPTION_MCOMP_ASSOC", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.option_Induct", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION", "optionTheory.OPTION_GUARD_EQ_THM", "optionTheory.OPTION_GUARD_COND", "optionTheory.OPTION_CHOICE_NONE", "optionTheory.OPTION_CHOICE_EQ_NONE", "optionTheory.option_CASES", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_eq", "optionTheory.option_case_cong", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.OPTION_APPLY_o", "optionTheory.OPTION_APPLY_MAP2", "optionTheory.OPTION_ALL_MONO", "optionTheory.OPTION_ALL_CONG", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "optionTheory.datatype_option", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "REDUNDANT_ROWS_INFOS_CONJ ([] :bool list) ([] :bool list) = ([] :bool list) ∧ REDUNDANT_ROWS_INFOS_CONJ ((i1 :bool)::(is1 :bool list)) ((i2 :bool)::(is2 :bool list)) = (i1 ∧ i2)::REDUNDANT_ROWS_INFOS_CONJ is1 is2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "patternMatchesTheory.REDUNDANT_ROWS_INFOS_CONJ_def", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_def", "patternMatchesTheory.PMATCH_ROW_def", "patternMatchesTheory.PMATCH_ROW_COND_EX_def", "patternMatchesTheory.PMATCH_ROW_COND_def", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_def", "patternMatchesTheory.PMATCH_INCOMPLETE_def", "patternMatchesTheory.PMATCH_EQUIV_ROWS_def", "patternMatchesTheory.PMATCH_def", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_def", "patternMatchesTheory.some_var_bool_T", "patternMatchesTheory.some_var_bool_F", "patternMatchesTheory.REDUNDANT_ROWS_INFO_TO_PMATCH_EQ", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_SUBSUMED", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_TRIVIAL_SOUNDNESS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_ROWS_INFO_EQUIV", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT_PMATCH_ROWS", "patternMatchesTheory.PMATCH_ROWS_DROP_REDUNDANT", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN_VAR", "patternMatchesTheory.PMATCH_ROW_REMOVE_FUN", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_SUC", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_NIL", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_LT", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_APPEND_GE", "patternMatchesTheory.PMATCH_ROW_REDUNDANT_0", "patternMatchesTheory.PMATCH_ROW_EXTEND_INPUT", "patternMatchesTheory.PMATCH_ROW_EQ_SOME", "patternMatchesTheory.PMATCH_ROW_EQ_NONE", "patternMatchesTheory.PMATCH_ROW_EQ_AUX", "patternMatchesTheory.PMATCH_ROW_CONG", "patternMatchesTheory.PMATCH_ROW_COND_DEF_GSYM", "patternMatchesTheory.PMATCH_REMOVE_ARB_NO_OVERLAP", "patternMatchesTheory.PMATCH_REMOVE_ARB", "patternMatchesTheory.PMATCH_IS_EXHAUSTIVE_REWRITES", "patternMatchesTheory.PMATCH_INTRO_CATCHALL", "patternMatchesTheory.PMATCH_EXTEND_OLD", "patternMatchesTheory.PMATCH_EXTEND_BOTH_ID", "patternMatchesTheory.PMATCH_EXTEND_BOTH", "patternMatchesTheory.PMATCH_EXTEND_BASE", "patternMatchesTheory.PMATCH_EVAL_MATCH", "patternMatchesTheory.PMATCH_EVAL", "patternMatchesTheory.PMATCH_EQUIV_ROWS_MATCH", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_3", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_2", "patternMatchesTheory.PMATCH_EQUIV_ROWS_is_equiv_1", "patternMatchesTheory.PMATCH_EQUIV_ROWS_EQUIV_EXPAND", "patternMatchesTheory.PMATCH_EQUIV_ROWS_CONS_NONE", "patternMatchesTheory.PMATCH_EQUIV_APPEND", "patternMatchesTheory.PMATCH_CONG", "patternMatchesTheory.PMATCH_COND_SELECT_UNIQUE", "patternMatchesTheory.PMATCH_APPEND_SEM", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC_PMATCH_ROW", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_SNOC", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_NIL", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_EXTRACT_IS_EXHAUSTIVE", "patternMatchesTheory.IS_REDUNDANT_ROWS_INFO_CONS", "patternMatchesTheory.APPLY_REDUNDANT_ROWS_INFO_THMS", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(l :num list list). SUM (FLAT l) = SUM (MAP SUM l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(x :α recspace) (y :α recspace). dest_rec x = dest_rec y ⇔ x = y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "ind_typeTheory.ZRECSPACE_def", "ind_typeTheory.ZCONSTR", "ind_typeTheory.ZBOT", "ind_typeTheory.recspace_TY_DEF", "ind_typeTheory.recspace_repfns", "ind_typeTheory.NUMSUM_DEST", "ind_typeTheory.NUMSUM", "ind_typeTheory.NUMPAIR_DEST", "ind_typeTheory.NUMPAIR", "ind_typeTheory.INJP", "ind_typeTheory.INJN", "ind_typeTheory.INJF", "ind_typeTheory.INJA", "ind_typeTheory.CONSTR", "ind_typeTheory.BOTTOM", "ind_typeTheory.ZRECSPACE_strongind", "ind_typeTheory.ZRECSPACE_rules", "ind_typeTheory.ZRECSPACE_ind", "ind_typeTheory.ZRECSPACE_cases", "ind_typeTheory.ZCONSTR_ZBOT", "ind_typeTheory.NUMSUM_INJ", "ind_typeTheory.NUMPAIR_INJ_LEMMA", "ind_typeTheory.NUMPAIR_INJ", "ind_typeTheory.MK_REC_INJ", "ind_typeTheory.INJP_INJ", "ind_typeTheory.INJN_INJ", "ind_typeTheory.INJF_INJ", "ind_typeTheory.INJA_INJ", "ind_typeTheory.INJ_INVERSE2", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "((R1 :α -> α -> bool) LEX (R2 :β -> β -> bool)) ((a :α),(b :β)) ((c :α),(d :β)) ⇔ R1 a c ∨ a = c ∧ R2 b d": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.SND_PAIR_MAP", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "(∀(l :α list). ([] :α list) ≼ l ⇔ T) ∧ (∀(x :α) (l :α list). x::l ≼ ([] :α list) ⇔ F) ∧ ∀(x1 :α) (l1 :α list) (x2 :α) (l2 :α list). x2::l2 ≼ x1::l1 ⇔ x1 = x2 ∧ l2 ≼ l1": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(n :num) (l :α list). n ≤ LENGTH l ⇒ DROP n (REVERSE l) = REVERSE (BUTLASTN n l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_SNOC", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_LASTN_BUTLASTN", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_DROP", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_ELL", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_LASTN", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.ALL_EL_MAP"], "∀(l :α list) (f :α -> β) (x :β). MEM x (MAP f l) ⇔ ∃(y :α). x = f y ∧ MEM y l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_APPEND", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_APPEND", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "∀(f :α -> β) (s :β -> bool) (t :β -> bool). s ⊆ t ⇒ PREIMAGE f s ⊆ PREIMAGE f t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.PREIMAGE_def", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF_2", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF_EMPTY", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.PREIMAGE_UNIV", "pred_setTheory.PREIMAGE_UNION", "pred_setTheory.PREIMAGE_K", "pred_setTheory.PREIMAGE_INTER", "pred_setTheory.PREIMAGE_I", "pred_setTheory.PREIMAGE_EMPTY", "pred_setTheory.PREIMAGE_DISJOINT", "pred_setTheory.PREIMAGE_DIFF", "pred_setTheory.PREIMAGE_COMPL", "pred_setTheory.PREIMAGE_COMP", "pred_setTheory.PREIMAGE_BIGUNION", "pred_setTheory.PREIMAGE_applied", "pred_setTheory.PREIMAGE_ALT", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_EQ_SING", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_PREIMAGE", "pred_setTheory.IN_POW", "pred_setTheory.in_max_set", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT_EXPAND", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET_gen", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_SING", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INTER", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_SUBSET", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.count_add1", "pred_setTheory.count_add", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.compl_insert", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_LE", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_REST", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "PROD_ALL (P :α -> bool) (Q :β -> bool) ((x :α),(y :β)) ⇔ P x ∧ Q y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.SND", "pairTheory.pair_induction", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_Axiom", "pairTheory.LAMBDA_PROD", "pairTheory.FST", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(R :α -> α -> bool) (x :α) (y :α). R⁺ x y ⇒ R꙳ x y": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.antisymmetric_def", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.symmetric_RC", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_cases", "relationTheory.RC_REFLEXIVE", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.antisymmetric_RC", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(l2 :α list) (l1 :α list). BUTLASTN (LENGTH l2) (l1 ++ l2) = l1": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.ELL_compute", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.ALL_EL_MAP"], "∀(l :α list). LENGTH l = FOLDR (λ(x :α) (l' :num). SUC l') (0 :num) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(n :num) (l :α list). n ≤ LENGTH l ⇒ LASTN n l = DROP (LENGTH l − n) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.ZIP_SNOC", "rich_listTheory.UNZIP_SNOC", "rich_listTheory.TL_SNOC", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG_DROP", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE_LENGTH_APPEND", "rich_listTheory.TAKE_BUTLASTN", "rich_listTheory.TAKE_APPEND2", "rich_listTheory.TAKE_APPEND1", "rich_listTheory.TAKE_APPEND", "rich_listTheory.TAKE", "rich_listTheory.SUM_REVERSE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SUM_FLAT", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_EL", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_CONS", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.SEG1", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REVERSE_FLAT", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_TAKE", "rich_listTheory.MEM_SEG", "rich_listTheory.MEM_LASTN", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MEM_DROP_IMP", "rich_listTheory.MEM_BUTLASTN", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.MAP_FILTER", "rich_listTheory.LUPDATE_APPEND2", "rich_listTheory.LUPDATE_APPEND1", "rich_listTheory.LENGTH_UNZIP_SND", "rich_listTheory.LENGTH_UNZIP_FST", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FRONT", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.is_prefix_el", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_REVERSE", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FLAT_FLAT", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_TAKE", "rich_listTheory.EXISTS_SEG", "rich_listTheory.EXISTS_REVERSE", "rich_listTheory.EXISTS_LASTN", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DROP", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EXISTS_BUTLASTN", "rich_listTheory.EVERY_TAKE", "rich_listTheory.EVERY_SEG", "rich_listTheory.EVERY_REVERSE", "rich_listTheory.EVERY_LASTN", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.EVERY_DROP", "rich_listTheory.EVERY_BUTLASTN", "rich_listTheory.ELL_SUC_SNOC", "rich_listTheory.ELL_SNOC", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_REVERSE_EL", "rich_listTheory.ELL_REVERSE", "rich_listTheory.ELL_PRE_LENGTH", "rich_listTheory.ELL_MEM", "rich_listTheory.ELL_MAP", "rich_listTheory.ELL_LENGTH_SNOC", "rich_listTheory.ELL_LENGTH_CONS", "rich_listTheory.ELL_LENGTH_APPEND", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_EL", "rich_listTheory.ELL_CONS", "rich_listTheory.ELL_compute", "rich_listTheory.ELL_APPEND2", "rich_listTheory.ELL_APPEND1", "rich_listTheory.ELL_0_SNOC", "rich_listTheory.EL_SEG", "rich_listTheory.EL_REVERSE_ELL", "rich_listTheory.EL_PRE_LENGTH", "rich_listTheory.EL_MEM", "rich_listTheory.EL_LENGTH_APPEND", "rich_listTheory.EL_ELL", "rich_listTheory.EL_CONS", "rich_listTheory.EL_APPEND2", "rich_listTheory.EL_APPEND1", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_LENGTH_APPEND", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_TAKE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.ALL_EL_MAP"], "∀(t :bool). F ∨ t ⇔ t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(f :α -> β) (s :β -> bool). IMAGE f (PREIMAGE f s) ⊆ s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.PREIMAGE_def", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF_2", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF_EMPTY", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.PREIMAGE_UNIV", "pred_setTheory.PREIMAGE_UNION", "pred_setTheory.PREIMAGE_SUBSET", "pred_setTheory.PREIMAGE_K", "pred_setTheory.PREIMAGE_INTER", "pred_setTheory.PREIMAGE_IMAGE", "pred_setTheory.PREIMAGE_I", "pred_setTheory.PREIMAGE_EMPTY", "pred_setTheory.PREIMAGE_DISJOINT", "pred_setTheory.PREIMAGE_DIFF", "pred_setTheory.PREIMAGE_CROSS", "pred_setTheory.PREIMAGE_COMPL_INTER", "pred_setTheory.PREIMAGE_COMPL", "pred_setTheory.PREIMAGE_COMP", "pred_setTheory.PREIMAGE_BIGUNION", "pred_setTheory.PREIMAGE_applied", "pred_setTheory.PREIMAGE_ALT", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_EQ_SING", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_PREIMAGE", "pred_setTheory.IN_POW", "pred_setTheory.in_max_set", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT_EXPAND", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET_gen", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_SING", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INTER", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_SUBSET", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.count_add1", "pred_setTheory.count_add", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.compl_insert", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_LE", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_REST", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(s :α -> bool) (t :α -> bool). s ⊂ t ⇔ s ⊆ t ∧ ∃(y :α). y ∈ t ∧ y ∉ s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "(R :α -> α -> bool)⁺ (x :α) (z :α) ⇔ R x z ∨ ∃(y :α). R x y ∧ R⁺ y z": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.irreflexive_def", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.antisymmetric_def", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES1_E", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RC", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(m :num) (n :num) (l :α list). m ≤ n ∧ n ≤ LENGTH l ⇒ BUTLASTN m (LASTN n l) = LASTN (n − m) (BUTLASTN m l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.ELL_compute", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.ALL_EL_MAP"], "∀(f :α -> β) (P :α -> bool) (Q :α -> β -> bool). f ∈ DFUNSET P Q ⇔ ∀(x :α). x ∈ P ⇒ f x ∈ Q x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "(∀(x :α). MEM x ([] :α list) ⇔ F) ∧ ∀(x :α) (h :α) (t :α list). MEM x (h::t) ⇔ x = h ∨ MEM x t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.SING_HD", "listTheory.NULL_LENGTH", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_APPEND", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_TL", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.FOLDR_CONS", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "∀(x :α) (s :α -> bool). x ∉ s ⇔ s DELETE x = s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "((INL (a :α) :α + β) ∈ (A :α -> bool) ⊔ (B :β -> bool) ⇔ a ∈ A) ∧ ((INR (b :β) :α + β) ∈ A ⊔ B ⇔ b ∈ B)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "sumTheory.sum_TY_DEF", "sumTheory.SUM_MAP_def", "sumTheory.sum_ISO_DEF", "sumTheory.sum_case_def", "sumTheory.SUM_ALL_def", "sumTheory.OUTR", "sumTheory.OUTL", "sumTheory.ISR", "sumTheory.ISL", "sumTheory.IS_SUM_REP", "sumTheory.INR_DEF", "sumTheory.INL_DEF", "sumTheory.SUM_MAP_o", "sumTheory.SUM_MAP_I", "sumTheory.SUM_MAP_CASE", "sumTheory.SUM_MAP", "sumTheory.sum_INDUCT", "sumTheory.sum_distinct1", "sumTheory.sum_distinct", "sumTheory.sum_CASES", "sumTheory.sum_case_cong", "sumTheory.sum_Axiom", "sumTheory.sum_axiom", "sumTheory.SUM_ALL_MONO", "sumTheory.SUM_ALL_CONG", "sumTheory.NOT_ISR_ISL", "sumTheory.NOT_ISL_ISR", "sumTheory.ISL_OR_ISR", "sumTheory.INR_neq_INL", "sumTheory.INR_INL_11", "sumTheory.INR_11", "sumTheory.INR", "sumTheory.INL_11", "sumTheory.INL", "sumTheory.FORALL_SUM", "sumTheory.EXISTS_SUM", "sumTheory.datatype_sum", "sumTheory.cond_sum_expand", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "WF (λ(x :num) (y :num). y = SUC x)": ["relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.WeakOrder", "relationTheory.WeakLinearOrder", "relationTheory.WCR_def", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.STRORD", "relationTheory.StrongOrder", "relationTheory.StrongLinearOrder", "relationTheory.SN_def", "relationTheory.SC_DEF", "relationTheory.RUNIV", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RRESTRICT_DEF", "relationTheory.RRANGE", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RDOM_DELETE_DEF", "relationTheory.RDOM_DEF", "relationTheory.RCOMPL", "relationTheory.rcdiamond_def", "relationTheory.RC_DEF", "relationTheory.PreOrder", "relationTheory.Order", "relationTheory.O_DEF", "relationTheory.nf_def", "relationTheory.LinearOrder", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.diamond_def", "relationTheory.diag_def", "relationTheory.CR_def", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.WeakOrder_EQ", "relationTheory.WeakOrd_Ord", "relationTheory.WeakLinearOrder_dichotomy", "relationTheory.trichotomous_STRORD", "relationTheory.trichotomous_RC", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_O_RSUBSET", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_RSUBSET", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRORD_Strong", "relationTheory.STRORD_RC", "relationTheory.STRORD_AND_NOT_Id", "relationTheory.StrongOrd_Ord", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNIV_SUBSET", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.RTC_RINTER", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RSUBSET_WeakOrder", "relationTheory.RSUBSET_antisymmetric", "relationTheory.RSUBSET_ANTISYM", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.REMPTY_SUBSET", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_Id_RSUBSET", "relationTheory.reflexive_EQC", "relationTheory.rcdiamond_diamond", "relationTheory.RC_Weak", "relationTheory.RC_SUBSET", "relationTheory.RC_STRORD", "relationTheory.RC_RTC", "relationTheory.RC_OR_Id", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.O_MONO", "relationTheory.O_Id", "relationTheory.O_ASSOC", "relationTheory.NOT_INVOL", "relationTheory.Newmans_lemma", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.irrefl_trans_implies_antisym", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_Id", "relationTheory.inv_EQC", "relationTheory.inv_diag", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IN_RRANGE", "relationTheory.IN_RDOM_RUNION", "relationTheory.IN_RDOM_RRESTRICT", "relationTheory.IN_RDOM_DELETE", "relationTheory.IN_RDOM", "relationTheory.IDEM_TC", "relationTheory.IDEM_STRORD", "relationTheory.IDEM_SC", "relationTheory.IDEM_RTC", "relationTheory.IDEM_RC", "relationTheory.IDEM", "relationTheory.Id_O", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.establish_CR", "relationTheory.equivalence_inv_identity", "relationTheory.EqIsBothRSUBSET", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.diamond_TC_diamond", "relationTheory.diamond_RC_diamond", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION"], "∀(L :num list) (n :num). SUM_ACC L n = SUM L + n": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.SNOC", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LRC_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SING_HD", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "INFINITE 𝕌(:α) ⇔ ∀(s :α -> bool). FINITE s ⇒ s ⊂ 𝕌(:α)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_COUNT", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(f :α -> β). (∀(s :β -> bool). INJ f (∅ :α -> bool) s) ∧ ∀(s :α -> bool). INJ f s (∅ :β -> bool) ⇔ s = (∅ :α -> bool)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(l :α list) (f :α -> β). (MAP f l = ([] :β list) ⇔ l = ([] :α list)) ∧ (([] :β list) = MAP f l ⇔ l = ([] :α list))": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MAP_ID", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "∀(l :num list). SUM l = FOLDR $+ (0 :num) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "arithmeticTheory.LESS_MONO_REV", "arithmeticTheory.LESS_MONO_EQ", "arithmeticTheory.SUB", "arithmeticTheory.ODD", "arithmeticTheory.NUMERAL_DEF", "arithmeticTheory.num_case_def", "arithmeticTheory.NRC", "arithmeticTheory.nat_elim__magic", "arithmeticTheory.MULT", "arithmeticTheory.MODEQ_DEF", "arithmeticTheory.MIN_DEF", "arithmeticTheory.MAX_DEF", "arithmeticTheory.LESS_OR_EQ", "arithmeticTheory.GREATER_OR_EQ", "arithmeticTheory.GREATER_DEF", "arithmeticTheory.FUNPOW", "arithmeticTheory.findq_def", "arithmeticTheory.FACT", "arithmeticTheory.EXP", "arithmeticTheory.EVEN", "arithmeticTheory.DIVMOD_DEF", "arithmeticTheory.DIVISION", "arithmeticTheory.DIV2_def", "arithmeticTheory.BIT2", "arithmeticTheory.BIT1", "arithmeticTheory.ALT_ZERO", "arithmeticTheory.ADD", "arithmeticTheory.ABS_DIFF_def", "arithmeticTheory.ZERO_MOD", "arithmeticTheory.ZERO_LT_EXP", "arithmeticTheory.ZERO_LESS_MULT", "arithmeticTheory.ZERO_LESS_EXP", "arithmeticTheory.ZERO_LESS_EQ", "arithmeticTheory.ZERO_LESS_ADD", "arithmeticTheory.ZERO_EXP", "arithmeticTheory.ZERO_DIV", "arithmeticTheory.X_MOD_Y_EQ_X", "arithmeticTheory.X_LT_X_SQUARED", "arithmeticTheory.X_LT_EXP_X_IFF", "arithmeticTheory.X_LT_EXP_X", "arithmeticTheory.X_LT_DIV", "arithmeticTheory.X_LE_X_SQUARED", "arithmeticTheory.X_LE_X_EXP", "arithmeticTheory.X_LE_DIV", "arithmeticTheory.WOP_measure", "arithmeticTheory.WOP", "arithmeticTheory.TWO", "arithmeticTheory.transitive_monotone", "arithmeticTheory.transitive_measure", "arithmeticTheory.transitive_LESS", "arithmeticTheory.TIMES2", "arithmeticTheory.TC_eq_NRC", "arithmeticTheory.SUM_SQUARED", "arithmeticTheory.SUC_SUB1", "arithmeticTheory.SUC_SUB", "arithmeticTheory.SUC_PRE", "arithmeticTheory.SUC_ONE_ADD", "arithmeticTheory.SUC_NOT", "arithmeticTheory.SUC_MOD", "arithmeticTheory.SUC_ELIM_THM", "arithmeticTheory.SUC_ELIM_NUMERALS", "arithmeticTheory.SUC_ADD_SYM", "arithmeticTheory.SUB_SUB", "arithmeticTheory.SUB_RIGHT_SUB", "arithmeticTheory.SUB_RIGHT_LESS_EQ", "arithmeticTheory.SUB_RIGHT_LESS", "arithmeticTheory.SUB_RIGHT_GREATER_EQ", "arithmeticTheory.SUB_RIGHT_GREATER", "arithmeticTheory.SUB_RIGHT_EQ", "arithmeticTheory.SUB_RIGHT_ADD", "arithmeticTheory.SUB_PLUS", "arithmeticTheory.SUB_MONO_EQ", "arithmeticTheory.SUB_MOD", "arithmeticTheory.SUB_LESS_SUC", "arithmeticTheory.SUB_LESS_OR", "arithmeticTheory.SUB_LESS_EQ_ADD", "arithmeticTheory.SUB_LESS_EQ", "arithmeticTheory.SUB_LESS_0", "arithmeticTheory.SUB_LESS", "arithmeticTheory.SUB_LEFT_SUC", "arithmeticTheory.SUB_LEFT_SUB", "arithmeticTheory.SUB_LEFT_LESS_EQ", "arithmeticTheory.SUB_LEFT_LESS", "arithmeticTheory.SUB_LEFT_GREATER_EQ", "arithmeticTheory.SUB_LEFT_GREATER", "arithmeticTheory.SUB_LEFT_EQ", "arithmeticTheory.SUB_LEFT_ADD", "arithmeticTheory.SUB_EQUAL_0", "arithmeticTheory.SUB_EQ_EQ_0", "arithmeticTheory.SUB_EQ_0", "arithmeticTheory.SUB_ELIM_THM_EXISTS", "arithmeticTheory.SUB_ELIM_THM", "arithmeticTheory.SUB_CANCEL", "arithmeticTheory.SUB_ADD", "arithmeticTheory.SUB_0", "arithmeticTheory.STRICTLY_INCREASING_UNBOUNDED", "arithmeticTheory.STRICTLY_INCREASING_TC", "arithmeticTheory.STRICTLY_INCREASING_ONE_ONE", "arithmeticTheory.RTC_NRC", "arithmeticTheory.RTC_eq_NRC", "arithmeticTheory.RIGHT_SUB_DISTRIB", "arithmeticTheory.RIGHT_ADD_DISTRIB", "arithmeticTheory.PRE_SUC_EQ", "arithmeticTheory.PRE_SUB1", "arithmeticTheory.PRE_SUB", "arithmeticTheory.PRE_LESS_EQ", "arithmeticTheory.PRE_ELIM_THM", "arithmeticTheory.OR_LESS", "arithmeticTheory.ONE_ONE_UNBOUNDED", "arithmeticTheory.ONE_ONE_INV_IMAGE_BOUNDED", "arithmeticTheory.ONE_MOD_IFF", "arithmeticTheory.ONE_MOD", "arithmeticTheory.ONE_LT_MULT_IMP", "arithmeticTheory.ONE_LT_MULT", "arithmeticTheory.ONE_LT_EXP", "arithmeticTheory.ONE", "arithmeticTheory.ODD_SUB", "arithmeticTheory.ODD_OR_EVEN", "arithmeticTheory.ODD_MULT", "arithmeticTheory.ODD_EXP_IFF", "arithmeticTheory.ODD_EXP", "arithmeticTheory.ODD_EXISTS", "arithmeticTheory.ODD_EVEN", "arithmeticTheory.ODD_DOUBLE", "arithmeticTheory.ODD_ADD", "arithmeticTheory.NUMERAL_MULT_EQ_DIV", "arithmeticTheory.num_CASES", "arithmeticTheory.num_case_NUMERAL_compute", "arithmeticTheory.num_case_eq", "arithmeticTheory.num_case_cong", "arithmeticTheory.num_case_compute", "arithmeticTheory.NRC_SUC_RECURSE_LEFT", "arithmeticTheory.NRC_RTC", "arithmeticTheory.NRC_ADD_I", "arithmeticTheory.NRC_ADD_EQN", "arithmeticTheory.NRC_ADD_E", "arithmeticTheory.NRC_1", "arithmeticTheory.NRC_0", "arithmeticTheory.NOT_ZERO_LT_ZERO", "arithmeticTheory.NOT_SUC_LESS_EQ_0", "arithmeticTheory.NOT_SUC_LESS_EQ", "arithmeticTheory.NOT_SUC_ADD_LESS_EQ", "arithmeticTheory.NOT_STRICTLY_DECREASING", "arithmeticTheory.NOT_ODD_EQ_EVEN", "arithmeticTheory.NOT_NUM_EQ", "arithmeticTheory.NOT_LT_ZERO_EQ_ZERO", "arithmeticTheory.NOT_LESS_EQUAL", "arithmeticTheory.NOT_LESS", "arithmeticTheory.NOT_LEQ", "arithmeticTheory.NOT_GREATER_EQ", "arithmeticTheory.NOT_GREATER", "arithmeticTheory.NOT_EXP_0", "arithmeticTheory.NORM_0", "arithmeticTheory.MULT_COMM", "arithmeticTheory.MULT_SUC_EQ", "arithmeticTheory.MULT_SUC", "arithmeticTheory.MULT_RIGHT_1", "arithmeticTheory.MULT_MONO_EQ", "arithmeticTheory.MULT_LESS_EQ_SUC", "arithmeticTheory.MULT_LEFT_1", "arithmeticTheory.MULT_INCREASES", "arithmeticTheory.MULT_EXP_MONO", "arithmeticTheory.MULT_EQ_ID", "arithmeticTheory.MULT_EQ_DIV", "arithmeticTheory.MULT_EQ_1", "arithmeticTheory.MULT_EQ_0", "arithmeticTheory.MULT_DIV", "arithmeticTheory.MULT_CLAUSES", "arithmeticTheory.MULT_ASSOC", "arithmeticTheory.MULT_0", "arithmeticTheory.MODEQ_TRANS", "arithmeticTheory.MODEQ_THM", "arithmeticTheory.MODEQ_SYM", "arithmeticTheory.MODEQ_SUC_CONG", "arithmeticTheory.MODEQ_REFL", "arithmeticTheory.MODEQ_PLUS_CONG", "arithmeticTheory.MODEQ_NUMERAL", "arithmeticTheory.MODEQ_NONZERO_MODEQUALITY", "arithmeticTheory.MODEQ_MULT_CONG", "arithmeticTheory.MODEQ_MOD", "arithmeticTheory.MODEQ_INTRO_CONG", "arithmeticTheory.MODEQ_EXP_CONG", "arithmeticTheory.MODEQ_0_CONG", "arithmeticTheory.MODEQ_0", "arithmeticTheory.MOD_UNIQUE", "arithmeticTheory.MOD_TIMES_SUB", "arithmeticTheory.MOD_TIMES2", "arithmeticTheory.MOD_TIMES", "arithmeticTheory.MOD_SUC_IFF", "arithmeticTheory.MOD_SUC", "arithmeticTheory.MOD_SUB", "arithmeticTheory.MOD_PLUS", "arithmeticTheory.MOD_P_UNIV", "arithmeticTheory.MOD_P", "arithmeticTheory.MOD_ONE", "arithmeticTheory.MOD_MULT_MOD", "arithmeticTheory.MOD_MULT", "arithmeticTheory.MOD_MOD", "arithmeticTheory.MOD_LIFT_PLUS_IFF", "arithmeticTheory.MOD_LIFT_PLUS", "arithmeticTheory.MOD_LESS_EQ", "arithmeticTheory.MOD_LESS", "arithmeticTheory.MOD_EQ_0_DIVISOR", "arithmeticTheory.MOD_EQ_0", "arithmeticTheory.MOD_ELIM", "arithmeticTheory.MOD_COMMON_FACTOR", "arithmeticTheory.MOD_2", "arithmeticTheory.MOD_1", "arithmeticTheory.MIN_MAX_PRED", "arithmeticTheory.MIN_MAX_LT", "arithmeticTheory.MIN_MAX_LE", "arithmeticTheory.MIN_MAX_EQ", "arithmeticTheory.MIN_LT", "arithmeticTheory.MIN_LE", "arithmeticTheory.MIN_IDEM", "arithmeticTheory.MIN_EQ_0", "arithmeticTheory.MIN_COMM", "arithmeticTheory.MIN_ASSOC", "arithmeticTheory.MIN_0", "arithmeticTheory.MAX_LT", "arithmeticTheory.MAX_LE", "arithmeticTheory.MAX_IDEM", "arithmeticTheory.MAX_EQ_0", "arithmeticTheory.MAX_COMM", "arithmeticTheory.MAX_ASSOC", "arithmeticTheory.MAX_0", "arithmeticTheory.LT_SUB_RCANCEL", "arithmeticTheory.LT_SUB_LCANCEL", "arithmeticTheory.LT_MULT_RCANCEL", "arithmeticTheory.LT_MULT_LCANCEL", "arithmeticTheory.LT_MULT_CANCEL_RBARE", "arithmeticTheory.LT_MULT_CANCEL_LBARE", "arithmeticTheory.LESS_MONO_ADD_EQ", "arithmeticTheory.LT_ADD_LCANCEL", "arithmeticTheory.LESS_TRANS", "arithmeticTheory.LESS_SUC_NOT", "arithmeticTheory.LESS_SUC_EQ_COR", "arithmeticTheory.LESS_SUB_ADD_LESS", "arithmeticTheory.LESS_STRONG_ADD", "arithmeticTheory.LESS_OR_EQ_ALT", "arithmeticTheory.LESS_OR_EQ_ADD", "arithmeticTheory.LESS_OR", "arithmeticTheory.LESS_NOT_SUC", "arithmeticTheory.LESS_MULT_MONO", "arithmeticTheory.LESS_MULT2", "arithmeticTheory.LESS_MONO_MULT2", "arithmeticTheory.LESS_MONO_MULT", "arithmeticTheory.LESS_MONO_ADD_INV", "arithmeticTheory.LESS_MONO_ADD", "arithmeticTheory.LESS_MOD", "arithmeticTheory.LESS_LESS_SUC", "arithmeticTheory.LESS_LESS_EQ_TRANS", "arithmeticTheory.LESS_LESS_CASES", "arithmeticTheory.LESS_IMP_LESS_OR_EQ", "arithmeticTheory.LESS_IMP_LESS_ADD", "arithmeticTheory.LESS_EXP_SUC_MONO", "arithmeticTheory.LESS_EQUAL_DIFF", "arithmeticTheory.LESS_EQUAL_ANTISYM", "arithmeticTheory.LESS_EQUAL_ADD", "arithmeticTheory.LESS_EQ_TRANS", "arithmeticTheory.LESS_EQ_SUC_REFL", "arithmeticTheory.LESS_EQ_SUB_LESS", "arithmeticTheory.LESS_EQ_REFL", "arithmeticTheory.LESS_EQ_MONO_ADD_EQ", "arithmeticTheory.LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_LESS_TRANS", "arithmeticTheory.LESS_EQ_LESS_EQ_MONO", "arithmeticTheory.LESS_EQ_IMP_LESS_SUC", "arithmeticTheory.LESS_EQ_IFF_LESS_SUC", "arithmeticTheory.LESS_EQ_EXISTS", "arithmeticTheory.LESS_EQ_CASES", "arithmeticTheory.LESS_EQ_ANTISYM", "arithmeticTheory.LESS_EQ_ADD_SUB", "arithmeticTheory.LESS_EQ_ADD_EXISTS", "arithmeticTheory.LESS_EQ_ADD", "arithmeticTheory.LESS_EQ_0", "arithmeticTheory.LESS_EQ", "arithmeticTheory.LESS_DIV_EQ_ZERO", "arithmeticTheory.LESS_CASES_IMP", "arithmeticTheory.LESS_CASES", "arithmeticTheory.LESS_ANTISYM", "arithmeticTheory.LESS_ADD_SUC", "arithmeticTheory.LESS_ADD_NONZERO", "arithmeticTheory.LESS_ADD_1", "arithmeticTheory.LESS_ADD", "arithmeticTheory.LESS_0_CASES", "arithmeticTheory.LEFT_SUB_DISTRIB", "arithmeticTheory.LEFT_ADD_DISTRIB", "arithmeticTheory.LE_SUB_RCANCEL", "arithmeticTheory.LE_SUB_LCANCEL", "arithmeticTheory.LE_MULT_RCANCEL", "arithmeticTheory.LE_MULT_LCANCEL", "arithmeticTheory.LE_MULT_CANCEL_RBARE", "arithmeticTheory.LE_MULT_CANCEL_LBARE", "arithmeticTheory.LE_LT1", "arithmeticTheory.LE_ADD_RCANCEL", "arithmeticTheory.ADD_MONO_LESS_EQ", "arithmeticTheory.LE", "arithmeticTheory.INV_PRE_LESS_EQ", "arithmeticTheory.INV_PRE_LESS", "arithmeticTheory.INV_PRE_EQ", "arithmeticTheory.GREATER_EQ", "arithmeticTheory.FUNPOW_SUC", "arithmeticTheory.FUNPOW_ADD", "arithmeticTheory.FUNPOW_1", "arithmeticTheory.FUNPOW_0", "arithmeticTheory.FORALL_NUM_THM", "arithmeticTheory.FORALL_NUM", "arithmeticTheory.findq_thm", "arithmeticTheory.findq_eq_0", "arithmeticTheory.findq_divisor", "arithmeticTheory.FACT_LESS", "arithmeticTheory.EXP_SUB_NUMERAL", "arithmeticTheory.EXP_SUB", "arithmeticTheory.EXP_MOD", "arithmeticTheory.EXP_EXP_MULT", "arithmeticTheory.EXP_EXP_LT_MONO", "arithmeticTheory.EXP_EXP_LE_MONO", "arithmeticTheory.EXP_EXP_INJECTIVE", "arithmeticTheory.EXP_EQ_1", "arithmeticTheory.EXP_EQ_0", "arithmeticTheory.EXP_BASE_MULT", "arithmeticTheory.EXP_BASE_LT_MONO", "arithmeticTheory.EXP_BASE_LEQ_MONO_SUC_IMP", "arithmeticTheory.EXP_BASE_LEQ_MONO_IMP", "arithmeticTheory.EXP_BASE_LE_MONO", "arithmeticTheory.EXP_BASE_LE_IFF", "arithmeticTheory.EXP_BASE_INJECTIVE", "arithmeticTheory.EXP_ALWAYS_BIG_ENOUGH", "arithmeticTheory.EXP_ADD", "arithmeticTheory.EXP_1", "arithmeticTheory.EXP2_LT", "arithmeticTheory.EXISTS_NUM", "arithmeticTheory.EXISTS_GREATEST", "arithmeticTheory.EVEN_SUB", "arithmeticTheory.EVEN_OR_ODD", "arithmeticTheory.EVEN_ODD_EXISTS", "arithmeticTheory.EVEN_ODD", "arithmeticTheory.EVEN_MULT", "arithmeticTheory.EVEN_MOD2", "arithmeticTheory.EVEN_EXP_IFF", "arithmeticTheory.EVEN_EXP", "arithmeticTheory.EVEN_EXISTS", "arithmeticTheory.EVEN_DOUBLE", "arithmeticTheory.EVEN_AND_ODD", "arithmeticTheory.EVEN_ADD", "arithmeticTheory.EQ_MULT_RCANCEL", "arithmeticTheory.EQ_MULT_LCANCEL", "arithmeticTheory.EQ_ADD_RCANCEL", "arithmeticTheory.EQ_LESS_EQ", "arithmeticTheory.EQ_ADD_LCANCEL", "arithmeticTheory.DOUBLE_LT", "arithmeticTheory.DIVMOD_THM", "arithmeticTheory.DIVMOD_ID", "arithmeticTheory.DIVMOD_CORRECT", "arithmeticTheory.DIVMOD_CALC", "arithmeticTheory.DIV_UNIQUE", "arithmeticTheory.DIV_SUB", "arithmeticTheory.DIV_P_UNIV", "arithmeticTheory.DIV_P", "arithmeticTheory.DIV_ONE", "arithmeticTheory.DIV_MULT", "arithmeticTheory.DIV_MOD_MOD_DIV", "arithmeticTheory.DIV_LT_X", "arithmeticTheory.DIV_LESS_EQ", "arithmeticTheory.DIV_LESS", "arithmeticTheory.DIV_LE_X", "arithmeticTheory.DIV_LE_MONOTONE", "arithmeticTheory.DIV_EQ_X", "arithmeticTheory.DIV_EQ_0", "arithmeticTheory.DIV_DIV_DIV_MULT", "arithmeticTheory.DIV_1", "arithmeticTheory.DIV_0_IMP_LT", "arithmeticTheory.DIV2_DOUBLE", "arithmeticTheory.datatype_num", "arithmeticTheory.DA", "arithmeticTheory.COMPLETE_INDUCTION", "arithmeticTheory.CANCEL_SUB", "arithmeticTheory.BOUNDED_FORALL_THM", "arithmeticTheory.BOUNDED_EXISTS_THM", "arithmeticTheory.binary_induct", "arithmeticTheory.ADD_COMM", "arithmeticTheory.ADD_SUC", "arithmeticTheory.ADD_SUB", "arithmeticTheory.ADD_MODULUS_RIGHT", "arithmeticTheory.ADD_MODULUS_LEFT", "arithmeticTheory.ADD_MODULUS", "arithmeticTheory.ADD_MOD", "arithmeticTheory.ADD_INV_0_EQ", "arithmeticTheory.ADD_INV_0", "arithmeticTheory.ADD_EQ_SUB", "arithmeticTheory.ADD_EQ_1", "arithmeticTheory.ADD_EQ_0", "arithmeticTheory.ADD_DIV_RWT", "arithmeticTheory.ADD_DIV_ADD_DIV", "arithmeticTheory.ADD_CLAUSES", "arithmeticTheory.ADD_ASSOC", "arithmeticTheory.ADD_0", "arithmeticTheory.ADD1", "arithmeticTheory.ABS_DIFF_ZERO", "arithmeticTheory.ABS_DIFF_TRIANGLE_lem", "arithmeticTheory.ABS_DIFF_TRIANGLE", "arithmeticTheory.ABS_DIFF_COMM", "arithmeticTheory.ABS_DIFF_SUMS", "arithmeticTheory.ABS_DIFF_SUC_LE", "arithmeticTheory.ABS_DIFF_SUC", "arithmeticTheory.ABS_DIFF_PLUS_LE", "arithmeticTheory.ABS_DIFF_LE_SUM", "arithmeticTheory.ABS_DIFF_EQS", "arithmeticTheory.ABS_DIFF_EQ_0", "arithmeticTheory.ABS_DIFF_ADD_SAME", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(R :α -> β -> bool) (l1 :α list) (l2 :β list) (n :num). LIST_REL R l1 l2 ⇒ LIST_REL R (DROP n l1) (DROP n l2)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "(some(x :α). F) = (NONE :α option)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "optionTheory.some_def", "optionTheory.SOME_DEF", "optionTheory.OPTREL_def", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MCOMP_def", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.OPTION_GUARD_def", "optionTheory.OPTION_CHOICE_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.OPTION_APPLY_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_SOME_APPLY", "optionTheory.some_intro", "optionTheory.some_elim", "optionTheory.SOME_APPLY_PERMUTE", "optionTheory.SOME_11", "optionTheory.OPTREL_THM", "optionTheory.OPTREL_SOME", "optionTheory.OPTREL_refl", "optionTheory.OPTREL_O", "optionTheory.OPTREL_MONO", "optionTheory.OPTREL_eq", "optionTheory.option_nchotomy", "optionTheory.OPTION_MCOMP_ID", "optionTheory.OPTION_MCOMP_ASSOC", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION", "optionTheory.OPTION_GUARD_EQ_THM", "optionTheory.OPTION_GUARD_COND", "optionTheory.OPTION_CHOICE_NONE", "optionTheory.OPTION_CHOICE_EQ_NONE", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.OPTION_APPLY_o", "optionTheory.OPTION_APPLY_MAP2", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(f :α -> β) (l1 :α list) (l2 :α list). MAP f (l1 ++ l2) = MAP f l1 ++ MAP f l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.datatype_list", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_ASSOC"], "∀(g :α -> α -> α) (f :β -> α -> α). FCOMM g f ⇒ ∀(e :α). LEFT_ID g e ⇒ ∀(l1 :β list) (l2 :β list). FOLDR f e (l1 ++ l2) = g (FOLDR f e l1) (FOLDR f e l2)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "combinTheory.W_DEF", "combinTheory.UPDATE_def", "combinTheory.S_DEF", "combinTheory.RIGHT_ID_DEF", "combinTheory.o_DEF", "combinTheory.MONOID_DEF", "combinTheory.LEFT_ID_DEF", "combinTheory.K_DEF", "combinTheory.I_DEF", "combinTheory.FCOMM_DEF", "combinTheory.FAIL_DEF", "combinTheory.COMM_DEF", "combinTheory.C_DEF", "combinTheory.ASSOC_DEF", "combinTheory.APP_DEF", "combinTheory.W_THM", "combinTheory.UPDATE_EQ", "combinTheory.UPDATE_COMMUTES", "combinTheory.UPDATE_APPLY_IMP_ID", "combinTheory.UPDATE_APPLY_ID_RWT", "combinTheory.UPDATE_APPLY_ID", "combinTheory.UPDATE_APPLY", "combinTheory.UPD_SAME_KEY_UNWIND", "combinTheory.UPD11_SAME_KEY_AND_BASE", "combinTheory.UPD11_SAME_BASE", "combinTheory.SAME_KEY_UPDATE_DIFFER", "combinTheory.S_THM", "combinTheory.S_ABS_R", "combinTheory.S_ABS_L", "combinTheory.o_THM", "combinTheory.o_ASSOC'", "combinTheory.o_ASSOC", "combinTheory.o_ABS_R", "combinTheory.o_ABS_L", "combinTheory.MONOID_DISJ_F", "combinTheory.MONOID_CONJ_T", "combinTheory.literal_case_FORALL_ELIM", "combinTheory.LET_FORALL_ELIM", "combinTheory.K_THM", "combinTheory.K_o_THM", "combinTheory.I_THM", "combinTheory.I_o_ID", "combinTheory.GEN_literal_case_RATOR", "combinTheory.GEN_literal_case_RAND", "combinTheory.GEN_LET_RATOR", "combinTheory.GEN_LET_RAND", "combinTheory.FCOMM_ASSOC", "combinTheory.FAIL_THM", "combinTheory.C_THM", "combinTheory.C_ABS_L", "combinTheory.ASSOC_SYM", "combinTheory.ASSOC_DISJ", "combinTheory.ASSOC_CONJ", "combinTheory.APPLY_UPDATE_THM", "combinTheory.APPLY_UPDATE_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∅ (x :α) ⇔ F": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.EXTENSION"], "∀(R :α -> α -> bool). WeakLinearOrder R ⇔ WeakOrder R ∧ ∀(a :α) (b :α). R a b ∨ R b a": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.WeakOrder", "relationTheory.WeakLinearOrder", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.STRORD", "relationTheory.StrongOrder", "relationTheory.StrongLinearOrder", "relationTheory.SC_DEF", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RCOMPL", "relationTheory.RC_DEF", "relationTheory.PreOrder", "relationTheory.Order", "relationTheory.O_DEF", "relationTheory.LinearOrder", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.WeakOrder_EQ", "relationTheory.WeakOrd_Ord", "relationTheory.trichotomous_STRORD", "relationTheory.trichotomous_RC", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_O_RSUBSET", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_RSUBSET", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRORD_Strong", "relationTheory.STRORD_RC", "relationTheory.STRORD_AND_NOT_Id", "relationTheory.StrongOrd_Ord", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.RTC_RINTER", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RSUBSET_WeakOrder", "relationTheory.RSUBSET_antisymmetric", "relationTheory.RSUBSET_ANTISYM", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_Id_RSUBSET", "relationTheory.reflexive_EQC", "relationTheory.RC_Weak", "relationTheory.RC_SUBSET", "relationTheory.RC_STRORD", "relationTheory.RC_RTC", "relationTheory.RC_OR_Id", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.NOT_INVOL", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.irrefl_trans_implies_antisym", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_EQC", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IDEM_TC", "relationTheory.IDEM_STRORD", "relationTheory.IDEM_SC", "relationTheory.IDEM_RTC", "relationTheory.IDEM_RC", "relationTheory.IDEM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.equivalence_inv_identity", "relationTheory.EqIsBothRSUBSET", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(R :α -> β -> bool) (R' :γ -> α -> bool). (R ∘ᵣ R')ᵀ = R'ᵀ ∘ᵣ Rᵀ": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.SC_DEF", "relationTheory.RTC_def", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RC_DEF", "relationTheory.O_DEF", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RC", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RESTRICT_LEMMA", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_EQC", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.NOT_INVOL", "relationTheory.irreflexive_inv", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_EQC", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IDEM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.equivalence_inv_identity", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(x :α) (l :α list). x::l = [x] ++ l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(f :α -> β) (l :α list). MAP f l = FOLDR (λ(x :α) (l' :β list). f x::l') ([] :β list) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(x :α). x ∈ 𝕌(:α)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.EXTENSION", "pred_setTheory.EMPTY_applied"], "𝕌(:α + β) = 𝕌(:α) ⊔ 𝕌(:β)": ["pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.count_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PHP", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(s :α -> bool) (t :α -> bool) (g :α -> bool). (s DIFF t) ∩ g = s ∩ g DIFF t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied"], "∀(Q :num -> bool) (P :num -> bool). (∃(n :num). P n) ∧ (∀(n :num). (∀(m :num). m < n ⇒ ¬P m) ∧ P n ⇒ Q n) ⇒ Q ($LEAST P)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "whileTheory.WHILE", "whileTheory.LEAST_DEF", "whileTheory.HOARE_SPEC_DEF", "whileTheory.WHILE_RULE", "whileTheory.WHILE_INDUCTION", "whileTheory.LESS_LEAST", "whileTheory.LEAST_INTRO", "whileTheory.ITERATION", "whileTheory.FULL_LEAST_INTRO", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC"], "∀(xs :α list). FILTER (λ(x :α). F) xs = ([] :α list)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.SING_HD", "listTheory.NULL_LENGTH", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_APPEND", "listTheory.MAP_TL", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_APPEND", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_TL", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.FOLDR_CONS", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_APPEND_EQN", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "∀(f :α -> β) (x :α) (s :α -> bool). IMAGE f (x INSERT s) = f x INSERT IMAGE f s": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(l1 :α list) (l2 :α list). TAKE (LENGTH l1) (l1 ++ l2) = l1": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(l :α list list). FLAT l = FOLDR ($++ :α list -> α list -> α list) ([] :α list) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "(¬LLEX (R :α -> α -> bool) ([] :α list) ([] :α list) ∧ ¬LLEX R ((h1 :α)::(t1 :α list)) ([] :α list)) ∧ LLEX R ([] :α list) ((h2 :α)::(t2 :α list)) ∧ (LLEX R (h1::t1) (h2::t2) ⇔ R h1 h2 ∨ h1 = h2 ∧ LLEX R t1 t2)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.LAST_SNOC", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_DROP", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND"], "∀(l :α list). l ++ ([] :α list) = l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.TL_DEF", "listTheory.SUM", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.APPEND", "listTheory.TL", "listTheory.NULL", "listTheory.list_distinct", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_MAP2", "listTheory.EQ_LIST", "listTheory.EL_MAP2", "listTheory.datatype_list", "listTheory.CONS"], "∀(s :α -> bool) (f :α -> β). f ∈ FUNSET s (∅ :β -> bool) ⇔ s = (∅ :α -> bool)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(b :bool). b ⇒ (b ⇔ T)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(l :α list) (x :α). ELL (0 :num) (SNOC x l) = x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE_TAKE_T", "rich_listTheory.TAKE_TAKE", "rich_listTheory.TAKE_SNOC", "rich_listTheory.TAKE_SEG", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_FOLDR", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.SEG_TAKE_DROP", "rich_listTheory.SEG_SUC_CONS", "rich_listTheory.SEG_SNOC", "rich_listTheory.SEG_SEG", "rich_listTheory.SEG_LENGTH_SNOC", "rich_listTheory.SEG_LENGTH_ID", "rich_listTheory.SEG_APPEND2", "rich_listTheory.SEG_APPEND1", "rich_listTheory.SEG_APPEND", "rich_listTheory.SEG_0_SNOC", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NULL_FOLDR", "rich_listTheory.NULL_FOLDL", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_FOLDR_MAP", "rich_listTheory.MEM_FOLDR", "rich_listTheory.MEM_FOLDL_MAP", "rich_listTheory.MEM_FOLDL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_REVERSE", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.MAP_FLAT", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_SCANR", "rich_listTheory.LENGTH_SCANL", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_LASTN", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LENGTH_BUTLASTN", "rich_listTheory.LASTN_SEG", "rich_listTheory.LASTN_MAP", "rich_listTheory.LASTN_LENGTH_ID", "rich_listTheory.LASTN_LENGTH_APPEND", "rich_listTheory.LASTN_LASTN", "rich_listTheory.LASTN_CONS", "rich_listTheory.LASTN_BUTLASTN", "rich_listTheory.LASTN_APPEND2", "rich_listTheory.LASTN_APPEND1", "rich_listTheory.LASTN_1", "rich_listTheory.LASTN", "rich_listTheory.LAST_LASTN_LAST", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_PREFIX", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_SINGLE", "rich_listTheory.FOLDR_REVERSE", "rich_listTheory.FOLDR_MAP_REVERSE", "rich_listTheory.FOLDR_MAP", "rich_listTheory.FOLDR_FOLDL_REVERSE", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_FILTER_REVERSE", "rich_listTheory.FOLDR_FILTER", "rich_listTheory.FOLDR_CONS_NIL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_SNOC_NIL", "rich_listTheory.FOLDL_SINGLE", "rich_listTheory.FOLDL_REVERSE", "rich_listTheory.FOLDL_MAP", "rich_listTheory.FOLDL_FOLDR_REVERSE", "rich_listTheory.FOLDL_FILTER", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_FLAT", "rich_listTheory.FILTER_FILTER", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.FCOMM_FOLDR_FLAT", "rich_listTheory.FCOMM_FOLDR_APPEND", "rich_listTheory.FCOMM_FOLDL_FLAT", "rich_listTheory.FCOMM_FOLDL_APPEND", "rich_listTheory.EXISTS_FOLDR_MAP", "rich_listTheory.EXISTS_FOLDR", "rich_listTheory.EXISTS_FOLDL_MAP", "rich_listTheory.EXISTS_FOLDL", "rich_listTheory.EXISTS_DISJ", "rich_listTheory.EVERY_FOLDR_MAP", "rich_listTheory.EVERY_FOLDR", "rich_listTheory.EVERY_FOLDL_MAP", "rich_listTheory.EVERY_FOLDL", "rich_listTheory.ELL_SEG", "rich_listTheory.ELL_LAST", "rich_listTheory.ELL_compute", "rich_listTheory.DROP_SNOC", "rich_listTheory.DROP_SEG", "rich_listTheory.DROP_LENGTH_NIL", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP_DROP_T", "rich_listTheory.DROP_DROP", "rich_listTheory.DROP_APPEND2", "rich_listTheory.DROP_APPEND1", "rich_listTheory.DROP_APPEND", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.COMM_MONOID_FOLDR", "rich_listTheory.COMM_MONOID_FOLDL", "rich_listTheory.COMM_ASSOC_FOLDR_REVERSE", "rich_listTheory.COMM_ASSOC_FOLDL_REVERSE", "rich_listTheory.BUTLASTN_SUC_FRONT", "rich_listTheory.BUTLASTN_SEG", "rich_listTheory.BUTLASTN_MAP", "rich_listTheory.BUTLASTN_LENGTH_NIL", "rich_listTheory.BUTLASTN_LENGTH_CONS", "rich_listTheory.BUTLASTN_LENGTH_APPEND", "rich_listTheory.BUTLASTN_LASTN_NIL", "rich_listTheory.BUTLASTN_LASTN", "rich_listTheory.BUTLASTN_FRONT", "rich_listTheory.BUTLASTN_CONS", "rich_listTheory.BUTLASTN_BUTLASTN", "rich_listTheory.BUTLASTN_APPEND2", "rich_listTheory.BUTLASTN_APPEND1", "rich_listTheory.BUTLASTN_1", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_FOLDR_FLAT", "rich_listTheory.ASSOC_FOLDL_FLAT", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_TAKE_LASTN", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.APPEND_BUTLASTN_LASTN", "rich_listTheory.APPEND_BUTLASTN_DROP", "rich_listTheory.ALL_EL_MAP"], "∀(ls :α list). ls ≠ ([] :α list) ⇒ MAP (f :α -> β) (FRONT ls) = FRONT (MAP f ls)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM", "listTheory.REVERSE_DEF", "listTheory.NULL_DEF", "listTheory.MAP", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.list_case_def", "listTheory.LENGTH", "listTheory.LAST_DEF", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_eq_0", "listTheory.SING_HD", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.NULL_LENGTH", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.NOT_NULL_MEM", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.MEM_EL", "listTheory.MEM_DROP", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_ID", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LIST_TO_SET", "listTheory.list_size_cong", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_NIL", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_APPEND_CONS", "listTheory.HD_DROP", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_0", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11"], "∀(n :num). (0 :num) < SUC n": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "numTheory.ZERO_REP_DEF", "numTheory.ZERO_DEF", "numTheory.SUC_REP_DEF", "numTheory.SUC_DEF", "numTheory.num_TY_DEF", "numTheory.num_ISO_DEF", "numTheory.IS_NUM_REP", "numTheory.NOT_SUC", "numTheory.INV_SUC", "numTheory.INDUCTION", "prim_recTheory.PRE_DEF", "prim_recTheory.LESS_DEF", "prim_recTheory.SUC_LESS", "prim_recTheory.PRE", "prim_recTheory.NOT_LESS_0", "prim_recTheory.LESS_REFL", "prim_recTheory.INV_SUC_EQ"], "IMAGE (f :β -> α) (s :β -> bool) = {(z :α)} ⇔ s ≠ (∅ :β -> bool) ∧ ∀(x :β). x ∈ s ⇒ f x = z": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF_2", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF_EMPTY", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_EQ_SING", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT_EXPAND", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET_gen", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INTER", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_SUBSET", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.count_add", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_LE", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_REST", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "∀(f :α -> β -> β) (e :β) (l :α list). FOLDR f e l = FOLDL (λ(x :β) (y :α). f y x) e (REVERSE l)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(l1 :α list) (l2 :α list) (a :α). IS_SUFFIX l1 l2 ⇒ IS_SUFFIX (a::l1) l2": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LASTN", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.ELL_compute", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.ALL_EL_MAP"], "∀(x :α) (P :α -> bool). x ∈ P ⇔ P x": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(R :α -> α -> bool). StrongOrder R ⇒ Order R": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.WeakOrder", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.StrongOrder", "relationTheory.SC_DEF", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RCOMPL", "relationTheory.RC_DEF", "relationTheory.PreOrder", "relationTheory.Order", "relationTheory.O_DEF", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_O_RSUBSET", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_RSUBSET", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.RTC_RINTER", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_Id_RSUBSET", "relationTheory.reflexive_EQC", "relationTheory.RC_SUBSET", "relationTheory.RC_RTC", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.NOT_INVOL", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.irrefl_trans_implies_antisym", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_EQC", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IDEM", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.equivalence_inv_identity", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(n :num) (l :α list). n < LENGTH l ⇒ MEM (EL n l) l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "prim_recTheory.wellfounded_def", "prim_recTheory.SIMP_REC_REL", "prim_recTheory.SIMP_REC", "prim_recTheory.PRIM_REC_FUN", "prim_recTheory.PRIM_REC", "prim_recTheory.PRE_DEF", "prim_recTheory.measure_def", "prim_recTheory.LESS_DEF", "prim_recTheory.WF_PRED", "prim_recTheory.WF_measure", "prim_recTheory.WF_LESS", "prim_recTheory.WF_IFF_WELLFOUNDED", "prim_recTheory.TC_IM_RTC_SUC", "prim_recTheory.SUC_LESS", "prim_recTheory.SUC_ID", "prim_recTheory.SIMP_REC_THM", "prim_recTheory.SIMP_REC_REL_UNIQUE_RESULT", "prim_recTheory.SIMP_REC_REL_UNIQUE", "prim_recTheory.SIMP_REC_EXISTS", "prim_recTheory.RTC_IM_TC", "prim_recTheory.PRIM_REC_THM", "prim_recTheory.PRIM_REC_EQN", "prim_recTheory.PRE", "prim_recTheory.num_Axiom_old", "prim_recTheory.num_Axiom", "prim_recTheory.NOT_LESS_EQ", "prim_recTheory.NOT_LESS_0", "prim_recTheory.measure_thm", "prim_recTheory.LESS_THM", "prim_recTheory.LESS_SUC_SUC", "prim_recTheory.LESS_SUC_REFL", "prim_recTheory.LESS_SUC_IMP", "prim_recTheory.LESS_SUC", "prim_recTheory.LESS_REFL", "prim_recTheory.LESS_NOT_EQ", "prim_recTheory.LESS_MONO", "prim_recTheory.LESS_LEMMA2", "prim_recTheory.LESS_LEMMA1", "prim_recTheory.LESS_ALT", "prim_recTheory.LESS_0_0", "prim_recTheory.LESS_0", "prim_recTheory.INV_SUC_EQ", "prim_recTheory.EQ_LESS", "prim_recTheory.DC", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases"], "∀(x :α) (y :α) (P :α -> bool). x ∈ y INSERT P ⇔ x = y ∨ x ≠ y ∧ x ∈ P": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUM_SET_DEF", "pred_setTheory.SUM_IMAGE_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.schroeder_close_def", "pred_setTheory.RINV_LO", "pred_setTheory.REST_DEF", "pred_setTheory.REL_RESTRICT_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.PROD_SET_DEF", "pred_setTheory.PROD_IMAGE_DEF", "pred_setTheory.POW_DEF", "pred_setTheory.partition_def", "pred_setTheory.pairwise_def", "pred_setTheory.pair_to_num_def", "pred_setTheory.num_to_pair_def", "pred_setTheory.MIN_SET_DEF", "pred_setTheory.MAX_SET_DEF", "pred_setTheory.LINV_OPT_def", "pred_setTheory.LINV_LO", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.HAS_SIZE", "pred_setTheory.GSPECIFICATION", "pred_setTheory.FUNSET", "pred_setTheory.FINITE_DEF", "pred_setTheory.equiv_on_def", "pred_setTheory.enumerate_def", "pred_setTheory.EMPTY_DEF", "pred_setTheory.disjUNION_def", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DFUNSET", "pred_setTheory.DELETE_DEF", "pred_setTheory.CROSS_DEF", "pred_setTheory.countable_def", "pred_setTheory.count_def", "pred_setTheory.COMPL_DEF", "pred_setTheory.chooser_def", "pred_setTheory.CHOICE_DEF", "pred_setTheory.CARD_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.BIGUNION", "pred_setTheory.BIGINTER", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_FUNSET_UNIV", "pred_setTheory.UNIV_FUN_TO_BOOL", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNIQUE_MEMBER_SING", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_DELETE", "pred_setTheory.union_countable_IFF", "pred_setTheory.union_countable", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_INJ_INV", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SURJ_CARD", "pred_setTheory.SUM_UNIV", "pred_setTheory.SUM_SET_UNION", "pred_setTheory.SUM_SET_THM", "pred_setTheory.SUM_SET_SUBSET_LE", "pred_setTheory.SUM_SET_SING", "pred_setTheory.SUM_SET_IN_LE", "pred_setTheory.SUM_SET_EMPTY", "pred_setTheory.SUM_SET_DELETE", "pred_setTheory.SUM_SET_count_2", "pred_setTheory.SUM_SET_count", "pred_setTheory.SUM_SAME_IMAGE", "pred_setTheory.SUM_IMAGE_ZERO", "pred_setTheory.SUM_IMAGE_upper_bound", "pred_setTheory.SUM_IMAGE_UNION", "pred_setTheory.SUM_IMAGE_THM", "pred_setTheory.SUM_IMAGE_SUBSET_LE", "pred_setTheory.SUM_IMAGE_SING", "pred_setTheory.SUM_IMAGE_PERMUTES", "pred_setTheory.SUM_IMAGE_MONO_LESS_EQ", "pred_setTheory.SUM_IMAGE_MONO_LESS", "pred_setTheory.SUM_IMAGE_lower_bound", "pred_setTheory.SUM_IMAGE_INJ_o", "pred_setTheory.SUM_IMAGE_IN_LE", "pred_setTheory.SUM_IMAGE_DELETE", "pred_setTheory.SUM_IMAGE_CONG", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_PSUBSET_TRANS", "pred_setTheory.SUBSET_POW", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_MIN_SET", "pred_setTheory.SUBSET_MAX_SET", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_RIGHT", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_FINITE_I", "pred_setTheory.SUBSET_FINITE", "pred_setTheory.SUBSET_EQ_CARD", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DIFF", "pred_setTheory.SUBSET_DELETE_BOTH", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_CROSS", "pred_setTheory.subset_countable", "pred_setTheory.SUBSET_BIGUNION_I", "pred_setTheory.SUBSET_BIGUNION", "pred_setTheory.SUBSET_BIGINTER", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_IFF_CARD1", "pred_setTheory.SING_FINITE", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.SCHROEDER_CLOSED", "pred_setTheory.SCHROEDER_CLOSE_SUBSET", "pred_setTheory.SCHROEDER_CLOSE_SET", "pred_setTheory.SCHROEDER_CLOSE", "pred_setTheory.SCHROEDER_BERNSTEIN_AUTO", "pred_setTheory.SCHROEDER_BERNSTEIN", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RINV_DEF", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.REL_RESTRICT_SUBSET", "pred_setTheory.REL_RESTRICT_EMPTY", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_SUBSET_TRANS", "pred_setTheory.PSUBSET_SING", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PSUBSET_FINITE", "pred_setTheory.PSUBSET_EQN", "pred_setTheory.PROD_SET_THM", "pred_setTheory.PROD_SET_IMAGE_REDUCTION", "pred_setTheory.PROD_SET_EMPTY", "pred_setTheory.PROD_IMAGE_THM", "pred_setTheory.pow_no_surj", "pred_setTheory.POW_INSERT", "pred_setTheory.POW_EQNS", "pred_setTheory.POW_EMPTY", "pred_setTheory.POW_applied", "pred_setTheory.PHP", "pred_setTheory.partition_SUBSET", "pred_setTheory.partition_elements_interrelate", "pred_setTheory.partition_elements_disjoint", "pred_setTheory.partition_CARD", "pred_setTheory.pairwise_UNION", "pred_setTheory.pairwise_SUBSET", "pred_setTheory.pair_to_num_inv", "pred_setTheory.pair_to_num_formula", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.num_countable", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_FINITE", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MIN_SET_UNION", "pred_setTheory.MIN_SET_THM", "pred_setTheory.MIN_SET_LEQ_MAX_SET", "pred_setTheory.MIN_SET_LEM", "pred_setTheory.MIN_SET_ELIM", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.MAX_SET_UNION", "pred_setTheory.MAX_SET_THM", "pred_setTheory.MAX_SET_REWRITES", "pred_setTheory.MAX_SET_ELIM", "pred_setTheory.LINV_OPT_THM", "pred_setTheory.LINV_DEF", "pred_setTheory.LESS_CARD_DIFF", "pred_setTheory.KoenigsLemma_WF", "pred_setTheory.KoenigsLemma", "pred_setTheory.K_SUBSET", "pred_setTheory.ITSET_THM", "pred_setTheory.ITSET_INSERT", "pred_setTheory.ITSET_ind", "pred_setTheory.ITSET_EMPTY", "pred_setTheory.ITSET_def", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_UNION_COMPL", "pred_setTheory.INTER_UNION", "pred_setTheory.INTER_SUBSET_EQN", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_FINITE", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_CROSS", "pred_setTheory.inter_countable", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_BIGUNION", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJECTIVE_IMAGE_FINITE", "pred_setTheory.inj_surj", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_LINV_OPT_IMAGE", "pred_setTheory.INJ_LINV_OPT", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_INR", "pred_setTheory.INJ_INL", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.inj_image_countable_IFF", "pred_setTheory.INJ_IMAGE_BIJ", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.inj_countable", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.INJ_CARD_IMAGE_EQ", "pred_setTheory.INJ_CARD_IMAGE", "pred_setTheory.INJ_CARD", "pred_setTheory.INJ_BIJ_SUBSET", "pred_setTheory.INFINITE_UNIV", "pred_setTheory.INFINITE_SUBSET", "pred_setTheory.infinite_rest", "pred_setTheory.infinite_pow_uncountable", "pred_setTheory.INFINITE_PAIR_UNIV", "pred_setTheory.infinite_num_inj", "pred_setTheory.INFINITE_INJ_NOT_SURJ", "pred_setTheory.INFINITE_INJ", "pred_setTheory.INFINITE_INHAB", "pred_setTheory.INFINITE_EXPLICIT_ENUMERATE", "pred_setTheory.INFINITE_DIFF_FINITE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_POW", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_INFINITE_NOT_FINITE", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_FUNSET", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_disjUNION", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DFUNSET", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_CROSS", "pred_setTheory.IN_COUNT", "pred_setTheory.IN_COMPL", "pred_setTheory.IN_BIGUNION_IMAGE", "pred_setTheory.IN_BIGUNION", "pred_setTheory.IN_BIGINTER_IMAGE", "pred_setTheory.IN_BIGINTER", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_FINITE", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.image_countable", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_BIGUNION", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11_INFINITE", "pred_setTheory.IMAGE_11", "pred_setTheory.HAS_SIZE_SUC", "pred_setTheory.HAS_SIZE_CARD", "pred_setTheory.HAS_SIZE_0", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_T", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_OR", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ID", "pred_setTheory.GSPEC_F_COND", "pred_setTheory.GSPEC_F", "pred_setTheory.GSPEC_ETA", "pred_setTheory.GSPEC_EQ2", "pred_setTheory.GSPEC_EQ", "pred_setTheory.GSPEC_AND", "pred_setTheory.FUNSET_THM", "pred_setTheory.FUNSET_INTER", "pred_setTheory.FUNSET_EMPTY", "pred_setTheory.FUNSET_DFUNSET", "pred_setTheory.FUNSET_applied", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.FORALL_IN_BIGUNION", "pred_setTheory.FINITELY_INJECTIVE_IMAGE_FINITE", "pred_setTheory.FINITE_WF_noloops", "pred_setTheory.FINITE_WEAK_ENUMERATE", "pred_setTheory.FINITE_UNION", "pred_setTheory.FINITE_SURJ_BIJ", "pred_setTheory.FINITE_SURJ", "pred_setTheory.FINITE_StrongOrder_WF", "pred_setTheory.FINITE_SING", "pred_setTheory.FINITE_REST_EQ", "pred_setTheory.FINITE_REST", "pred_setTheory.FINITE_PSUBSET_UNIV", "pred_setTheory.FINITE_PSUBSET_INFINITE", "pred_setTheory.FINITE_POW_EQN", "pred_setTheory.FINITE_POW", "pred_setTheory.FINITE_partition", "pred_setTheory.FINITE_ISO_NUM", "pred_setTheory.FINITE_INSERT", "pred_setTheory.FINITE_INJ", "pred_setTheory.FINITE_INDUCT", "pred_setTheory.FINITE_HAS_SIZE", "pred_setTheory.FINITE_EMPTY", "pred_setTheory.FINITE_DIFF_down", "pred_setTheory.FINITE_DIFF", "pred_setTheory.FINITE_DELETE", "pred_setTheory.FINITE_CROSS_EQ", "pred_setTheory.FINITE_CROSS", "pred_setTheory.finite_countable", "pred_setTheory.FINITE_COUNT", "pred_setTheory.FINITE_COMPLETE_INDUCTION", "pred_setTheory.FINITE_BIJ_COUNT_EQ", "pred_setTheory.FINITE_BIJ_COUNT", "pred_setTheory.FINITE_BIJ_CARD_EQ", "pred_setTheory.FINITE_BIJ_CARD", "pred_setTheory.FINITE_BIJ", "pred_setTheory.FINITE_BIGUNION_EQ", "pred_setTheory.FINITE_BIGUNION", "pred_setTheory.FINITE_BIGINTER", "pred_setTheory.EXTENSION", "pred_setTheory.EXPLICIT_ENUMERATE_NOT_EMPTY", "pred_setTheory.EXPLICIT_ENUMERATE_MONO", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.ENUMERATE", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_NOT_IN_partition", "pred_setTheory.EMPTY_IN_POW", "pred_setTheory.EMPTY_FUNSET", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.disjUNION_UNIV", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_COUNT", "pred_setTheory.DISJOINT_BIGUNION", "pred_setTheory.DISJOINT_BIGINTER", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER_COMPL", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_BIGINTER1", "pred_setTheory.DIFF_BIGINTER", "pred_setTheory.DIFF_applied", "pred_setTheory.DFUNSET_applied", "pred_setTheory.DELETE_SUBSET_INSERT", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.CROSS_UNIV", "pred_setTheory.CROSS_SUBSET", "pred_setTheory.CROSS_SINGS", "pred_setTheory.CROSS_INSERT_RIGHT", "pred_setTheory.CROSS_INSERT_LEFT", "pred_setTheory.CROSS_EQNS", "pred_setTheory.CROSS_EMPTY_EQN", "pred_setTheory.CROSS_EMPTY", "pred_setTheory.cross_countable_IFF", "pred_setTheory.cross_countable", "pred_setTheory.CROSS_BIGUNION", "pred_setTheory.CROSS_applied", "pred_setTheory.countable_Uprod", "pred_setTheory.countable_surj", "pred_setTheory.COUNTABLE_SUBSET", "pred_setTheory.COUNTABLE_NUM", "pred_setTheory.countable_INSERT", "pred_setTheory.COUNTABLE_IMAGE_NUM", "pred_setTheory.countable_image_nats", "pred_setTheory.COUNTABLE_ENUM", "pred_setTheory.countable_EMPTY", "pred_setTheory.COUNTABLE_COUNT", "pred_setTheory.COUNTABLE_ALT_BIJ", "pred_setTheory.COUNTABLE_ALT", "pred_setTheory.COUNT_ZERO", "pred_setTheory.COUNT_SUC", "pred_setTheory.COUNT_NOT_EMPTY", "pred_setTheory.COUNT_MONO", "pred_setTheory.count_EQN", "pred_setTheory.COUNT_DELETE", "pred_setTheory.COUNT_applied", "pred_setTheory.COUNT_11", "pred_setTheory.COMPONENT", "pred_setTheory.COMPL_UNION", "pred_setTheory.COMPL_SPLITS", "pred_setTheory.COMPL_INTER", "pred_setTheory.COMPL_EMPTY", "pred_setTheory.COMPL_COMPL", "pred_setTheory.COMPL_CLAUSES", "pred_setTheory.COMPL_applied", "pred_setTheory.COMMUTING_ITSET_RECURSES", "pred_setTheory.COMMUTING_ITSET_INSERT", "pred_setTheory.chooser_compute", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.CARD_UNION_EQN", "pred_setTheory.CARD_UNION", "pred_setTheory.CARD_SUBSET", "pred_setTheory.CARD_SING_CROSS", "pred_setTheory.CARD_SING", "pred_setTheory.CARD_PSUBSET", "pred_setTheory.CARD_POW", "pred_setTheory.CARD_INTER_LESS_EQ", "pred_setTheory.CARD_INSERT", "pred_setTheory.CARD_INJ_IMAGE", "pred_setTheory.CARD_IMAGE", "pred_setTheory.CARD_EQ_0", "pred_setTheory.CARD_EMPTY", "pred_setTheory.CARD_disjUNION", "pred_setTheory.CARD_DIFF_EQN", "pred_setTheory.CARD_DIFF", "pred_setTheory.CARD_DELETE", "pred_setTheory.CARD_CROSS", "pred_setTheory.CARD_COUNT", "pred_setTheory.CARD_BIGUNION_SAME_SIZED_SETS", "pred_setTheory.BIJ_TRANS", "pred_setTheory.BIJ_SYM_IMP", "pred_setTheory.BIJ_SYM", "pred_setTheory.BIJ_support", "pred_setTheory.BIJ_NUM_COUNTABLE", "pred_setTheory.BIJ_LINV_INV", "pred_setTheory.BIJ_LINV_BIJ", "pred_setTheory.BIJ_INV", "pred_setTheory.BIJ_INSERT_IMP", "pred_setTheory.BIJ_INSERT", "pred_setTheory.BIJ_INJ_SURJ", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_IMAGE", "pred_setTheory.BIJ_IFF_INV", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_FINITE_SUBSET", "pred_setTheory.BIJ_FINITE", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.BIJ_ALT", "pred_setTheory.BIGUNION_UNION", "pred_setTheory.BIGUNION_SUBSET", "pred_setTheory.BIGUNION_SING", "pred_setTheory.BIGUNION_partition", "pred_setTheory.BIGUNION_PAIR", "pred_setTheory.BIGUNION_INSERT", "pred_setTheory.BIGUNION_IMAGE_UNIV", "pred_setTheory.BIGUNION_EQ_EMPTY", "pred_setTheory.BIGUNION_EMPTY", "pred_setTheory.BIGUNION_CROSS", "pred_setTheory.bigunion_countable", "pred_setTheory.BIGUNION_applied", "pred_setTheory.BIGINTER_UNION", "pred_setTheory.BIGINTER_SUBSET", "pred_setTheory.BIGINTER_SING", "pred_setTheory.BIGINTER_INTER", "pred_setTheory.BIGINTER_INSERT", "pred_setTheory.BIGINTER_EMPTY", "pred_setTheory.BIGINTER_applied", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION", "pred_setTheory.ABS_DIFF_SUM_IMAGE"], "OWHILE (G :α -> bool) (f :α -> α) (s :α) = SOME (s' :α) ⇒ ¬G s'": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "whileTheory.WHILE", "whileTheory.OWHILE_def", "whileTheory.OLEAST_def", "whileTheory.LEAST_DEF", "whileTheory.HOARE_SPEC_DEF", "whileTheory.WHILE_RULE", "whileTheory.WHILE_INDUCTION", "whileTheory.OWHILE_THM", "whileTheory.OWHILE_EQ_NONE", "whileTheory.OLEAST_INTRO", "whileTheory.OLEAST_EQNS", "whileTheory.OLEAST_EQ_SOME", "whileTheory.OLEAST_EQ_NONE", "whileTheory.LESS_LEAST", "whileTheory.LEAST_T", "whileTheory.LEAST_LESS_EQ", "whileTheory.LEAST_INTRO", "whileTheory.LEAST_EXISTS_IMP", "whileTheory.LEAST_EXISTS", "whileTheory.LEAST_EQ", "whileTheory.LEAST_ELIM", "whileTheory.ITERATION", "whileTheory.FULL_LEAST_INTRO", "optionTheory.some_def", "optionTheory.SOME_DEF", "optionTheory.OPTREL_def", "optionTheory.option_TY_DEF", "optionTheory.option_REP_ABS_DEF", "optionTheory.OPTION_MCOMP_def", "optionTheory.OPTION_MAP_DEF", "optionTheory.OPTION_MAP2_DEF", "optionTheory.OPTION_IGNORE_BIND_def", "optionTheory.OPTION_GUARD_def", "optionTheory.OPTION_CHOICE_def", "optionTheory.option_case_def", "optionTheory.OPTION_BIND_def", "optionTheory.OPTION_APPLY_def", "optionTheory.OPTION_ALL_def", "optionTheory.NONE_DEF", "optionTheory.THE_DEF", "optionTheory.SOME_SOME_APPLY", "optionTheory.some_intro", "optionTheory.some_F", "optionTheory.some_EQ", "optionTheory.some_elim", "optionTheory.SOME_APPLY_PERMUTE", "optionTheory.SOME_11", "optionTheory.OPTREL_THM", "optionTheory.OPTREL_SOME", "optionTheory.OPTREL_refl", "optionTheory.OPTREL_O", "optionTheory.OPTREL_MONO", "optionTheory.OPTREL_eq", "optionTheory.option_nchotomy", "optionTheory.OPTION_MCOMP_ID", "optionTheory.OPTION_MCOMP_ASSOC", "optionTheory.OPTION_MAP_id", "optionTheory.OPTION_MAP_EQ_SOME", "optionTheory.OPTION_MAP_EQ_NONE_both_ways", "optionTheory.OPTION_MAP_EQ_NONE", "optionTheory.OPTION_MAP_CONG", "optionTheory.OPTION_MAP_COMPOSE", "optionTheory.OPTION_MAP_CASE", "optionTheory.OPTION_MAP2_THM", "optionTheory.OPTION_MAP2_SOME", "optionTheory.OPTION_MAP2_NONE", "optionTheory.OPTION_MAP2_cong", "optionTheory.OPTION_JOIN_EQ_SOME", "optionTheory.OPTION_JOIN_DEF", "optionTheory.option_induction", "optionTheory.option_Induct", "optionTheory.OPTION_IGNORE_BIND_thm", "optionTheory.OPTION_IGNORE_BIND_EQUALS_OPTION", "optionTheory.OPTION_GUARD_EQ_THM", "optionTheory.OPTION_GUARD_COND", "optionTheory.OPTION_CHOICE_NONE", "optionTheory.OPTION_CHOICE_EQ_NONE", "optionTheory.option_CASES", "optionTheory.option_case_SOME_ID", "optionTheory.option_case_lazily", "optionTheory.option_case_ID", "optionTheory.option_case_eq", "optionTheory.option_case_cong", "optionTheory.option_case_compute", "optionTheory.OPTION_BIND_SOME", "optionTheory.OPTION_BIND_EQUALS_OPTION", "optionTheory.OPTION_BIND_cong", "optionTheory.option_Axiom", "optionTheory.OPTION_APPLY_o", "optionTheory.OPTION_APPLY_MAP2", "optionTheory.OPTION_ALL_MONO", "optionTheory.OPTION_ALL_CONG", "optionTheory.NOT_SOME_NONE", "optionTheory.NOT_NONE_SOME", "optionTheory.NOT_IS_SOME_EQ_NONE", "optionTheory.IS_SOME_MAP", "optionTheory.IS_SOME_EXISTS", "optionTheory.IS_SOME_DEF", "optionTheory.IS_SOME_BIND", "optionTheory.IS_NONE_EQ_NONE", "optionTheory.IS_NONE_DEF", "optionTheory.IF_NONE_EQUALS_OPTION", "optionTheory.IF_EQUALS_OPTION", "optionTheory.FORALL_OPTION", "optionTheory.EXISTS_OPTION", "optionTheory.datatype_option", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "symmetric (R1 :α -> α -> bool) ∧ symmetric (R2 :β -> β -> bool) ⇒ symmetric (R1 LEX R2)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "pairTheory.UNCURRY_VAR", "pairTheory.SWAP_def", "pairTheory.RPROD_DEF", "pairTheory.prod_TY_DEF", "pairTheory.PROD_ALL_def", "pairTheory.PAIR_MAP", "pairTheory.pair_CASE_def", "pairTheory.PAIR", "pairTheory.LEX_DEF", "pairTheory.CURRY_DEF", "pairTheory.COMMA_DEF", "pairTheory.ABS_REP_prod", "pairTheory.WF_RPROD", "pairTheory.WF_LEX", "pairTheory.UNCURRY_ONE_ONE_THM", "pairTheory.UNCURRY_DEF", "pairTheory.UNCURRY_CURRY_THM", "pairTheory.UNCURRY_CONG", "pairTheory.transitive_LEX", "pairTheory.total_LEX", "pairTheory.SND_PAIR_MAP", "pairTheory.SND", "pairTheory.S_UNCURRY_R", "pairTheory.reflexive_LEX", "pairTheory.PROD_ALL_THM", "pairTheory.PROD_ALL_MONO", "pairTheory.PROD_ALL_CONG", "pairTheory.PFORALL_THM", "pairTheory.PEXISTS_THM", "pairTheory.PAIR_MAP_THM", "pairTheory.pair_induction", "pairTheory.PAIR_FUN_THM", "pairTheory.PAIR_FST_SND_EQ", "pairTheory.PAIR_EQ", "pairTheory.ABS_PAIR_THM", "pairTheory.pair_case_def", "pairTheory.pair_case_eq", "pairTheory.pair_case_cong", "pairTheory.pair_Axiom", "pairTheory.o_UNCURRY_R", "pairTheory.LEX_MONO", "pairTheory.LEX_DEF_THM", "pairTheory.LET2_RATOR", "pairTheory.LET2_RAND", "pairTheory.LAMBDA_PROD", "pairTheory.FST_PAIR_MAP", "pairTheory.FST", "pairTheory.FORALL_UNCURRY", "pairTheory.FORALL_PROD", "pairTheory.EXISTS_PROD", "pairTheory.ELIM_UNCURRY", "pairTheory.ELIM_PFORALL_EVAL", "pairTheory.ELIM_PFORALL", "pairTheory.ELIM_PEXISTS_EVAL", "pairTheory.ELIM_PEXISTS", "pairTheory.datatype_pair", "pairTheory.CURRY_UNCURRY_THM", "pairTheory.CURRY_ONE_ONE_THM", "pairTheory.CLOSED_PAIR_EQ", "pairTheory.C_UNCURRY_L", "relationTheory.WFREC_DEF", "relationTheory.WFP_DEF", "relationTheory.WF_DEF", "relationTheory.WeakOrder", "relationTheory.WeakLinearOrder", "relationTheory.WCR_def", "relationTheory.trichotomous", "relationTheory.transitive_def", "relationTheory.total_def", "relationTheory.the_fun_def", "relationTheory.TC_DEF", "relationTheory.symmetric_def", "relationTheory.STRORD", "relationTheory.StrongOrder", "relationTheory.StrongLinearOrder", "relationTheory.SN_def", "relationTheory.SC_DEF", "relationTheory.RUNIV", "relationTheory.RUNION", "relationTheory.RTC_def", "relationTheory.RSUBSET", "relationTheory.RRESTRICT_DEF", "relationTheory.RRANGE", "relationTheory.RINTER", "relationTheory.RESTRICT_DEF", "relationTheory.reflexive_def", "relationTheory.RDOM_DELETE_DEF", "relationTheory.RDOM_DEF", "relationTheory.RCOMPL", "relationTheory.rcdiamond_def", "relationTheory.RC_DEF", "relationTheory.PreOrder", "relationTheory.Order", "relationTheory.O_DEF", "relationTheory.nf_def", "relationTheory.LinearOrder", "relationTheory.irreflexive_def", "relationTheory.INVOL_DEF", "relationTheory.inv_image_def", "relationTheory.inv_DEF", "relationTheory.INDUCTIVE_INVARIANT_ON_DEF", "relationTheory.INDUCTIVE_INVARIANT_DEF", "relationTheory.IDEM_DEF", "relationTheory.equivalence_def", "relationTheory.EQC_DEF", "relationTheory.EMPTY_REL_DEF", "relationTheory.diamond_def", "relationTheory.diag_def", "relationTheory.CR_def", "relationTheory.approx_def", "relationTheory.antisymmetric_def", "relationTheory.WFREC_THM", "relationTheory.WFREC_COROLLARY", "relationTheory.WFP_STRONG_INDUCT", "relationTheory.WFP_RULES", "relationTheory.WFP_INDUCT", "relationTheory.WFP_CASES", "relationTheory.WF_TC_EQN", "relationTheory.WF_TC", "relationTheory.WF_SUBSET", "relationTheory.WF_RECURSION_THM", "relationTheory.WF_NOT_REFL", "relationTheory.WF_noloops", "relationTheory.WF_irreflexive", "relationTheory.WF_inv_image", "relationTheory.WF_INDUCTION_THM", "relationTheory.WF_EQ_WFP", "relationTheory.WF_EQ_INDUCTION_THM", "relationTheory.WF_EMPTY_REL", "relationTheory.WF_antisymmetric", "relationTheory.WeakOrder_EQ", "relationTheory.WeakOrd_Ord", "relationTheory.WeakLinearOrder_dichotomy", "relationTheory.trichotomous_STRORD", "relationTheory.trichotomous_RC", "relationTheory.transitive_TC_identity", "relationTheory.RTC_TRANSITIVE", "relationTheory.transitive_RINTER", "relationTheory.transitive_RC", "relationTheory.transitive_O_RSUBSET", "relationTheory.transitive_inv_image", "relationTheory.transitive_inv", "relationTheory.transitive_EQC", "relationTheory.total_inv_image", "relationTheory.TFL_INDUCTIVE_INVARIANT_WFREC", "relationTheory.TFL_INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.TC_TRANSITIVE", "relationTheory.TC_SUBSET", "relationTheory.TC_STRONG_INDUCT_RIGHT1", "relationTheory.TC_STRONG_INDUCT_LEFT1", "relationTheory.TC_STRONG_INDUCT", "relationTheory.TC_RULES", "relationTheory.TC_RTC", "relationTheory.TC_RC_EQNS", "relationTheory.TC_MONOTONE", "relationTheory.TC_lifts_transitive_relations", "relationTheory.TC_lifts_monotonicities", "relationTheory.TC_lifts_invariants", "relationTheory.TC_lifts_equalities", "relationTheory.TC_INDUCT_RIGHT1", "relationTheory.TC_INDUCT_LEFT1", "relationTheory.TC_INDUCT_ALT_RIGHT", "relationTheory.TC_INDUCT_ALT_LEFT", "relationTheory.TC_INDUCT", "relationTheory.TC_implies_one_step", "relationTheory.TC_IDEM", "relationTheory.TC_CASES2_E", "relationTheory.TC_CASES2", "relationTheory.TC_CASES1_E", "relationTheory.TC_CASES1", "relationTheory.symmetric_TC", "relationTheory.symmetric_SC_identity", "relationTheory.symmetric_RC", "relationTheory.symmetric_inv_RSUBSET", "relationTheory.symmetric_inv_image", "relationTheory.symmetric_inv_identity", "relationTheory.symmetric_inv", "relationTheory.symmetric_EQC", "relationTheory.STRORD_Strong", "relationTheory.STRORD_RC", "relationTheory.STRORD_AND_NOT_Id", "relationTheory.StrongOrd_Ord", "relationTheory.STRONG_EQC_INDUCTION", "relationTheory.SC_SYMMETRIC", "relationTheory.SC_MONOTONE", "relationTheory.SC_lifts_monotonicities", "relationTheory.SC_lifts_equalities", "relationTheory.SC_IDEM", "relationTheory.RUNIV_SUBSET", "relationTheory.RUNION_COMM", "relationTheory.RUNION_ASSOC", "relationTheory.RTC_TC_RC", "relationTheory.RTC_SINGLE", "relationTheory.RTC_strongind", "relationTheory.RTC_STRONG_INDUCT_RIGHT1", "relationTheory.RTC_STRONG_INDUCT", "relationTheory.RTC_RULES_RIGHT1", "relationTheory.RTC_rules", "relationTheory.RTC_RTC", "relationTheory.RTC_RINTER", "relationTheory.reflexive_RTC", "relationTheory.RTC_REFL", "relationTheory.RTC_MONOTONE", "relationTheory.RTC_lifts_reflexive_transitive_relations", "relationTheory.RTC_lifts_monotonicities", "relationTheory.RTC_lifts_invariants", "relationTheory.RTC_lifts_equalities", "relationTheory.RTC_INDUCT_RIGHT1", "relationTheory.RTC_INDUCT", "relationTheory.RTC_ind", "relationTheory.RTC_IDEM", "relationTheory.RTC_EQC", "relationTheory.RTC_CASES_TC", "relationTheory.RTC_CASES_RTC_TWICE", "relationTheory.RTC_CASES2", "relationTheory.RTC_CASES1", "relationTheory.RTC_cases", "relationTheory.RTC_ALT_RIGHT_INDUCT", "relationTheory.RTC_ALT_RIGHT_DEF", "relationTheory.RTC_ALT_INDUCT", "relationTheory.RTC_ALT_DEF", "relationTheory.RSUBSET_WeakOrder", "relationTheory.RSUBSET_antisymmetric", "relationTheory.RSUBSET_ANTISYM", "relationTheory.RINTER_COMM", "relationTheory.RINTER_ASSOC", "relationTheory.RESTRICT_LEMMA", "relationTheory.REMPTY_SUBSET", "relationTheory.reflexive_TC", "relationTheory.reflexive_RC_identity", "relationTheory.RC_REFLEXIVE", "relationTheory.reflexive_inv_image", "relationTheory.reflexive_inv", "relationTheory.reflexive_Id_RSUBSET", "relationTheory.reflexive_EQC", "relationTheory.rcdiamond_diamond", "relationTheory.RC_Weak", "relationTheory.RC_SUBSET", "relationTheory.RC_STRORD", "relationTheory.RC_RTC", "relationTheory.RC_OR_Id", "relationTheory.RC_MOVES_OUT", "relationTheory.RC_MONOTONE", "relationTheory.RC_lifts_monotonicities", "relationTheory.RC_lifts_invariants", "relationTheory.RC_lifts_equalities", "relationTheory.RC_IDEM", "relationTheory.O_MONO", "relationTheory.O_Id", "relationTheory.O_ASSOC", "relationTheory.NOT_INVOL", "relationTheory.Newmans_lemma", "relationTheory.irreflexive_RSUBSET", "relationTheory.irreflexive_inv", "relationTheory.irrefl_trans_implies_antisym", "relationTheory.INVOL_ONE_ONE", "relationTheory.INVOL_ONE_ENO", "relationTheory.INVOL", "relationTheory.inv_TC", "relationTheory.inv_SC", "relationTheory.inv_RC", "relationTheory.inv_O", "relationTheory.inv_MOVES_OUT", "relationTheory.inv_INVOL", "relationTheory.inv_inv", "relationTheory.inv_image_thm", "relationTheory.inv_Id", "relationTheory.inv_EQC", "relationTheory.inv_diag", "relationTheory.INDUCTIVE_INVARIANT_WFREC", "relationTheory.INDUCTIVE_INVARIANT_ON_WFREC", "relationTheory.INDUCTION_WF_THM", "relationTheory.IN_RRANGE", "relationTheory.IN_RDOM_RUNION", "relationTheory.IN_RDOM_RRESTRICT", "relationTheory.IN_RDOM_DELETE", "relationTheory.IN_RDOM", "relationTheory.IDEM_TC", "relationTheory.IDEM_STRORD", "relationTheory.IDEM_SC", "relationTheory.IDEM_RTC", "relationTheory.IDEM_RC", "relationTheory.IDEM", "relationTheory.Id_O", "relationTheory.EXTEND_RTC_TC_RIGHT1_EQN", "relationTheory.EXTEND_RTC_TC_RIGHT1", "relationTheory.EXTEND_RTC_TC_EQN", "relationTheory.EXTEND_RTC_TC", "relationTheory.establish_CR", "relationTheory.equivalence_inv_identity", "relationTheory.EqIsBothRSUBSET", "relationTheory.EQC_TRANS", "relationTheory.EQC_SYM", "relationTheory.EQC_REFL", "relationTheory.EQC_R", "relationTheory.EQC_MOVES_IN", "relationTheory.EQC_MONOTONE", "relationTheory.EQC_INDUCTION", "relationTheory.EQC_IDEM", "relationTheory.EQC_EQUIVALENCE", "relationTheory.diamond_TC_diamond", "relationTheory.diamond_RC_diamond", "relationTheory.antisymmetric_RINTER", "relationTheory.antisymmetric_RC", "relationTheory.antisymmetric_inv", "relationTheory.ALT_equivalence", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "∀(P :α -> bool) (l :α list). PREFIX P l ≼ l": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "listTheory.LENGTH_NIL_SYM", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "listTheory.INFINITE_LIST_UNIV", "listTheory.ZIP_def", "listTheory.UNZIP", "listTheory.UNIQUE_DEF", "listTheory.TL_DEF", "listTheory.TAKE_def", "listTheory.SUM_ACC_DEF", "listTheory.SUM", "listTheory.splitAtPki_def", "listTheory.SNOC", "listTheory.SHORTLEX_def", "listTheory.SET_TO_LIST_primitive_def", "listTheory.REVERSE_DEF", "listTheory.REV_DEF", "listTheory.PAD_RIGHT", "listTheory.PAD_LEFT", "listTheory.OPT_MMAP_def", "listTheory.oHD_def", "listTheory.oEL_def", "listTheory.NULL_DEF", "listTheory.nub_def", "listTheory.MAP", "listTheory.LUPDATE_def", "listTheory.LRC_def", "listTheory.LLEX_def", "listTheory.list_TY_DEF", "listTheory.LIST_TO_SET_DEF", "listTheory.list_size_def", "listTheory.LIST_LIFT2_def", "listTheory.LIST_IGNORE_BIND_def", "listTheory.LIST_GUARD_def", "listTheory.list_case_def", "listTheory.LIST_BIND_def", "listTheory.LIST_APPLY_def", "listTheory.LENGTH", "listTheory.LEN_DEF", "listTheory.LAST_DEF", "listTheory.isPREFIX", "listTheory.INDEX_OF_def", "listTheory.INDEX_FIND_def", "listTheory.HD", "listTheory.GENLIST_AUX", "listTheory.GENLIST", "listTheory.FRONT_DEF", "listTheory.FOLDR", "listTheory.FOLDL", "listTheory.FLAT", "listTheory.FIND_def", "listTheory.FILTER", "listTheory.EXISTS_DEF", "listTheory.EVERYi_def", "listTheory.EVERY_DEF", "listTheory.EL", "listTheory.dropWhile_def", "listTheory.DROP_def", "listTheory.APPEND", "listTheory.ALL_DISTINCT", "listTheory.adjacent_def", "listTheory.ZIP_UNZIP", "listTheory.ZIP_MAP", "listTheory.ZIP_GENLIST", "listTheory.ZIP_EQ_NIL", "listTheory.ZIP_DROP", "listTheory.ZIP", "listTheory.WF_SHORTLEX_same_lengths", "listTheory.WF_SHORTLEX", "listTheory.WF_LIST_PRED", "listTheory.UNZIP_ZIP", "listTheory.UNZIP_THM", "listTheory.UNZIP_MAP", "listTheory.UNIQUE_LENGTH_FILTER", "listTheory.UNIQUE_FILTER", "listTheory.UNION_APPEND", "listTheory.TL_GENLIST", "listTheory.TL", "listTheory.TAKE_TAKE_MIN", "listTheory.TAKE_SUM", "listTheory.TAKE_splitAtPki", "listTheory.TAKE_nil", "listTheory.TAKE_LENGTH_TOO_LONG", "listTheory.TAKE_LENGTH_ID_rwt", "listTheory.TAKE_LENGTH_ID", "listTheory.TAKE_GENLIST", "listTheory.TAKE_EQ_NIL", "listTheory.TAKE_DROP_SWAP", "listTheory.TAKE_DROP", "listTheory.TAKE_cons", "listTheory.TAKE_compute", "listTheory.TAKE_APPEND2", "listTheory.TAKE_APPEND1", "listTheory.TAKE_0", "listTheory.TAKE1_DROP", "listTheory.TAKE1", "listTheory.SWAP_REVERSE_SYM", "listTheory.SWAP_REVERSE", "listTheory.SUM_SUM_ACC", "listTheory.SUM_SNOC", "listTheory.SUM_MAP_PLUS_ZIP", "listTheory.SUM_MAP_PLUS", "listTheory.SUM_MAP_MEM_bound", "listTheory.SUM_MAP_FOLDL", "listTheory.SUM_IMAGE_LIST_TO_SET_upper_bound", "listTheory.SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST", "listTheory.SUM_eq_0", "listTheory.SUM_APPEND", "listTheory.SUM_ACC_SUM_LEM", "listTheory.splitAtPki_RAND", "listTheory.splitAtPki_MAP", "listTheory.splitAtPki_EQN", "listTheory.splitAtPki_change_predicate", "listTheory.splitAtPki_APPEND", "listTheory.SNOC_INDUCT", "listTheory.SNOC_CASES", "listTheory.SNOC_Axiom", "listTheory.SNOC_APPEND", "listTheory.SNOC_11", "listTheory.SINGL_SINGL_APPLY", "listTheory.SINGL_LIST_APPLY_R", "listTheory.SINGL_LIST_APPLY_L", "listTheory.SINGL_APPLY_PERMUTE", "listTheory.SINGL_APPLY_MAP", "listTheory.SING_HD", "listTheory.SHORTLEX_transitive", "listTheory.SHORTLEX_total", "listTheory.SHORTLEX_THM", "listTheory.SHORTLEX_NIL2", "listTheory.SHORTLEX_MONO", "listTheory.SHORTLEX_LENGTH_LE", "listTheory.SET_TO_LIST_THM", "listTheory.SET_TO_LIST_SING", "listTheory.SET_TO_LIST_INV", "listTheory.SET_TO_LIST_IND", "listTheory.SET_TO_LIST_IN_MEM", "listTheory.SET_TO_LIST_EMPTY", "listTheory.SET_TO_LIST_CARD", "listTheory.REVERSE_SNOC_DEF", "listTheory.REVERSE_SNOC", "listTheory.REVERSE_REVERSE", "listTheory.REVERSE_REV", "listTheory.REVERSE_o_REVERSE", "listTheory.REVERSE_GENLIST", "listTheory.REVERSE_EQ_SING", "listTheory.REVERSE_EQ_NIL", "listTheory.REVERSE_APPEND", "listTheory.REVERSE_11", "listTheory.REV_REVERSE_LEM", "listTheory.OPT_MMAP_cong", "listTheory.oHD_thm", "listTheory.oEL_THM", "listTheory.oEL_TAKE_E", "listTheory.oEL_LUPDATE", "listTheory.oEL_EQ_EL", "listTheory.oEL_DROP", "listTheory.NULL_LENGTH", "listTheory.NULL_GENLIST", "listTheory.NULL_FILTER", "listTheory.NULL_EQ", "listTheory.NULL_APPEND", "listTheory.NULL", "listTheory.nub_set", "listTheory.nub_NIL", "listTheory.nub_EQ0", "listTheory.nub_append", "listTheory.NRC_LRC", "listTheory.NOT_NULL_MEM", "listTheory.NOT_NIL_EQ_LENGTH_NOT_0", "listTheory.list_distinct", "listTheory.NOT_EXISTS", "listTheory.NOT_EVERY", "listTheory.NOT_EQ_LIST", "listTheory.NOT_CONS_NIL", "listTheory.MONO_EXISTS", "listTheory.MONO_EVERY", "listTheory.MEM_ZIP_MEM_MAP", "listTheory.MEM_ZIP", "listTheory.MEM_TL", "listTheory.MEM_SPLIT_APPEND_last", "listTheory.MEM_SPLIT_APPEND_first", "listTheory.MEM_SPLIT", "listTheory.MEM_SNOC", "listTheory.MEM_SET_TO_LIST", "listTheory.MEM_REVERSE", "listTheory.MEM_MAP_f", "listTheory.MEM_MAP", "listTheory.MEM_LUPDATE_E", "listTheory.MEM_LUPDATE", "listTheory.MEM_GENLIST", "listTheory.MEM_FLAT", "listTheory.MEM_FILTER", "listTheory.mem_exists_set", "listTheory.MEM_EL", "listTheory.MEM_dropWhile_IMP", "listTheory.MEM_DROP", "listTheory.MEM_APPEND_lemma", "listTheory.MEM_APPEND", "listTheory.MEM", "listTheory.MAP_ZIP_SAME", "listTheory.MAP_ZIP", "listTheory.MAP_TL", "listTheory.MAP_TAKE", "listTheory.MAP_SNOC", "listTheory.MAP_o", "listTheory.MAP_MAP_o", "listTheory.MAP_LIST_BIND", "listTheory.MAP_ID", "listTheory.MAP_GENLIST", "listTheory.MAP_FRONT", "listTheory.MAP_FLAT", "listTheory.MAP_EQ_SING", "listTheory.MAP_EQ_NIL", "listTheory.MAP_EQ_f", "listTheory.MAP_EQ_EVERY2", "listTheory.MAP_EQ_CONS", "listTheory.MAP_EQ_APPEND", "listTheory.MAP_DROP", "listTheory.MAP_CONG", "listTheory.MAP_APPEND_MAP_EQ", "listTheory.MAP_APPEND", "listTheory.MAP2_MAP", "listTheory.MAP2_NIL", "listTheory.MAP2_ind", "listTheory.MAP2_DEF", "listTheory.MAP2_CONG", "listTheory.MAP2_APPEND", "listTheory.MAP2", "listTheory.LUPDATE_SOME_MAP", "listTheory.LUPDATE_SNOC", "listTheory.LUPDATE_SEM", "listTheory.LUPDATE_SAME", "listTheory.LUPDATE_NIL", "listTheory.LUPDATE_MAP", "listTheory.LUPDATE_LENGTH", "listTheory.LUPDATE_GENLIST", "listTheory.LUPDATE_compute", "listTheory.lupdate_append2", "listTheory.lupdate_append", "listTheory.LRC_MEM_right", "listTheory.LRC_MEM", "listTheory.LLEX_transitive", "listTheory.LLEX_total", "listTheory.LLEX_THM", "listTheory.LLEX_not_WF", "listTheory.LLEX_NIL2", "listTheory.LLEX_MONO", "listTheory.LLEX_EL_THM", "listTheory.LLEX_CONG", "listTheory.LIST_TO_SET", "listTheory.LIST_TO_SET_SNOC", "listTheory.LIST_TO_SET_REVERSE", "listTheory.LIST_TO_SET_MAP", "listTheory.LIST_TO_SET_GENLIST", "listTheory.LIST_TO_SET_FLAT", "listTheory.LIST_TO_SET_FILTER", "listTheory.LIST_TO_SET_EQ_EMPTY", "listTheory.list_to_set_diff", "listTheory.LIST_TO_SET_APPEND", "listTheory.list_size_cong", "listTheory.LIST_REL_trans", "listTheory.LIST_REL_strongind", "listTheory.LIST_REL_SPLIT2", "listTheory.LIST_REL_SPLIT1", "listTheory.LIST_REL_SNOC", "listTheory.LIST_REL_rules", "listTheory.LIST_REL_O", "listTheory.LIST_REL_NIL", "listTheory.EVERY2_mono", "listTheory.LIST_REL_MEM_IMP", "listTheory.LIST_REL_MAP_inv_image", "listTheory.LIST_REL_MAP2", "listTheory.LIST_REL_MAP1", "listTheory.LIST_REL_LENGTH", "listTheory.LIST_REL_ind", "listTheory.LIST_REL_EVERY_ZIP", "listTheory.LIST_REL_eq", "listTheory.LIST_REL_EL_EQN", "listTheory.LIST_REL_def", "listTheory.LIST_REL_CONS2", "listTheory.LIST_REL_CONS1", "listTheory.LIST_REL_CONJ", "listTheory.LIST_REL_cases", "listTheory.LIST_REL_APPEND_IMP", "listTheory.LIST_REL_APPEND_EQ", "listTheory.LIST_NOT_EQ", "listTheory.list_CASES", "listTheory.list_INDUCT", "listTheory.list_INDUCT0", "listTheory.LIST_EQ_REWRITE", "listTheory.LIST_EQ_MAP_PAIR", "listTheory.LIST_EQ", "listTheory.list_case_eq", "listTheory.list_case_cong", "listTheory.list_case_compute", "listTheory.LIST_BIND_THM", "listTheory.LIST_BIND_MAP", "listTheory.LIST_BIND_LIST_BIND", "listTheory.LIST_BIND_ID", "listTheory.LIST_BIND_APPEND", "listTheory.list_Axiom_old", "listTheory.list_Axiom", "listTheory.LIST_APPLY_o", "listTheory.CONS_11", "listTheory.LENGTH_ZIP_MIN", "listTheory.LENGTH_ZIP", "listTheory.LENGTH_UNZIP", "listTheory.LENGTH_TL", "listTheory.LENGTH_TAKE_EQ", "listTheory.LENGTH_TAKE", "listTheory.LENGTH_SNOC", "listTheory.LENGTH_REVERSE", "listTheory.LENGTH_o_REVERSE", "listTheory.length_nub_append", "listTheory.LENGTH_NIL", "listTheory.LENGTH_MAP2", "listTheory.LENGTH_MAP", "listTheory.LENGTH_LUPDATE", "listTheory.LENGTH_LT_SHORTLEX", "listTheory.LENGTH_LEN", "listTheory.LENGTH_GENLIST", "listTheory.LENGTH_FRONT_CONS", "listTheory.LENGTH_FILTER_LEQ_MONO", "listTheory.LENGTH_EQ_SUM", "listTheory.LENGTH_EQ_NUM_compute", "listTheory.LENGTH_EQ_NUM", "listTheory.LENGTH_EQ_NIL", "listTheory.LENGTH_EQ_CONS", "listTheory.LENGTH_dropWhile_LESS_EQ", "listTheory.LENGTH_DROP", "listTheory.LENGTH_CONS", "listTheory.LENGTH_APPEND", "listTheory.LEN_LENGTH_LEM", "listTheory.lazy_list_case_compute", "listTheory.LAST_SNOC", "listTheory.LAST_REVERSE", "listTheory.LAST_MAP", "listTheory.LAST_EL", "listTheory.last_drop", "listTheory.LAST_CONS_cond", "listTheory.LAST_CONS", "listTheory.LAST_compute", "listTheory.LAST_APPEND_CONS", "listTheory.ITSET_eq_FOLDL_SET_TO_LIST", "listTheory.isPREFIX_THM", "listTheory.isPREFIX_NILR", "listTheory.isPREFIX_CONSR", "listTheory.INJ_MAP_EQ_IFF", "listTheory.INJ_MAP_EQ", "listTheory.IMP_EVERY_LUPDATE", "listTheory.IMAGE_EL_count_LENGTH", "listTheory.HD_REVERSE", "listTheory.HD_GENLIST_COR", "listTheory.HD_GENLIST", "listTheory.HD_dropWhile", "listTheory.HD_DROP", "listTheory.GENLIST_PLUS_APPEND", "listTheory.GENLIST_NUMERALS", "listTheory.GENLIST_ID", "listTheory.GENLIST_GENLIST_AUX", "listTheory.GENLIST_FUN_EQ", "listTheory.GENLIST_EL_MAP", "listTheory.GENLIST_EL", "listTheory.GENLIST_CONS", "listTheory.GENLIST_CONG", "listTheory.GENLIST_AUX_compute", "listTheory.GENLIST_APPEND", "listTheory.FRONT_SNOC", "listTheory.FRONT_CONS_EQ_NIL", "listTheory.FRONT_CONS", "listTheory.FORALL_LIST", "listTheory.FOLDR_CONS", "listTheory.FOLDR_CONG", "listTheory.FOLDL_ZIP_SAME", "listTheory.FOLDL_UNION_BIGUNION_paired", "listTheory.FOLDL_UNION_BIGUNION", "listTheory.FOLDL_SNOC", "listTheory.FOLDL_EQ_FOLDR", "listTheory.FOLDL_CONG", "listTheory.FOLDL2_ind", "listTheory.FOLDL2_FOLDL", "listTheory.FOLDL2_def", "listTheory.FOLDL2_cong", "listTheory.FLAT_EQ_NIL", "listTheory.FLAT_compute", "listTheory.FLAT_APPEND", "listTheory.FINITE_LIST_TO_SET", "listTheory.FILTER_T", "listTheory.FILTER_REVERSE", "listTheory.FILTER_NEQ_NIL", "listTheory.FILTER_NEQ_ID", "listTheory.FILTER_F", "listTheory.FILTER_EQ_NIL", "listTheory.FILTER_EQ_ID", "listTheory.FILTER_EQ_CONS", "listTheory.FILTER_EQ_APPEND", "listTheory.FILTER_COND_REWRITE", "listTheory.FILTER_APPEND_DISTRIB", "listTheory.FILTER_ALL_DISTINCT", "listTheory.EXISTS_SNOC", "listTheory.EXISTS_SIMP", "listTheory.EXISTS_NOT_EVERY", "listTheory.EXISTS_MEM", "listTheory.EXISTS_MAP", "listTheory.exists_list_GENLIST", "listTheory.EXISTS_LIST_EQ_MAP", "listTheory.EXISTS_LIST", "listTheory.EXISTS_GENLIST", "listTheory.EXISTS_CONG", "listTheory.EXISTS_APPEND", "listTheory.every_zip_snd", "listTheory.every_zip_fst", "listTheory.EVERY_SNOC", "listTheory.EVERY_SIMP", "listTheory.EVERY_NOT_EXISTS", "listTheory.EVERY_MONOTONIC", "listTheory.EVERY_MEM_MONO", "listTheory.EVERY_MEM", "listTheory.EVERY_MAP", "listTheory.EVERY_GENLIST", "listTheory.EVERY_FLAT", "listTheory.EVERY_FILTER_IMP", "listTheory.EVERY_FILTER", "listTheory.EVERY_EL", "listTheory.EVERY_CONJ", "listTheory.EVERY_CONG", "listTheory.EVERY_APPEND", "listTheory.EVERY2_trans", "listTheory.EVERY2_THM", "listTheory.EVERY2_sym", "listTheory.EVERY2_REVERSE", "listTheory.EVERY2_refl", "listTheory.EVERY2_MEM_MONO", "listTheory.EVERY2_MAP", "listTheory.EVERY2_LUPDATE_same", "listTheory.EVERY2_LENGTH", "listTheory.EVERY2_EVERY", "listTheory.EVERY2_cong", "listTheory.EQ_LIST", "listTheory.EL_ZIP", "listTheory.EL_TAKE", "listTheory.EL_SNOC", "listTheory.EL_simp_restricted", "listTheory.EL_simp", "listTheory.EL_REVERSE", "listTheory.EL_restricted", "listTheory.EL_MAP2", "listTheory.EL_MAP", "listTheory.EL_LUPDATE", "listTheory.EL_LENGTH_SNOC", "listTheory.EL_LENGTH_dropWhile_REVERSE", "listTheory.EL_GENLIST", "listTheory.EL_DROP", "listTheory.EL_compute", "listTheory.EL_APPEND_EQN", "listTheory.el_append3", "listTheory.EL_ALL_DISTINCT_EL_EQ", "listTheory.dropWhile_splitAtPki", "listTheory.dropWhile_eq_nil", "listTheory.dropWhile_APPEND_EXISTS", "listTheory.dropWhile_APPEND_EVERY", "listTheory.DROP_TAKE", "listTheory.DROP_splitAtPki", "listTheory.DROP_nil", "listTheory.DROP_LENGTH_TOO_LONG", "listTheory.DROP_GENLIST", "listTheory.DROP_EQ_NIL", "listTheory.DROP_cons", "listTheory.DROP_compute", "listTheory.DROP_0", "listTheory.DISJOINT_GENLIST_PLUS", "listTheory.datatype_list", "listTheory.CONS_ACYCLIC", "listTheory.CONS", "listTheory.CARD_LIST_TO_SET_ALL_DISTINCT", "listTheory.CARD_LIST_TO_SET", "listTheory.BIGUNION_IMAGE_set_SUBSET", "listTheory.APPEND_SNOC", "listTheory.APPEND_NIL", "listTheory.APPEND_LENGTH_EQ", "listTheory.APPEND_FRONT_LAST", "listTheory.APPEND_EQ_SING", "listTheory.APPEND_EQ_SELF", "listTheory.APPEND_eq_NIL", "listTheory.APPEND_EQ_CONS", "listTheory.APPEND_EQ_APPEND_MID", "listTheory.APPEND_EQ_APPEND", "listTheory.APPEND_ASSOC", "listTheory.APPEND_11_LENGTH", "listTheory.APPEND_11", "listTheory.ALL_DISTINCT_ZIP_SWAP", "listTheory.ALL_DISTINCT_ZIP", "listTheory.ALL_DISTINCT_SNOC", "listTheory.ALL_DISTINCT_SING", "listTheory.ALL_DISTINCT_SET_TO_LIST", "listTheory.ALL_DISTINCT_REVERSE", "listTheory.all_distinct_nub", "listTheory.ALL_DISTINCT_MAP_INJ", "listTheory.ALL_DISTINCT_MAP", "listTheory.ALL_DISTINCT_GENLIST", "listTheory.ALL_DISTINCT_FLAT_REVERSE", "listTheory.ALL_DISTINCT_FILTER_EL_IMP", "listTheory.ALL_DISTINCT_FILTER", "listTheory.ALL_DISTINCT_EL_IMP", "listTheory.ALL_DISTINCT_CARD_LIST_TO_SET", "listTheory.ALL_DISTINCT_APPEND", "listTheory.adjacent_thm", "listTheory.adjacent_strongind", "listTheory.adjacent_rules", "listTheory.adjacent_ind", "listTheory.adjacent_iff", "listTheory.adjacent_EL", "listTheory.adjacent_cases", "rich_listTheory.UNZIP_SND_DEF", "rich_listTheory.UNZIP_FST_DEF", "rich_listTheory.TL_T_def", "rich_listTheory.SUFFIX_DEF", "rich_listTheory.SPLITR_def", "rich_listTheory.SPLITP_AUX_def", "rich_listTheory.SPLITP", "rich_listTheory.SPLITL_def", "rich_listTheory.SEG", "rich_listTheory.SCANR", "rich_listTheory.SCANL", "rich_listTheory.REPLICATE", "rich_listTheory.PREFIX_DEF", "rich_listTheory.OR_EL_DEF", "rich_listTheory.LIST_ELEM_COUNT_DEF", "rich_listTheory.LASTN_def", "rich_listTheory.IS_SUFFIX", "rich_listTheory.IS_SUBLIST", "rich_listTheory.ELL", "rich_listTheory.COUNT_LIST_def", "rich_listTheory.COUNT_LIST_AUX_def", "rich_listTheory.BUTLASTN_def", "rich_listTheory.AND_EL_DEF", "rich_listTheory.TAKE", "rich_listTheory.SUM_FOLDR", "rich_listTheory.SUM_FOLDL", "rich_listTheory.SPLITP_splitAtPki", "rich_listTheory.SPLITP_NIL_SND_EVERY", "rich_listTheory.SPLITP_NIL_FST_IMP", "rich_listTheory.SPLITP_LENGTH", "rich_listTheory.SPLITP_JOIN", "rich_listTheory.SPLITP_IMP", "rich_listTheory.SPLITP_APPEND", "rich_listTheory.SNOC_REVERSE_CONS", "rich_listTheory.SNOC_EQ_LENGTH_EQ", "rich_listTheory.REVERSE_FOLDR", "rich_listTheory.REVERSE_FOLDL", "rich_listTheory.REPLICATE_compute", "rich_listTheory.PREFIX_FOLDR", "rich_listTheory.PREFIX", "rich_listTheory.NOT_SNOC_NIL", "rich_listTheory.NOT_NULL_SNOC", "rich_listTheory.NOT_NIL_SNOC", "rich_listTheory.MONOID_APPEND_NIL", "rich_listTheory.MEM_EXISTS", "rich_listTheory.MAP_FOLDR", "rich_listTheory.MAP_FOLDL", "rich_listTheory.LENGTH_SEG", "rich_listTheory.LENGTH_NOT_NULL", "rich_listTheory.LENGTH_FOLDR", "rich_listTheory.LENGTH_FOLDL", "rich_listTheory.LENGTH_FLAT", "rich_listTheory.LENGTH_FILTER_LEQ", "rich_listTheory.LASTN", "rich_listTheory.IS_SUFFIX_TRANS", "rich_listTheory.IS_SUFFIX_REVERSE", "rich_listTheory.IS_SUFFIX_REFL", "rich_listTheory.IS_SUFFIX_IS_SUBLIST", "rich_listTheory.IS_SUFFIX_CONS2_E", "rich_listTheory.IS_SUFFIX_CONS", "rich_listTheory.IS_SUFFIX_APPEND1", "rich_listTheory.IS_SUFFIX_APPEND", "rich_listTheory.IS_SUBLIST_REVERSE", "rich_listTheory.IS_SUBLIST_APPEND", "rich_listTheory.IS_PREFIX_REVERSE", "rich_listTheory.IS_PREFIX_IS_SUBLIST", "rich_listTheory.IS_PREFIX_APPEND", "rich_listTheory.IS_PREFIX", "rich_listTheory.FOLDR_SNOC", "rich_listTheory.FOLDR_FOLDL", "rich_listTheory.FOLDR_APPEND", "rich_listTheory.FOLDL_APPEND", "rich_listTheory.FLAT_SNOC", "rich_listTheory.FLAT_FOLDR", "rich_listTheory.FLAT_FOLDL", "rich_listTheory.FILTER_SNOC", "rich_listTheory.FILTER_MAP", "rich_listTheory.FILTER_IDEM", "rich_listTheory.FILTER_FOLDR", "rich_listTheory.FILTER_FOLDL", "rich_listTheory.FILTER_EQ", "rich_listTheory.FILTER_COMM", "rich_listTheory.ELL_compute", "rich_listTheory.DROP_FUNPOW_TL", "rich_listTheory.DROP", "rich_listTheory.COUNT_LIST_AUX_compute", "rich_listTheory.CONS_APPEND", "rich_listTheory.BUTLASTN", "rich_listTheory.ASSOC_APPEND", "rich_listTheory.APPEND_NIL", "rich_listTheory.APPEND_FOLDR", "rich_listTheory.APPEND_FOLDL", "rich_listTheory.ALL_EL_MAP"], "∀(s :α -> bool) (f :α -> β). (∃(t :β -> bool). INJ f s t) ⇒ BIJ f s (IMAGE f s)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SURJ_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.SING_DEF", "pred_setTheory.REST_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.INJ_DEF", "pred_setTheory.IMAGE_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.BIJ_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SURJ_IMP_INJ", "pred_setTheory.SURJ_IMAGE", "pred_setTheory.SURJ_ID", "pred_setTheory.SURJ_EMPTY", "pred_setTheory.SURJ_COMPOSE", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_IMAGE", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SING_UNION", "pred_setTheory.SING_INSERT", "pred_setTheory.SING_IFF_EMPTY_REST", "pred_setTheory.SING_EMPTY", "pred_setTheory.SING_DELETE", "pred_setTheory.SING_applied", "pred_setTheory.SING", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.REST_SUBSET", "pred_setTheory.REST_SING", "pred_setTheory.REST_PSUBSET", "pred_setTheory.REST_applied", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_SING_EMPTY", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_SING", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_SING_UNION", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.INJ_SUBSET", "pred_setTheory.INJ_INSERT", "pred_setTheory.INJ_IMAGE_SUBSET", "pred_setTheory.INJ_IMAGE", "pred_setTheory.INJ_IFF", "pred_setTheory.INJ_ID", "pred_setTheory.INJ_EXTEND", "pred_setTheory.INJ_EMPTY", "pred_setTheory.INJ_DELETE", "pred_setTheory.INJ_COMPOSE", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_SING", "pred_setTheory.IN_REST", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_IMAGE", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.IMAGE_UNION", "pred_setTheory.IMAGE_SURJ", "pred_setTheory.IMAGE_SUBSET", "pred_setTheory.IMAGE_SING", "pred_setTheory.IMAGE_INTER", "pred_setTheory.IMAGE_INSERT", "pred_setTheory.IMAGE_IN", "pred_setTheory.IMAGE_IMAGE", "pred_setTheory.IMAGE_II", "pred_setTheory.IMAGE_ID", "pred_setTheory.IMAGE_I", "pred_setTheory.IMAGE_EQ_EMPTY", "pred_setTheory.IMAGE_EMPTY", "pred_setTheory.IMAGE_DELETE", "pred_setTheory.IMAGE_CONG", "pred_setTheory.IMAGE_COMPOSE", "pred_setTheory.IMAGE_applied", "pred_setTheory.IMAGE_11", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_IMAGE", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.FORALL_IN_IMAGE", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EXISTS_IN_IMAGE", "pred_setTheory.EQUAL_SING", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_SING_EMPTY", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_IMAGE", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_EQ_SING", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.CHOICE_SING", "pred_setTheory.CHOICE_NOT_IN_REST", "pred_setTheory.CHOICE_INTRO", "pred_setTheory.CHOICE_INSERT_REST", "pred_setTheory.BIJ_IMP_11", "pred_setTheory.BIJ_ID", "pred_setTheory.BIJ_EMPTY", "pred_setTheory.BIJ_DELETE", "pred_setTheory.BIJ_COMPOSE", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"], "∀(s :α -> bool). s DIFF 𝕌(:α) = (∅ :α -> bool)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.EXTENSION", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_applied", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_applied"], "∀(t :bool). t ∧ t ⇔ t": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM"], "(∃(x :α). x ∈ (s :α -> bool)) ∧ (∀(x :α). x ∈ s ⇒ (P :α -> bool) x) ⇒ P (CHOICE s)": ["boolTheory.FALSITY", "boolTheory.bool_case_ID", "boolTheory.TYPE_DEFINITION", "boolTheory.T_DEF", "boolTheory.RES_SELECT_DEF", "boolTheory.RES_FORALL_DEF", "boolTheory.RES_EXISTS_UNIQUE_DEF", "boolTheory.RES_EXISTS_DEF", "boolTheory.RES_ABSTRACT_DEF", "boolTheory.OR_DEF", "boolTheory.ONTO_DEF", "boolTheory.ONE_ONE_DEF", "boolTheory.NOT_DEF", "boolTheory.literal_case_DEF", "boolTheory.LET_DEF", "boolTheory.itself_TY_DEF", "boolTheory.itself_case_thm", "boolTheory.IN_DEF", "boolTheory.FORALL_DEF", "boolTheory.F_DEF", "boolTheory.EXISTS_UNIQUE_DEF", "boolTheory.EXISTS_DEF", "boolTheory.DATATYPE_TAG_DEF", "boolTheory.COND_DEF", "boolTheory.BOUNDED_DEF", "boolTheory.AND_DEF", "boolTheory.UNWIND_THM2", "boolTheory.UNWIND_THM1", "boolTheory.UNWIND_FORALL_THM2", "boolTheory.UNWIND_FORALL_THM1", "boolTheory.UEXISTS_SIMP", "boolTheory.UEXISTS_OR_THM", "boolTheory.TYPE_DEFINITION_THM", "boolTheory.TRUTH", "boolTheory.SWAP_FORALL_THM", "boolTheory.SWAP_EXISTS_THM", "boolTheory.SKOLEM_THM", "boolTheory.SELECT_UNIQUE", "boolTheory.SELECT_THM", "boolTheory.SELECT_REFL_2", "boolTheory.SELECT_REFL", "boolTheory.SELECT_ELIM_THM", "boolTheory.RIGHT_OR_OVER_AND", "boolTheory.RIGHT_OR_EXISTS_THM", "boolTheory.RIGHT_FORALL_OR_THM", "boolTheory.RIGHT_FORALL_IMP_THM", "boolTheory.RIGHT_EXISTS_IMP_THM", "boolTheory.RIGHT_EXISTS_AND_THM", "boolTheory.RIGHT_AND_OVER_OR", "boolTheory.RIGHT_AND_FORALL_THM", "boolTheory.RES_SELECT_THM", "boolTheory.RES_FORALL_TRUE", "boolTheory.RES_FORALL_THM", "boolTheory.RES_FORALL_CONG", "boolTheory.RES_EXISTS_UNIQUE_THM", "boolTheory.RES_EXISTS_THM", "boolTheory.RES_EXISTS_FALSE", "boolTheory.RES_EXISTS_CONG", "boolTheory.REFL_CLAUSE", "boolTheory.PULL_FORALL", "boolTheory.PULL_EXISTS", "boolTheory.PEIRCE", "boolTheory.OR_INTRO_THM2", "boolTheory.OR_INTRO_THM1", "boolTheory.OR_IMP_THM", "boolTheory.OR_ELIM_THM", "boolTheory.OR_CONG", "boolTheory.OR_CLAUSES", "boolTheory.ONTO_THM", "boolTheory.ONE_ONE_THM", "boolTheory.NOT_IMP", "boolTheory.NOT_FORALL_THM", "boolTheory.NOT_F", "boolTheory.NOT_EXISTS_THM", "boolTheory.NOT_CLAUSES", "boolTheory.NOT_AND", "boolTheory.MONO_OR", "boolTheory.MONO_NOT_EQ", "boolTheory.MONO_NOT", "boolTheory.MONO_IMP", "boolTheory.MONO_EXISTS", "boolTheory.MONO_COND", "boolTheory.MONO_AND", "boolTheory.MONO_ALL", "boolTheory.literal_case_THM", "boolTheory.literal_case_RATOR", "boolTheory.literal_case_RAND", "boolTheory.literal_case_id", "boolTheory.literal_case_CONG", "boolTheory.LET_THM", "boolTheory.LET_RATOR", "boolTheory.LET_RAND", "boolTheory.LET_CONG", "boolTheory.LEFT_OR_OVER_AND", "boolTheory.LEFT_OR_EXISTS_THM", "boolTheory.LEFT_OR_CONG", "boolTheory.LEFT_FORALL_OR_THM", "boolTheory.LEFT_FORALL_IMP_THM", "boolTheory.LEFT_EXISTS_IMP_THM", "boolTheory.LEFT_EXISTS_AND_THM", "boolTheory.LEFT_AND_OVER_OR", "boolTheory.LEFT_AND_FORALL_THM", "boolTheory.LEFT_AND_CONG", "boolTheory.LCOMM_THM", "boolTheory.JRH_INDUCT_UTIL", "boolTheory.ITSELF_UNIQUE", "boolTheory.itself_induction", "boolTheory.itself_Axiom", "boolTheory.IMP_F_EQ_F", "boolTheory.IMP_F", "boolTheory.IMP_DISJ_THM", "boolTheory.IMP_CONJ_THM", "boolTheory.IMP_CONG", "boolTheory.IMP_CLAUSES", "boolTheory.IMP_ANTISYM_AX", "boolTheory.FUN_EQ_THM", "boolTheory.FORALL_THM", "boolTheory.FORALL_SIMP", "boolTheory.FORALL_itself", "boolTheory.FORALL_BOOL", "boolTheory.FORALL_AND_THM", "boolTheory.F_IMP", "boolTheory.EXISTS_UNIQUE_THM", "boolTheory.EXISTS_UNIQUE_REFL", "boolTheory.EXISTS_UNIQUE_ALT'", "boolTheory.EXISTS_THM", "boolTheory.EXISTS_SIMP", "boolTheory.EXISTS_REFL", "boolTheory.EXISTS_OR_THM", "boolTheory.EXISTS_itself", "boolTheory.EXCLUDED_MIDDLE", "boolTheory.ETA_THM", "boolTheory.EQ_TRANS", "boolTheory.EQ_SYM_EQ", "boolTheory.EQ_SYM", "boolTheory.EQ_REFL", "boolTheory.EQ_IMP_THM", "boolTheory.EQ_EXT", "boolTheory.EQ_EXPAND", "boolTheory.EQ_CLAUSES", "boolTheory.DISJ_COMM", "boolTheory.DISJ_IMP_THM", "boolTheory.DISJ_EQ_IMP", "boolTheory.DISJ_ASSOC", "boolTheory.DE_MORGAN_THM", "boolTheory.DATATYPE_TAG_THM", "boolTheory.DATATYPE_BOOL", "boolTheory.CONJ_COMM", "boolTheory.CONJ_ASSOC", "boolTheory.COND_RATOR", "boolTheory.COND_RAND", "boolTheory.COND_EXPAND_OR", "boolTheory.COND_EXPAND_IMP", "boolTheory.COND_EXPAND", "boolTheory.bool_case_CONG", "boolTheory.COND_CLAUSES", "boolTheory.COND_ABS", "boolTheory.BOUNDED_THM", "boolTheory.BOTH_FORALL_OR_THM", "boolTheory.BOTH_FORALL_IMP_THM", "boolTheory.BOTH_EXISTS_IMP_THM", "boolTheory.BOTH_EXISTS_AND_THM", "boolTheory.boolAxiom", "boolTheory.bool_INDUCT", "boolTheory.BOOL_FUN_INDUCT", "boolTheory.BOOL_FUN_CASES_THM", "boolTheory.BOOL_EQ_DISTINCT", "boolTheory.bool_case_thm", "boolTheory.BETA_THM", "boolTheory.AND_INTRO_THM", "boolTheory.AND_IMP_INTRO", "boolTheory.AND_CONG", "boolTheory.AND_CLAUSES", "boolTheory.AND2_THM", "boolTheory.AND1_THM", "boolTheory.ABS_SIMP", "boolTheory.ABS_REP_THM", "pred_setTheory.UNIV_DEF", "pred_setTheory.UNION_DEF", "pred_setTheory.SUBSET_DEF", "pred_setTheory.PSUBSET_DEF", "pred_setTheory.INTER_DEF", "pred_setTheory.INSERT_DEF", "pred_setTheory.GSPECIFICATION", "pred_setTheory.EMPTY_DEF", "pred_setTheory.DISJOINT_DEF", "pred_setTheory.DIFF_DEF", "pred_setTheory.DELETE_DEF", "pred_setTheory.CHOICE_DEF", "pred_setTheory.UNIV_SUBSET", "pred_setTheory.UNIV_NOT_EMPTY", "pred_setTheory.UNIV_BOOL", "pred_setTheory.UNIV_applied", "pred_setTheory.UNION_UNIV", "pred_setTheory.UNION_SUBSET", "pred_setTheory.UNION_OVER_INTER", "pred_setTheory.UNION_IDEMPOT", "pred_setTheory.UNION_EMPTY", "pred_setTheory.UNION_DIFF_EQ", "pred_setTheory.UNION_DIFF", "pred_setTheory.UNION_COMM", "pred_setTheory.UNION_ASSOC", "pred_setTheory.UNION_applied", "pred_setTheory.transitive_PSUBSET", "pred_setTheory.TC_SUBSET_THM", "pred_setTheory.TC_PSUBSET", "pred_setTheory.SUBSET_UNIV", "pred_setTheory.SUBSET_UNION_ABSORPTION", "pred_setTheory.SUBSET_UNION", "pred_setTheory.SUBSET_transitive", "pred_setTheory.SUBSET_TRANS", "pred_setTheory.SUBSET_THM", "pred_setTheory.SUBSET_reflexive", "pred_setTheory.SUBSET_REFL", "pred_setTheory.SUBSET_OF_INSERT", "pred_setTheory.SUBSET_K", "pred_setTheory.SUBSET_INTER_ABSORPTION", "pred_setTheory.SUBSET_INTER2", "pred_setTheory.SUBSET_INTER1", "pred_setTheory.SUBSET_INTER", "pred_setTheory.SUBSET_INSERT_DELETE", "pred_setTheory.SUBSET_INSERT", "pred_setTheory.SUBSET_EMPTY", "pred_setTheory.SUBSET_DISJOINT", "pred_setTheory.SUBSET_DELETE", "pred_setTheory.SUBSET_applied", "pred_setTheory.SUBSET_ANTISYM_EQ", "pred_setTheory.SUBSET_ANTISYM", "pred_setTheory.SUBSET_ADD", "pred_setTheory.SPECIFICATION", "pred_setTheory.SET_MINIMUM", "pred_setTheory.SET_EQ_SUBSET", "pred_setTheory.SET_CASES", "pred_setTheory.RTC_SUBSET_THM", "pred_setTheory.RTC_PSUBSET", "pred_setTheory.RC_SUBSET_THM", "pred_setTheory.RC_PSUBSET", "pred_setTheory.PSUBSET_UNIV", "pred_setTheory.PSUBSET_TRANS", "pred_setTheory.PSUBSET_MEMBER", "pred_setTheory.PSUBSET_IRREFL", "pred_setTheory.PSUBSET_INSERT_SUBSET", "pred_setTheory.PAIR_IN_GSPEC_same", "pred_setTheory.PAIR_IN_GSPEC_IFF", "pred_setTheory.PAIR_IN_GSPEC_2", "pred_setTheory.PAIR_IN_GSPEC_1", "pred_setTheory.NUM_SET_WOP", "pred_setTheory.NOT_UNIV_PSUBSET", "pred_setTheory.NOT_PSUBSET_EMPTY", "pred_setTheory.NOT_INSERT_EMPTY", "pred_setTheory.NOT_IN_EMPTY", "pred_setTheory.NOT_EQUAL_SETS", "pred_setTheory.NOT_EMPTY_INSERT", "pred_setTheory.MEMBER_NOT_EMPTY", "pred_setTheory.K_SUBSET", "pred_setTheory.INTER_UNIV", "pred_setTheory.INTER_SUBSET", "pred_setTheory.INTER_OVER_UNION", "pred_setTheory.INTER_IDEMPOT", "pred_setTheory.INTER_EMPTY", "pred_setTheory.INTER_COMM", "pred_setTheory.INTER_ASSOC", "pred_setTheory.INTER_applied", "pred_setTheory.INSERT_UNIV", "pred_setTheory.INSERT_UNION_EQ", "pred_setTheory.INSERT_UNION", "pred_setTheory.INSERT_SUBSET", "pred_setTheory.INSERT_INTER", "pred_setTheory.INSERT_INSERT", "pred_setTheory.INSERT_DIFF", "pred_setTheory.INSERT_DELETE", "pred_setTheory.INSERT_COMM", "pred_setTheory.INSERT_applied", "pred_setTheory.IN_UNIV", "pred_setTheory.IN_UNION", "pred_setTheory.IN_INTER", "pred_setTheory.IN_INSERT", "pred_setTheory.IN_GSPEC_IFF", "pred_setTheory.IN_GSPEC", "pred_setTheory.IN_EQ_UNIV_IMP", "pred_setTheory.IN_DISJOINT", "pred_setTheory.IN_DIFF", "pred_setTheory.IN_DELETE_EQ", "pred_setTheory.IN_DELETE", "pred_setTheory.IN_APP", "pred_setTheory.IN_ABS", "pred_setTheory.GSPECIFICATION_applied", "pred_setTheory.GSPEC_PAIR_ETA", "pred_setTheory.GSPEC_ETA", "pred_setTheory.FORALL_IN_UNION", "pred_setTheory.FORALL_IN_INSERT", "pred_setTheory.EXTENSION", "pred_setTheory.EXISTS_IN_INSERT", "pred_setTheory.EQ_UNIV", "pred_setTheory.EQ_SUBSET_SUBSET", "pred_setTheory.EMPTY_UNION", "pred_setTheory.EMPTY_SUBSET", "pred_setTheory.EMPTY_NOT_UNIV", "pred_setTheory.EMPTY_DIFF", "pred_setTheory.EMPTY_DELETE", "pred_setTheory.EMPTY_applied", "pred_setTheory.ELT_IN_DELETE", "pred_setTheory.DISJOINT_UNION_BOTH", "pred_setTheory.DISJOINT_UNION", "pred_setTheory.DISJOINT_SYM", "pred_setTheory.DISJOINT_SUBSET", "pred_setTheory.DISJOINT_INSERT'", "pred_setTheory.DISJOINT_INSERT", "pred_setTheory.DISJOINT_EMPTY_REFL_RWT", "pred_setTheory.DISJOINT_EMPTY_REFL", "pred_setTheory.DISJOINT_EMPTY", "pred_setTheory.DISJOINT_DIFFS", "pred_setTheory.DISJOINT_DIFF", "pred_setTheory.DISJOINT_DELETE_SYM", "pred_setTheory.DISJOINT_ALT", "pred_setTheory.DIFF_UNIV", "pred_setTheory.DIFF_UNION", "pred_setTheory.DIFF_SUBSET", "pred_setTheory.DIFF_SAME_UNION", "pred_setTheory.DIFF_INTER2", "pred_setTheory.DIFF_INTER", "pred_setTheory.DIFF_INSERT", "pred_setTheory.DIFF_EQ_EMPTY", "pred_setTheory.DIFF_EMPTY", "pred_setTheory.DIFF_DIFF_SUBSET", "pred_setTheory.DIFF_DIFF", "pred_setTheory.DIFF_COMM", "pred_setTheory.DIFF_applied", "pred_setTheory.DELETE_SUBSET", "pred_setTheory.DELETE_NON_ELEMENT_RWT", "pred_setTheory.DELETE_NON_ELEMENT", "pred_setTheory.DELETE_INTER", "pred_setTheory.DELETE_INSERT", "pred_setTheory.DELETE_DELETE", "pred_setTheory.DELETE_COMM", "pred_setTheory.DELETE_applied", "pred_setTheory.DECOMPOSITION", "pred_setTheory.COMPONENT", "pred_setTheory.ABSORPTION_RWT", "pred_setTheory.ABSORPTION"]}