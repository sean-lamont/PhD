{ lambda ; a:f32[9,256] b:f32[512] c:f32[768,512] d:f32[1024] e:f32[512,1024] f:f32[1]
    g:f32[1024,1] h:f32[1024] i:f32[512,1024] j:u32[2] k:i32[] l:f32[686,512] m:f32[1,256]
    n:f32[1,256]. let
    o:f32[1,256] p:f32[1,256] q:f32[686,1] = xla_call[
      call_jaxpr={ lambda ; r:f32[9,256] s:f32[512] t:f32[768,512] u:f32[1024] v:f32[512,1024]
          w:f32[1] x:f32[1024,1] y:f32[1024] z:f32[512,1024] ba:u32[2] bb:i32[] bc:f32[686,512]
          bd:f32[1,256] be:f32[1,256]. let
          bf:bool[] = lt bb 0
          bg:i32[] = add bb 9
          bh:i32[] = select_n bf bb bg
          bi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bh
          bj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] r bi
          bk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bj
          bl:f32[1,512] = concatenate[dimension=1] bk bd
          bm:f32[1,1024] = dot_general[
            dimension_numbers=(((1,), (0,)), ((), ()))
            precision=None
            preferred_element_type=None
          ] bl z
          bn:f32[1,1024] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 1024)
          ] y
          bo:f32[1,1024] = add bm bn
          bp:f32[1,256] = slice[
            limit_indices=(1, 256)
            start_indices=(0, 0)
            strides=None
          ] bo
          bq:f32[1,256] = slice[
            limit_indices=(1, 512)
            start_indices=(0, 256)
            strides=None
          ] bo
          br:f32[1,256] = slice[
            limit_indices=(1, 768)
            start_indices=(0, 512)
            strides=None
          ] bo
          bs:f32[1,256] = slice[
            limit_indices=(1, 1024)
            start_indices=(0, 768)
            strides=None
          ] bo
          bt:f32[1,256] = add br 1.0
          bu:f32[1,256] = xla_call[
            call_jaxpr={ lambda ; bv:f32[1,256]. let
                bw:f32[1,256] = custom_jvp_call_jaxpr[
                  fun_jaxpr={ lambda ; bx:f32[1,256]. let
                      by:f32[1,256] = neg bx
                      bz:f32[1,256] = exp by
                      ca:f32[1,256] = add 1.0 bz
                      cb:f32[1,256] = div 1.0 ca
                    in (cb,) }
                  jvp_jaxpr_thunk=<function _memoize.<locals>.memoized at 0x7f14791b5550>
                  num_consts=0
                ] bv
              in (bw,) }
            name=sigmoid
          ] bt
          cc:f32[1,256] = mul bu be
          cd:f32[1,256] = xla_call[
            call_jaxpr={ lambda ; ce:f32[1,256]. let
                cf:f32[1,256] = custom_jvp_call_jaxpr[
                  fun_jaxpr={ lambda ; cg:f32[1,256]. let
                      ch:f32[1,256] = neg cg
                      ci:f32[1,256] = exp ch
                      cj:f32[1,256] = add 1.0 ci
                      ck:f32[1,256] = div 1.0 cj
                    in (ck,) }
                  jvp_jaxpr_thunk=<function _memoize.<locals>.memoized at 0x7f14dc69ad30>
                  num_consts=0
                ] ce
              in (cf,) }
            name=sigmoid
          ] bp
          cl:f32[1,256] = tanh bq
          cm:f32[1,256] = mul cd cl
          cn:f32[1,256] = add cc cm
          co:f32[1,256] = xla_call[
            call_jaxpr={ lambda ; cp:f32[1,256]. let
                cq:f32[1,256] = custom_jvp_call_jaxpr[
                  fun_jaxpr={ lambda ; cr:f32[1,256]. let
                      cs:f32[1,256] = neg cr
                      ct:f32[1,256] = exp cs
                      cu:f32[1,256] = add 1.0 ct
                      cv:f32[1,256] = div 1.0 cu
                    in (cv,) }
                  jvp_jaxpr_thunk=<function _memoize.<locals>.memoized at 0x7f14dc69a9d0>
                  num_consts=0
                ] cp
              in (cq,) }
            name=sigmoid
          ] bs
          cw:f32[1,256] = tanh cn
          cx:f32[1,256] = mul co cw
          cy:bool[] = lt 0 0
          cz:i32[] = add 0 1
          da:i32[] = select_n cy 0 cz
          db:i32[] = convert_element_type[new_dtype=int32 weak_type=False] da
          dc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] db
          dd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dc
          de:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dd
          df:bool[] = lt 0 0
          dg:i32[] = add 0 1
          dh:i32[] = select_n df 0 dg
          di:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dh
          dj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] di
          dk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dj
          dl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dk
          dm:bool[] = lt 0 0
          dn:i32[] = add 0 1
          do:i32[] = select_n dm 0 dn
          dp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] do
          dq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dp
          dr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dq
          ds:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dr
          dt:bool[] = lt 0 0
          du:i32[] = add 0 1
          dv:i32[] = select_n dt 0 du
          dw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dv
          dx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dw
          dy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dx
          dz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dy
          ea:bool[] = lt 0 0
          eb:i32[] = add 0 1
          ec:i32[] = select_n ea 0 eb
          ed:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ec
          ee:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ed
          ef:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ee
          eg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ef
          eh:bool[] = lt 0 0
          ei:i32[] = add 0 1
          ej:i32[] = select_n eh 0 ei
          ek:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ej
          el:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ek
          em:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx el
          en:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] em
          eo:bool[] = lt 0 0
          ep:i32[] = add 0 1
          eq:i32[] = select_n eo 0 ep
          er:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eq
          es:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] er
          et:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx es
          eu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] et
          ev:bool[] = lt 0 0
          ew:i32[] = add 0 1
          ex:i32[] = select_n ev 0 ew
          ey:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ex
          ez:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ey
          fa:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ez
          fb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fa
          fc:bool[] = lt 0 0
          fd:i32[] = add 0 1
          fe:i32[] = select_n fc 0 fd
          ff:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fe
          fg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ff
          fh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fg
          fi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fh
          fj:bool[] = lt 0 0
          fk:i32[] = add 0 1
          fl:i32[] = select_n fj 0 fk
          fm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fl
          fn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fm
          fo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fn
          fp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fo
          fq:bool[] = lt 0 0
          fr:i32[] = add 0 1
          fs:i32[] = select_n fq 0 fr
          ft:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fs
          fu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ft
          fv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fu
          fw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fv
          fx:bool[] = lt 0 0
          fy:i32[] = add 0 1
          fz:i32[] = select_n fx 0 fy
          ga:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fz
          gb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ga
          gc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gb
          gd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gc
          ge:bool[] = lt 0 0
          gf:i32[] = add 0 1
          gg:i32[] = select_n ge 0 gf
          gh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gg
          gi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gh
          gj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gi
          gk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gj
          gl:bool[] = lt 0 0
          gm:i32[] = add 0 1
          gn:i32[] = select_n gl 0 gm
          go:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gn
          gp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] go
          gq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gp
          gr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gq
          gs:bool[] = lt 0 0
          gt:i32[] = add 0 1
          gu:i32[] = select_n gs 0 gt
          gv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gu
          gw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gv
          gx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gw
          gy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gx
          gz:bool[] = lt 0 0
          ha:i32[] = add 0 1
          hb:i32[] = select_n gz 0 ha
          hc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hb
          hd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hc
          he:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hd
          hf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] he
          hg:bool[] = lt 0 0
          hh:i32[] = add 0 1
          hi:i32[] = select_n hg 0 hh
          hj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hi
          hk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hj
          hl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hk
          hm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hl
          hn:bool[] = lt 0 0
          ho:i32[] = add 0 1
          hp:i32[] = select_n hn 0 ho
          hq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hp
          hr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hq
          hs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hr
          ht:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hs
          hu:bool[] = lt 0 0
          hv:i32[] = add 0 1
          hw:i32[] = select_n hu 0 hv
          hx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hw
          hy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hx
          hz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hy
          ia:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hz
          ib:bool[] = lt 0 0
          ic:i32[] = add 0 1
          id:i32[] = select_n ib 0 ic
          ie:i32[] = convert_element_type[new_dtype=int32 weak_type=False] id
          if:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ie
          ig:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx if
          ih:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ig
          ii:bool[] = lt 0 0
          ij:i32[] = add 0 1
          ik:i32[] = select_n ii 0 ij
          il:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ik
          im:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] il
          in:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx im
          io:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] in
          ip:bool[] = lt 0 0
          iq:i32[] = add 0 1
          ir:i32[] = select_n ip 0 iq
          is:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ir
          it:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] is
          iu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx it
          iv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] iu
          iw:bool[] = lt 0 0
          ix:i32[] = add 0 1
          iy:i32[] = select_n iw 0 ix
          iz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] iy
          ja:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] iz
          jb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ja
          jc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] jb
          jd:bool[] = lt 0 0
          je:i32[] = add 0 1
          jf:i32[] = select_n jd 0 je
          jg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] jf
          jh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] jg
          ji:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx jh
          jj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ji
          jk:bool[] = lt 0 0
          jl:i32[] = add 0 1
          jm:i32[] = select_n jk 0 jl
          jn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] jm
          jo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] jn
          jp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx jo
          jq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] jp
          jr:bool[] = lt 0 0
          js:i32[] = add 0 1
          jt:i32[] = select_n jr 0 js
          ju:i32[] = convert_element_type[new_dtype=int32 weak_type=False] jt
          jv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ju
          jw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx jv
          jx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] jw
          jy:bool[] = lt 0 0
          jz:i32[] = add 0 1
          ka:i32[] = select_n jy 0 jz
          kb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ka
          kc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] kb
          kd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx kc
          ke:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] kd
          kf:bool[] = lt 0 0
          kg:i32[] = add 0 1
          kh:i32[] = select_n kf 0 kg
          ki:i32[] = convert_element_type[new_dtype=int32 weak_type=False] kh
          kj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ki
          kk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx kj
          kl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] kk
          km:bool[] = lt 0 0
          kn:i32[] = add 0 1
          ko:i32[] = select_n km 0 kn
          kp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ko
          kq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] kp
          kr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx kq
          ks:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] kr
          kt:bool[] = lt 0 0
          ku:i32[] = add 0 1
          kv:i32[] = select_n kt 0 ku
          kw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] kv
          kx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] kw
          ky:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx kx
          kz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ky
          la:bool[] = lt 0 0
          lb:i32[] = add 0 1
          lc:i32[] = select_n la 0 lb
          ld:i32[] = convert_element_type[new_dtype=int32 weak_type=False] lc
          le:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ld
          lf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx le
          lg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] lf
          lh:bool[] = lt 0 0
          li:i32[] = add 0 1
          lj:i32[] = select_n lh 0 li
          lk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] lj
          ll:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] lk
          lm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ll
          ln:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] lm
          lo:bool[] = lt 0 0
          lp:i32[] = add 0 1
          lq:i32[] = select_n lo 0 lp
          lr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] lq
          ls:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] lr
          lt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ls
          lu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] lt
          lv:bool[] = lt 0 0
          lw:i32[] = add 0 1
          lx:i32[] = select_n lv 0 lw
          ly:i32[] = convert_element_type[new_dtype=int32 weak_type=False] lx
          lz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ly
          ma:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx lz
          mb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ma
          mc:bool[] = lt 0 0
          md:i32[] = add 0 1
          me:i32[] = select_n mc 0 md
          mf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] me
          mg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] mf
          mh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx mg
          mi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] mh
          mj:bool[] = lt 0 0
          mk:i32[] = add 0 1
          ml:i32[] = select_n mj 0 mk
          mm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ml
          mn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] mm
          mo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx mn
          mp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] mo
          mq:bool[] = lt 0 0
          mr:i32[] = add 0 1
          ms:i32[] = select_n mq 0 mr
          mt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ms
          mu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] mt
          mv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx mu
          mw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] mv
          mx:bool[] = lt 0 0
          my:i32[] = add 0 1
          mz:i32[] = select_n mx 0 my
          na:i32[] = convert_element_type[new_dtype=int32 weak_type=False] mz
          nb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] na
          nc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx nb
          nd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] nc
          ne:bool[] = lt 0 0
          nf:i32[] = add 0 1
          ng:i32[] = select_n ne 0 nf
          nh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ng
          ni:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] nh
          nj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ni
          nk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] nj
          nl:bool[] = lt 0 0
          nm:i32[] = add 0 1
          nn:i32[] = select_n nl 0 nm
          no:i32[] = convert_element_type[new_dtype=int32 weak_type=False] nn
          np:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] no
          nq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx np
          nr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] nq
          ns:bool[] = lt 0 0
          nt:i32[] = add 0 1
          nu:i32[] = select_n ns 0 nt
          nv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] nu
          nw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] nv
          nx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx nw
          ny:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] nx
          nz:bool[] = lt 0 0
          oa:i32[] = add 0 1
          ob:i32[] = select_n nz 0 oa
          oc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ob
          od:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] oc
          oe:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx od
          of:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] oe
          og:bool[] = lt 0 0
          oh:i32[] = add 0 1
          oi:i32[] = select_n og 0 oh
          oj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] oi
          ok:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] oj
          ol:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ok
          om:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ol
          on:bool[] = lt 0 0
          oo:i32[] = add 0 1
          op:i32[] = select_n on 0 oo
          oq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] op
          or:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] oq
          os:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx or
          ot:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] os
          ou:bool[] = lt 0 0
          ov:i32[] = add 0 1
          ow:i32[] = select_n ou 0 ov
          ox:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ow
          oy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ox
          oz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx oy
          pa:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] oz
          pb:bool[] = lt 0 0
          pc:i32[] = add 0 1
          pd:i32[] = select_n pb 0 pc
          pe:i32[] = convert_element_type[new_dtype=int32 weak_type=False] pd
          pf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] pe
          pg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx pf
          ph:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] pg
          pi:bool[] = lt 0 0
          pj:i32[] = add 0 1
          pk:i32[] = select_n pi 0 pj
          pl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] pk
          pm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] pl
          pn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx pm
          po:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] pn
          pp:bool[] = lt 0 0
          pq:i32[] = add 0 1
          pr:i32[] = select_n pp 0 pq
          ps:i32[] = convert_element_type[new_dtype=int32 weak_type=False] pr
          pt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ps
          pu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx pt
          pv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] pu
          pw:bool[] = lt 0 0
          px:i32[] = add 0 1
          py:i32[] = select_n pw 0 px
          pz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] py
          qa:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] pz
          qb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx qa
          qc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] qb
          qd:bool[] = lt 0 0
          qe:i32[] = add 0 1
          qf:i32[] = select_n qd 0 qe
          qg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] qf
          qh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] qg
          qi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx qh
          qj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] qi
          qk:bool[] = lt 0 0
          ql:i32[] = add 0 1
          qm:i32[] = select_n qk 0 ql
          qn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] qm
          qo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] qn
          qp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx qo
          qq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] qp
          qr:bool[] = lt 0 0
          qs:i32[] = add 0 1
          qt:i32[] = select_n qr 0 qs
          qu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] qt
          qv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] qu
          qw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx qv
          qx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] qw
          qy:bool[] = lt 0 0
          qz:i32[] = add 0 1
          ra:i32[] = select_n qy 0 qz
          rb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ra
          rc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] rb
          rd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx rc
          re:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] rd
          rf:bool[] = lt 0 0
          rg:i32[] = add 0 1
          rh:i32[] = select_n rf 0 rg
          ri:i32[] = convert_element_type[new_dtype=int32 weak_type=False] rh
          rj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ri
          rk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx rj
          rl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] rk
          rm:bool[] = lt 0 0
          rn:i32[] = add 0 1
          ro:i32[] = select_n rm 0 rn
          rp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ro
          rq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] rp
          rr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx rq
          rs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] rr
          rt:bool[] = lt 0 0
          ru:i32[] = add 0 1
          rv:i32[] = select_n rt 0 ru
          rw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] rv
          rx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] rw
          ry:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx rx
          rz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ry
          sa:bool[] = lt 0 0
          sb:i32[] = add 0 1
          sc:i32[] = select_n sa 0 sb
          sd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] sc
          se:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] sd
          sf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx se
          sg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] sf
          sh:bool[] = lt 0 0
          si:i32[] = add 0 1
          sj:i32[] = select_n sh 0 si
          sk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] sj
          sl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] sk
          sm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx sl
          sn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] sm
          so:bool[] = lt 0 0
          sp:i32[] = add 0 1
          sq:i32[] = select_n so 0 sp
          sr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] sq
          ss:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] sr
          st:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ss
          su:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] st
          sv:bool[] = lt 0 0
          sw:i32[] = add 0 1
          sx:i32[] = select_n sv 0 sw
          sy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] sx
          sz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] sy
          ta:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx sz
          tb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ta
          tc:bool[] = lt 0 0
          td:i32[] = add 0 1
          te:i32[] = select_n tc 0 td
          tf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] te
          tg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] tf
          th:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx tg
          ti:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] th
          tj:bool[] = lt 0 0
          tk:i32[] = add 0 1
          tl:i32[] = select_n tj 0 tk
          tm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] tl
          tn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] tm
          to:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx tn
          tp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] to
          tq:bool[] = lt 0 0
          tr:i32[] = add 0 1
          ts:i32[] = select_n tq 0 tr
          tt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ts
          tu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] tt
          tv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx tu
          tw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] tv
          tx:bool[] = lt 0 0
          ty:i32[] = add 0 1
          tz:i32[] = select_n tx 0 ty
          ua:i32[] = convert_element_type[new_dtype=int32 weak_type=False] tz
          ub:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ua
          uc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ub
          ud:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] uc
          ue:bool[] = lt 0 0
          uf:i32[] = add 0 1
          ug:i32[] = select_n ue 0 uf
          uh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ug
          ui:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] uh
          uj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ui
          uk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] uj
          ul:bool[] = lt 0 0
          um:i32[] = add 0 1
          un:i32[] = select_n ul 0 um
          uo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] un
          up:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] uo
          uq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx up
          ur:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] uq
          us:bool[] = lt 0 0
          ut:i32[] = add 0 1
          uu:i32[] = select_n us 0 ut
          uv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] uu
          uw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] uv
          ux:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx uw
          uy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ux
          uz:bool[] = lt 0 0
          va:i32[] = add 0 1
          vb:i32[] = select_n uz 0 va
          vc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] vb
          vd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] vc
          ve:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx vd
          vf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ve
          vg:bool[] = lt 0 0
          vh:i32[] = add 0 1
          vi:i32[] = select_n vg 0 vh
          vj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] vi
          vk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] vj
          vl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx vk
          vm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] vl
          vn:bool[] = lt 0 0
          vo:i32[] = add 0 1
          vp:i32[] = select_n vn 0 vo
          vq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] vp
          vr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] vq
          vs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx vr
          vt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] vs
          vu:bool[] = lt 0 0
          vv:i32[] = add 0 1
          vw:i32[] = select_n vu 0 vv
          vx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] vw
          vy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] vx
          vz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx vy
          wa:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] vz
          wb:bool[] = lt 0 0
          wc:i32[] = add 0 1
          wd:i32[] = select_n wb 0 wc
          we:i32[] = convert_element_type[new_dtype=int32 weak_type=False] wd
          wf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] we
          wg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx wf
          wh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] wg
          wi:bool[] = lt 0 0
          wj:i32[] = add 0 1
          wk:i32[] = select_n wi 0 wj
          wl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] wk
          wm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] wl
          wn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx wm
          wo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] wn
          wp:bool[] = lt 0 0
          wq:i32[] = add 0 1
          wr:i32[] = select_n wp 0 wq
          ws:i32[] = convert_element_type[new_dtype=int32 weak_type=False] wr
          wt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ws
          wu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx wt
          wv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] wu
          ww:bool[] = lt 0 0
          wx:i32[] = add 0 1
          wy:i32[] = select_n ww 0 wx
          wz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] wy
          xa:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] wz
          xb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx xa
          xc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] xb
          xd:bool[] = lt 0 0
          xe:i32[] = add 0 1
          xf:i32[] = select_n xd 0 xe
          xg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] xf
          xh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] xg
          xi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx xh
          xj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] xi
          xk:bool[] = lt 0 0
          xl:i32[] = add 0 1
          xm:i32[] = select_n xk 0 xl
          xn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] xm
          xo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] xn
          xp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx xo
          xq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] xp
          xr:bool[] = lt 0 0
          xs:i32[] = add 0 1
          xt:i32[] = select_n xr 0 xs
          xu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] xt
          xv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] xu
          xw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx xv
          xx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] xw
          xy:bool[] = lt 0 0
          xz:i32[] = add 0 1
          ya:i32[] = select_n xy 0 xz
          yb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ya
          yc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] yb
          yd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx yc
          ye:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] yd
          yf:bool[] = lt 0 0
          yg:i32[] = add 0 1
          yh:i32[] = select_n yf 0 yg
          yi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] yh
          yj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] yi
          yk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx yj
          yl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] yk
          ym:bool[] = lt 0 0
          yn:i32[] = add 0 1
          yo:i32[] = select_n ym 0 yn
          yp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] yo
          yq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] yp
          yr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx yq
          ys:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] yr
          yt:bool[] = lt 0 0
          yu:i32[] = add 0 1
          yv:i32[] = select_n yt 0 yu
          yw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] yv
          yx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] yw
          yy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx yx
          yz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] yy
          za:bool[] = lt 0 0
          zb:i32[] = add 0 1
          zc:i32[] = select_n za 0 zb
          zd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] zc
          ze:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] zd
          zf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ze
          zg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] zf
          zh:bool[] = lt 0 0
          zi:i32[] = add 0 1
          zj:i32[] = select_n zh 0 zi
          zk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] zj
          zl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] zk
          zm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx zl
          zn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] zm
          zo:bool[] = lt 0 0
          zp:i32[] = add 0 1
          zq:i32[] = select_n zo 0 zp
          zr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] zq
          zs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] zr
          zt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx zs
          zu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] zt
          zv:bool[] = lt 0 0
          zw:i32[] = add 0 1
          zx:i32[] = select_n zv 0 zw
          zy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] zx
          zz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] zy
          baa:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx zz
          bab:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] baa
          bac:bool[] = lt 0 0
          bad:i32[] = add 0 1
          bae:i32[] = select_n bac 0 bad
          baf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bae
          bag:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] baf
          bah:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bag
          bai:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bah
          baj:bool[] = lt 0 0
          bak:i32[] = add 0 1
          bal:i32[] = select_n baj 0 bak
          bam:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bal
          ban:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bam
          bao:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ban
          bap:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bao
          baq:bool[] = lt 0 0
          bar:i32[] = add 0 1
          bas:i32[] = select_n baq 0 bar
          bat:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bas
          bau:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bat
          bav:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bau
          baw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bav
          bax:bool[] = lt 0 0
          bay:i32[] = add 0 1
          baz:i32[] = select_n bax 0 bay
          bba:i32[] = convert_element_type[new_dtype=int32 weak_type=False] baz
          bbb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bba
          bbc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bbb
          bbd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bbc
          bbe:bool[] = lt 0 0
          bbf:i32[] = add 0 1
          bbg:i32[] = select_n bbe 0 bbf
          bbh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bbg
          bbi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bbh
          bbj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bbi
          bbk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bbj
          bbl:bool[] = lt 0 0
          bbm:i32[] = add 0 1
          bbn:i32[] = select_n bbl 0 bbm
          bbo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bbn
          bbp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bbo
          bbq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bbp
          bbr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bbq
          bbs:bool[] = lt 0 0
          bbt:i32[] = add 0 1
          bbu:i32[] = select_n bbs 0 bbt
          bbv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bbu
          bbw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bbv
          bbx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bbw
          bby:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bbx
          bbz:bool[] = lt 0 0
          bca:i32[] = add 0 1
          bcb:i32[] = select_n bbz 0 bca
          bcc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bcb
          bcd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bcc
          bce:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bcd
          bcf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bce
          bcg:bool[] = lt 0 0
          bch:i32[] = add 0 1
          bci:i32[] = select_n bcg 0 bch
          bcj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bci
          bck:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bcj
          bcl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bck
          bcm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bcl
          bcn:bool[] = lt 0 0
          bco:i32[] = add 0 1
          bcp:i32[] = select_n bcn 0 bco
          bcq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bcp
          bcr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bcq
          bcs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bcr
          bct:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bcs
          bcu:bool[] = lt 0 0
          bcv:i32[] = add 0 1
          bcw:i32[] = select_n bcu 0 bcv
          bcx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bcw
          bcy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bcx
          bcz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bcy
          bda:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bcz
          bdb:bool[] = lt 0 0
          bdc:i32[] = add 0 1
          bdd:i32[] = select_n bdb 0 bdc
          bde:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bdd
          bdf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bde
          bdg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bdf
          bdh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bdg
          bdi:bool[] = lt 0 0
          bdj:i32[] = add 0 1
          bdk:i32[] = select_n bdi 0 bdj
          bdl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bdk
          bdm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bdl
          bdn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bdm
          bdo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bdn
          bdp:bool[] = lt 0 0
          bdq:i32[] = add 0 1
          bdr:i32[] = select_n bdp 0 bdq
          bds:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bdr
          bdt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bds
          bdu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bdt
          bdv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bdu
          bdw:bool[] = lt 0 0
          bdx:i32[] = add 0 1
          bdy:i32[] = select_n bdw 0 bdx
          bdz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bdy
          bea:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bdz
          beb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bea
          bec:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] beb
          bed:bool[] = lt 0 0
          bee:i32[] = add 0 1
          bef:i32[] = select_n bed 0 bee
          beg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bef
          beh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] beg
          bei:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx beh
          bej:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bei
          bek:bool[] = lt 0 0
          bel:i32[] = add 0 1
          bem:i32[] = select_n bek 0 bel
          ben:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bem
          beo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ben
          bep:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx beo
          beq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bep
          ber:bool[] = lt 0 0
          bes:i32[] = add 0 1
          bet:i32[] = select_n ber 0 bes
          beu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bet
          bev:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] beu
          bew:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bev
          bex:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bew
          bey:bool[] = lt 0 0
          bez:i32[] = add 0 1
          bfa:i32[] = select_n bey 0 bez
          bfb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bfa
          bfc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bfb
          bfd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bfc
          bfe:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bfd
          bff:bool[] = lt 0 0
          bfg:i32[] = add 0 1
          bfh:i32[] = select_n bff 0 bfg
          bfi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bfh
          bfj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bfi
          bfk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bfj
          bfl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bfk
          bfm:bool[] = lt 0 0
          bfn:i32[] = add 0 1
          bfo:i32[] = select_n bfm 0 bfn
          bfp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bfo
          bfq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bfp
          bfr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bfq
          bfs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bfr
          bft:bool[] = lt 0 0
          bfu:i32[] = add 0 1
          bfv:i32[] = select_n bft 0 bfu
          bfw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bfv
          bfx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bfw
          bfy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bfx
          bfz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bfy
          bga:bool[] = lt 0 0
          bgb:i32[] = add 0 1
          bgc:i32[] = select_n bga 0 bgb
          bgd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bgc
          bge:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bgd
          bgf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bge
          bgg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bgf
          bgh:bool[] = lt 0 0
          bgi:i32[] = add 0 1
          bgj:i32[] = select_n bgh 0 bgi
          bgk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bgj
          bgl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bgk
          bgm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bgl
          bgn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bgm
          bgo:bool[] = lt 0 0
          bgp:i32[] = add 0 1
          bgq:i32[] = select_n bgo 0 bgp
          bgr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bgq
          bgs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bgr
          bgt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bgs
          bgu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bgt
          bgv:bool[] = lt 0 0
          bgw:i32[] = add 0 1
          bgx:i32[] = select_n bgv 0 bgw
          bgy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bgx
          bgz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bgy
          bha:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bgz
          bhb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bha
          bhc:bool[] = lt 0 0
          bhd:i32[] = add 0 1
          bhe:i32[] = select_n bhc 0 bhd
          bhf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bhe
          bhg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bhf
          bhh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bhg
          bhi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bhh
          bhj:bool[] = lt 0 0
          bhk:i32[] = add 0 1
          bhl:i32[] = select_n bhj 0 bhk
          bhm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bhl
          bhn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bhm
          bho:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bhn
          bhp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bho
          bhq:bool[] = lt 0 0
          bhr:i32[] = add 0 1
          bhs:i32[] = select_n bhq 0 bhr
          bht:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bhs
          bhu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bht
          bhv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bhu
          bhw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bhv
          bhx:bool[] = lt 0 0
          bhy:i32[] = add 0 1
          bhz:i32[] = select_n bhx 0 bhy
          bia:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bhz
          bib:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bia
          bic:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bib
          bid:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bic
          bie:bool[] = lt 0 0
          bif:i32[] = add 0 1
          big:i32[] = select_n bie 0 bif
          bih:i32[] = convert_element_type[new_dtype=int32 weak_type=False] big
          bii:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bih
          bij:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bii
          bik:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bij
          bil:bool[] = lt 0 0
          bim:i32[] = add 0 1
          bin:i32[] = select_n bil 0 bim
          bio:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bin
          bip:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bio
          biq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bip
          bir:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] biq
          bis:bool[] = lt 0 0
          bit:i32[] = add 0 1
          biu:i32[] = select_n bis 0 bit
          biv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] biu
          biw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] biv
          bix:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx biw
          biy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bix
          biz:bool[] = lt 0 0
          bja:i32[] = add 0 1
          bjb:i32[] = select_n biz 0 bja
          bjc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bjb
          bjd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bjc
          bje:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bjd
          bjf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bje
          bjg:bool[] = lt 0 0
          bjh:i32[] = add 0 1
          bji:i32[] = select_n bjg 0 bjh
          bjj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bji
          bjk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bjj
          bjl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bjk
          bjm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bjl
          bjn:bool[] = lt 0 0
          bjo:i32[] = add 0 1
          bjp:i32[] = select_n bjn 0 bjo
          bjq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bjp
          bjr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bjq
          bjs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bjr
          bjt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bjs
          bju:bool[] = lt 0 0
          bjv:i32[] = add 0 1
          bjw:i32[] = select_n bju 0 bjv
          bjx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bjw
          bjy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bjx
          bjz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bjy
          bka:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bjz
          bkb:bool[] = lt 0 0
          bkc:i32[] = add 0 1
          bkd:i32[] = select_n bkb 0 bkc
          bke:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bkd
          bkf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bke
          bkg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bkf
          bkh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bkg
          bki:bool[] = lt 0 0
          bkj:i32[] = add 0 1
          bkk:i32[] = select_n bki 0 bkj
          bkl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bkk
          bkm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bkl
          bkn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bkm
          bko:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bkn
          bkp:bool[] = lt 0 0
          bkq:i32[] = add 0 1
          bkr:i32[] = select_n bkp 0 bkq
          bks:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bkr
          bkt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bks
          bku:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bkt
          bkv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bku
          bkw:bool[] = lt 0 0
          bkx:i32[] = add 0 1
          bky:i32[] = select_n bkw 0 bkx
          bkz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bky
          bla:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bkz
          blb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bla
          blc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] blb
          bld:bool[] = lt 0 0
          ble:i32[] = add 0 1
          blf:i32[] = select_n bld 0 ble
          blg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] blf
          blh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] blg
          bli:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx blh
          blj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bli
          blk:bool[] = lt 0 0
          bll:i32[] = add 0 1
          blm:i32[] = select_n blk 0 bll
          bln:i32[] = convert_element_type[new_dtype=int32 weak_type=False] blm
          blo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bln
          blp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx blo
          blq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] blp
          blr:bool[] = lt 0 0
          bls:i32[] = add 0 1
          blt:i32[] = select_n blr 0 bls
          blu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] blt
          blv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] blu
          blw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx blv
          blx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] blw
          bly:bool[] = lt 0 0
          blz:i32[] = add 0 1
          bma:i32[] = select_n bly 0 blz
          bmb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bma
          bmc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bmb
          bmd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bmc
          bme:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bmd
          bmf:bool[] = lt 0 0
          bmg:i32[] = add 0 1
          bmh:i32[] = select_n bmf 0 bmg
          bmi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bmh
          bmj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bmi
          bmk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bmj
          bml:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bmk
          bmm:bool[] = lt 0 0
          bmn:i32[] = add 0 1
          bmo:i32[] = select_n bmm 0 bmn
          bmp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bmo
          bmq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bmp
          bmr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bmq
          bms:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bmr
          bmt:bool[] = lt 0 0
          bmu:i32[] = add 0 1
          bmv:i32[] = select_n bmt 0 bmu
          bmw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bmv
          bmx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bmw
          bmy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bmx
          bmz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bmy
          bna:bool[] = lt 0 0
          bnb:i32[] = add 0 1
          bnc:i32[] = select_n bna 0 bnb
          bnd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bnc
          bne:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bnd
          bnf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bne
          bng:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bnf
          bnh:bool[] = lt 0 0
          bni:i32[] = add 0 1
          bnj:i32[] = select_n bnh 0 bni
          bnk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bnj
          bnl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bnk
          bnm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bnl
          bnn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bnm
          bno:bool[] = lt 0 0
          bnp:i32[] = add 0 1
          bnq:i32[] = select_n bno 0 bnp
          bnr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bnq
          bns:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bnr
          bnt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bns
          bnu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bnt
          bnv:bool[] = lt 0 0
          bnw:i32[] = add 0 1
          bnx:i32[] = select_n bnv 0 bnw
          bny:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bnx
          bnz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bny
          boa:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bnz
          bob:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] boa
          boc:bool[] = lt 0 0
          bod:i32[] = add 0 1
          boe:i32[] = select_n boc 0 bod
          bof:i32[] = convert_element_type[new_dtype=int32 weak_type=False] boe
          bog:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bof
          boh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bog
          boi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] boh
          boj:bool[] = lt 0 0
          bok:i32[] = add 0 1
          bol:i32[] = select_n boj 0 bok
          bom:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bol
          bon:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bom
          boo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bon
          bop:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] boo
          boq:bool[] = lt 0 0
          bor:i32[] = add 0 1
          bos:i32[] = select_n boq 0 bor
          bot:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bos
          bou:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bot
          bov:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bou
          bow:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bov
          box:bool[] = lt 0 0
          boy:i32[] = add 0 1
          boz:i32[] = select_n box 0 boy
          bpa:i32[] = convert_element_type[new_dtype=int32 weak_type=False] boz
          bpb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bpa
          bpc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bpb
          bpd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bpc
          bpe:bool[] = lt 0 0
          bpf:i32[] = add 0 1
          bpg:i32[] = select_n bpe 0 bpf
          bph:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bpg
          bpi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bph
          bpj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bpi
          bpk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bpj
          bpl:bool[] = lt 0 0
          bpm:i32[] = add 0 1
          bpn:i32[] = select_n bpl 0 bpm
          bpo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bpn
          bpp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bpo
          bpq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bpp
          bpr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bpq
          bps:bool[] = lt 0 0
          bpt:i32[] = add 0 1
          bpu:i32[] = select_n bps 0 bpt
          bpv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bpu
          bpw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bpv
          bpx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bpw
          bpy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bpx
          bpz:bool[] = lt 0 0
          bqa:i32[] = add 0 1
          bqb:i32[] = select_n bpz 0 bqa
          bqc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bqb
          bqd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bqc
          bqe:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bqd
          bqf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bqe
          bqg:bool[] = lt 0 0
          bqh:i32[] = add 0 1
          bqi:i32[] = select_n bqg 0 bqh
          bqj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bqi
          bqk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bqj
          bql:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bqk
          bqm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bql
          bqn:bool[] = lt 0 0
          bqo:i32[] = add 0 1
          bqp:i32[] = select_n bqn 0 bqo
          bqq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bqp
          bqr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bqq
          bqs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bqr
          bqt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bqs
          bqu:bool[] = lt 0 0
          bqv:i32[] = add 0 1
          bqw:i32[] = select_n bqu 0 bqv
          bqx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bqw
          bqy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bqx
          bqz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bqy
          bra:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bqz
          brb:bool[] = lt 0 0
          brc:i32[] = add 0 1
          brd:i32[] = select_n brb 0 brc
          bre:i32[] = convert_element_type[new_dtype=int32 weak_type=False] brd
          brf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bre
          brg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx brf
          brh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] brg
          bri:bool[] = lt 0 0
          brj:i32[] = add 0 1
          brk:i32[] = select_n bri 0 brj
          brl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] brk
          brm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] brl
          brn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx brm
          bro:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] brn
          brp:bool[] = lt 0 0
          brq:i32[] = add 0 1
          brr:i32[] = select_n brp 0 brq
          brs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] brr
          brt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] brs
          bru:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx brt
          brv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bru
          brw:bool[] = lt 0 0
          brx:i32[] = add 0 1
          bry:i32[] = select_n brw 0 brx
          brz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bry
          bsa:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] brz
          bsb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bsa
          bsc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bsb
          bsd:bool[] = lt 0 0
          bse:i32[] = add 0 1
          bsf:i32[] = select_n bsd 0 bse
          bsg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bsf
          bsh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bsg
          bsi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bsh
          bsj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bsi
          bsk:bool[] = lt 0 0
          bsl:i32[] = add 0 1
          bsm:i32[] = select_n bsk 0 bsl
          bsn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bsm
          bso:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bsn
          bsp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bso
          bsq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bsp
          bsr:bool[] = lt 0 0
          bss:i32[] = add 0 1
          bst:i32[] = select_n bsr 0 bss
          bsu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bst
          bsv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bsu
          bsw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bsv
          bsx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bsw
          bsy:bool[] = lt 0 0
          bsz:i32[] = add 0 1
          bta:i32[] = select_n bsy 0 bsz
          btb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bta
          btc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] btb
          btd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx btc
          bte:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] btd
          btf:bool[] = lt 0 0
          btg:i32[] = add 0 1
          bth:i32[] = select_n btf 0 btg
          bti:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bth
          btj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bti
          btk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx btj
          btl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] btk
          btm:bool[] = lt 0 0
          btn:i32[] = add 0 1
          bto:i32[] = select_n btm 0 btn
          btp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bto
          btq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] btp
          btr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx btq
          bts:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] btr
          btt:bool[] = lt 0 0
          btu:i32[] = add 0 1
          btv:i32[] = select_n btt 0 btu
          btw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] btv
          btx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] btw
          bty:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx btx
          btz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bty
          bua:bool[] = lt 0 0
          bub:i32[] = add 0 1
          buc:i32[] = select_n bua 0 bub
          bud:i32[] = convert_element_type[new_dtype=int32 weak_type=False] buc
          bue:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bud
          buf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bue
          bug:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] buf
          buh:bool[] = lt 0 0
          bui:i32[] = add 0 1
          buj:i32[] = select_n buh 0 bui
          buk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] buj
          bul:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] buk
          bum:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bul
          bun:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bum
          buo:bool[] = lt 0 0
          bup:i32[] = add 0 1
          buq:i32[] = select_n buo 0 bup
          bur:i32[] = convert_element_type[new_dtype=int32 weak_type=False] buq
          bus:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bur
          but:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bus
          buu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] but
          buv:bool[] = lt 0 0
          buw:i32[] = add 0 1
          bux:i32[] = select_n buv 0 buw
          buy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bux
          buz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] buy
          bva:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx buz
          bvb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bva
          bvc:bool[] = lt 0 0
          bvd:i32[] = add 0 1
          bve:i32[] = select_n bvc 0 bvd
          bvf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bve
          bvg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bvf
          bvh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bvg
          bvi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bvh
          bvj:bool[] = lt 0 0
          bvk:i32[] = add 0 1
          bvl:i32[] = select_n bvj 0 bvk
          bvm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bvl
          bvn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bvm
          bvo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bvn
          bvp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bvo
          bvq:bool[] = lt 0 0
          bvr:i32[] = add 0 1
          bvs:i32[] = select_n bvq 0 bvr
          bvt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bvs
          bvu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bvt
          bvv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bvu
          bvw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bvv
          bvx:bool[] = lt 0 0
          bvy:i32[] = add 0 1
          bvz:i32[] = select_n bvx 0 bvy
          bwa:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bvz
          bwb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bwa
          bwc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bwb
          bwd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bwc
          bwe:bool[] = lt 0 0
          bwf:i32[] = add 0 1
          bwg:i32[] = select_n bwe 0 bwf
          bwh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bwg
          bwi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bwh
          bwj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bwi
          bwk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bwj
          bwl:bool[] = lt 0 0
          bwm:i32[] = add 0 1
          bwn:i32[] = select_n bwl 0 bwm
          bwo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bwn
          bwp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bwo
          bwq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bwp
          bwr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bwq
          bws:bool[] = lt 0 0
          bwt:i32[] = add 0 1
          bwu:i32[] = select_n bws 0 bwt
          bwv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bwu
          bww:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bwv
          bwx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bww
          bwy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bwx
          bwz:bool[] = lt 0 0
          bxa:i32[] = add 0 1
          bxb:i32[] = select_n bwz 0 bxa
          bxc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bxb
          bxd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bxc
          bxe:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bxd
          bxf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bxe
          bxg:bool[] = lt 0 0
          bxh:i32[] = add 0 1
          bxi:i32[] = select_n bxg 0 bxh
          bxj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bxi
          bxk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bxj
          bxl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bxk
          bxm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bxl
          bxn:bool[] = lt 0 0
          bxo:i32[] = add 0 1
          bxp:i32[] = select_n bxn 0 bxo
          bxq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bxp
          bxr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bxq
          bxs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bxr
          bxt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bxs
          bxu:bool[] = lt 0 0
          bxv:i32[] = add 0 1
          bxw:i32[] = select_n bxu 0 bxv
          bxx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bxw
          bxy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bxx
          bxz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bxy
          bya:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bxz
          byb:bool[] = lt 0 0
          byc:i32[] = add 0 1
          byd:i32[] = select_n byb 0 byc
          bye:i32[] = convert_element_type[new_dtype=int32 weak_type=False] byd
          byf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bye
          byg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx byf
          byh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] byg
          byi:bool[] = lt 0 0
          byj:i32[] = add 0 1
          byk:i32[] = select_n byi 0 byj
          byl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] byk
          bym:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] byl
          byn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bym
          byo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] byn
          byp:bool[] = lt 0 0
          byq:i32[] = add 0 1
          byr:i32[] = select_n byp 0 byq
          bys:i32[] = convert_element_type[new_dtype=int32 weak_type=False] byr
          byt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bys
          byu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx byt
          byv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] byu
          byw:bool[] = lt 0 0
          byx:i32[] = add 0 1
          byy:i32[] = select_n byw 0 byx
          byz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] byy
          bza:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] byz
          bzb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bza
          bzc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bzb
          bzd:bool[] = lt 0 0
          bze:i32[] = add 0 1
          bzf:i32[] = select_n bzd 0 bze
          bzg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bzf
          bzh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bzg
          bzi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bzh
          bzj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bzi
          bzk:bool[] = lt 0 0
          bzl:i32[] = add 0 1
          bzm:i32[] = select_n bzk 0 bzl
          bzn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bzm
          bzo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bzn
          bzp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bzo
          bzq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bzp
          bzr:bool[] = lt 0 0
          bzs:i32[] = add 0 1
          bzt:i32[] = select_n bzr 0 bzs
          bzu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] bzt
          bzv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] bzu
          bzw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx bzv
          bzx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] bzw
          bzy:bool[] = lt 0 0
          bzz:i32[] = add 0 1
          caa:i32[] = select_n bzy 0 bzz
          cab:i32[] = convert_element_type[new_dtype=int32 weak_type=False] caa
          cac:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cab
          cad:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cac
          cae:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cad
          caf:bool[] = lt 0 0
          cag:i32[] = add 0 1
          cah:i32[] = select_n caf 0 cag
          cai:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cah
          caj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cai
          cak:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx caj
          cal:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cak
          cam:bool[] = lt 0 0
          can:i32[] = add 0 1
          cao:i32[] = select_n cam 0 can
          cap:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cao
          caq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cap
          car:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx caq
          cas:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] car
          cat:bool[] = lt 0 0
          cau:i32[] = add 0 1
          cav:i32[] = select_n cat 0 cau
          caw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cav
          cax:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] caw
          cay:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cax
          caz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cay
          cba:bool[] = lt 0 0
          cbb:i32[] = add 0 1
          cbc:i32[] = select_n cba 0 cbb
          cbd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cbc
          cbe:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cbd
          cbf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cbe
          cbg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cbf
          cbh:bool[] = lt 0 0
          cbi:i32[] = add 0 1
          cbj:i32[] = select_n cbh 0 cbi
          cbk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cbj
          cbl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cbk
          cbm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cbl
          cbn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cbm
          cbo:bool[] = lt 0 0
          cbp:i32[] = add 0 1
          cbq:i32[] = select_n cbo 0 cbp
          cbr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cbq
          cbs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cbr
          cbt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cbs
          cbu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cbt
          cbv:bool[] = lt 0 0
          cbw:i32[] = add 0 1
          cbx:i32[] = select_n cbv 0 cbw
          cby:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cbx
          cbz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cby
          cca:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cbz
          ccb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cca
          ccc:bool[] = lt 0 0
          ccd:i32[] = add 0 1
          cce:i32[] = select_n ccc 0 ccd
          ccf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cce
          ccg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ccf
          cch:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ccg
          cci:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cch
          ccj:bool[] = lt 0 0
          cck:i32[] = add 0 1
          ccl:i32[] = select_n ccj 0 cck
          ccm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ccl
          ccn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ccm
          cco:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ccn
          ccp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cco
          ccq:bool[] = lt 0 0
          ccr:i32[] = add 0 1
          ccs:i32[] = select_n ccq 0 ccr
          cct:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ccs
          ccu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cct
          ccv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ccu
          ccw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ccv
          ccx:bool[] = lt 0 0
          ccy:i32[] = add 0 1
          ccz:i32[] = select_n ccx 0 ccy
          cda:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ccz
          cdb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cda
          cdc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cdb
          cdd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cdc
          cde:bool[] = lt 0 0
          cdf:i32[] = add 0 1
          cdg:i32[] = select_n cde 0 cdf
          cdh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cdg
          cdi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cdh
          cdj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cdi
          cdk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cdj
          cdl:bool[] = lt 0 0
          cdm:i32[] = add 0 1
          cdn:i32[] = select_n cdl 0 cdm
          cdo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cdn
          cdp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cdo
          cdq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cdp
          cdr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cdq
          cds:bool[] = lt 0 0
          cdt:i32[] = add 0 1
          cdu:i32[] = select_n cds 0 cdt
          cdv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cdu
          cdw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cdv
          cdx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cdw
          cdy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cdx
          cdz:bool[] = lt 0 0
          cea:i32[] = add 0 1
          ceb:i32[] = select_n cdz 0 cea
          cec:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ceb
          ced:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cec
          cee:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ced
          cef:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cee
          ceg:bool[] = lt 0 0
          ceh:i32[] = add 0 1
          cei:i32[] = select_n ceg 0 ceh
          cej:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cei
          cek:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cej
          cel:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cek
          cem:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cel
          cen:bool[] = lt 0 0
          ceo:i32[] = add 0 1
          cep:i32[] = select_n cen 0 ceo
          ceq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cep
          cer:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ceq
          ces:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cer
          cet:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ces
          ceu:bool[] = lt 0 0
          cev:i32[] = add 0 1
          cew:i32[] = select_n ceu 0 cev
          cex:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cew
          cey:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cex
          cez:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cey
          cfa:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cez
          cfb:bool[] = lt 0 0
          cfc:i32[] = add 0 1
          cfd:i32[] = select_n cfb 0 cfc
          cfe:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cfd
          cff:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cfe
          cfg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cff
          cfh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cfg
          cfi:bool[] = lt 0 0
          cfj:i32[] = add 0 1
          cfk:i32[] = select_n cfi 0 cfj
          cfl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cfk
          cfm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cfl
          cfn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cfm
          cfo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cfn
          cfp:bool[] = lt 0 0
          cfq:i32[] = add 0 1
          cfr:i32[] = select_n cfp 0 cfq
          cfs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cfr
          cft:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cfs
          cfu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cft
          cfv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cfu
          cfw:bool[] = lt 0 0
          cfx:i32[] = add 0 1
          cfy:i32[] = select_n cfw 0 cfx
          cfz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cfy
          cga:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cfz
          cgb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cga
          cgc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cgb
          cgd:bool[] = lt 0 0
          cge:i32[] = add 0 1
          cgf:i32[] = select_n cgd 0 cge
          cgg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cgf
          cgh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cgg
          cgi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cgh
          cgj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cgi
          cgk:bool[] = lt 0 0
          cgl:i32[] = add 0 1
          cgm:i32[] = select_n cgk 0 cgl
          cgn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cgm
          cgo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cgn
          cgp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cgo
          cgq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cgp
          cgr:bool[] = lt 0 0
          cgs:i32[] = add 0 1
          cgt:i32[] = select_n cgr 0 cgs
          cgu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cgt
          cgv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cgu
          cgw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cgv
          cgx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cgw
          cgy:bool[] = lt 0 0
          cgz:i32[] = add 0 1
          cha:i32[] = select_n cgy 0 cgz
          chb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cha
          chc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] chb
          chd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx chc
          che:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] chd
          chf:bool[] = lt 0 0
          chg:i32[] = add 0 1
          chh:i32[] = select_n chf 0 chg
          chi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] chh
          chj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] chi
          chk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx chj
          chl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] chk
          chm:bool[] = lt 0 0
          chn:i32[] = add 0 1
          cho:i32[] = select_n chm 0 chn
          chp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cho
          chq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] chp
          chr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx chq
          chs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] chr
          cht:bool[] = lt 0 0
          chu:i32[] = add 0 1
          chv:i32[] = select_n cht 0 chu
          chw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] chv
          chx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] chw
          chy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx chx
          chz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] chy
          cia:bool[] = lt 0 0
          cib:i32[] = add 0 1
          cic:i32[] = select_n cia 0 cib
          cid:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cic
          cie:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cid
          cif:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cie
          cig:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cif
          cih:bool[] = lt 0 0
          cii:i32[] = add 0 1
          cij:i32[] = select_n cih 0 cii
          cik:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cij
          cil:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cik
          cim:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cil
          cin:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cim
          cio:bool[] = lt 0 0
          cip:i32[] = add 0 1
          ciq:i32[] = select_n cio 0 cip
          cir:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ciq
          cis:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cir
          cit:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cis
          ciu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cit
          civ:bool[] = lt 0 0
          ciw:i32[] = add 0 1
          cix:i32[] = select_n civ 0 ciw
          ciy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cix
          ciz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ciy
          cja:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ciz
          cjb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cja
          cjc:bool[] = lt 0 0
          cjd:i32[] = add 0 1
          cje:i32[] = select_n cjc 0 cjd
          cjf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cje
          cjg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cjf
          cjh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cjg
          cji:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cjh
          cjj:bool[] = lt 0 0
          cjk:i32[] = add 0 1
          cjl:i32[] = select_n cjj 0 cjk
          cjm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cjl
          cjn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cjm
          cjo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cjn
          cjp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cjo
          cjq:bool[] = lt 0 0
          cjr:i32[] = add 0 1
          cjs:i32[] = select_n cjq 0 cjr
          cjt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cjs
          cju:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cjt
          cjv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cju
          cjw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cjv
          cjx:bool[] = lt 0 0
          cjy:i32[] = add 0 1
          cjz:i32[] = select_n cjx 0 cjy
          cka:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cjz
          ckb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cka
          ckc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ckb
          ckd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ckc
          cke:bool[] = lt 0 0
          ckf:i32[] = add 0 1
          ckg:i32[] = select_n cke 0 ckf
          ckh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ckg
          cki:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ckh
          ckj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cki
          ckk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ckj
          ckl:bool[] = lt 0 0
          ckm:i32[] = add 0 1
          ckn:i32[] = select_n ckl 0 ckm
          cko:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ckn
          ckp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cko
          ckq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ckp
          ckr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ckq
          cks:bool[] = lt 0 0
          ckt:i32[] = add 0 1
          cku:i32[] = select_n cks 0 ckt
          ckv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cku
          ckw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ckv
          ckx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ckw
          cky:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ckx
          ckz:bool[] = lt 0 0
          cla:i32[] = add 0 1
          clb:i32[] = select_n ckz 0 cla
          clc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] clb
          cld:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] clc
          cle:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cld
          clf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cle
          clg:bool[] = lt 0 0
          clh:i32[] = add 0 1
          cli:i32[] = select_n clg 0 clh
          clj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cli
          clk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] clj
          cll:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx clk
          clm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cll
          cln:bool[] = lt 0 0
          clo:i32[] = add 0 1
          clp:i32[] = select_n cln 0 clo
          clq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] clp
          clr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] clq
          cls:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx clr
          clt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cls
          clu:bool[] = lt 0 0
          clv:i32[] = add 0 1
          clw:i32[] = select_n clu 0 clv
          clx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] clw
          cly:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] clx
          clz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cly
          cma:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] clz
          cmb:bool[] = lt 0 0
          cmc:i32[] = add 0 1
          cmd:i32[] = select_n cmb 0 cmc
          cme:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cmd
          cmf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cme
          cmg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cmf
          cmh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cmg
          cmi:bool[] = lt 0 0
          cmj:i32[] = add 0 1
          cmk:i32[] = select_n cmi 0 cmj
          cml:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cmk
          cmm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cml
          cmn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cmm
          cmo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cmn
          cmp:bool[] = lt 0 0
          cmq:i32[] = add 0 1
          cmr:i32[] = select_n cmp 0 cmq
          cms:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cmr
          cmt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cms
          cmu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cmt
          cmv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cmu
          cmw:bool[] = lt 0 0
          cmx:i32[] = add 0 1
          cmy:i32[] = select_n cmw 0 cmx
          cmz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cmy
          cna:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cmz
          cnb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cna
          cnc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cnb
          cnd:bool[] = lt 0 0
          cne:i32[] = add 0 1
          cnf:i32[] = select_n cnd 0 cne
          cng:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cnf
          cnh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cng
          cni:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cnh
          cnj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cni
          cnk:bool[] = lt 0 0
          cnl:i32[] = add 0 1
          cnm:i32[] = select_n cnk 0 cnl
          cnn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cnm
          cno:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cnn
          cnp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cno
          cnq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cnp
          cnr:bool[] = lt 0 0
          cns:i32[] = add 0 1
          cnt:i32[] = select_n cnr 0 cns
          cnu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cnt
          cnv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cnu
          cnw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cnv
          cnx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cnw
          cny:bool[] = lt 0 0
          cnz:i32[] = add 0 1
          coa:i32[] = select_n cny 0 cnz
          cob:i32[] = convert_element_type[new_dtype=int32 weak_type=False] coa
          coc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cob
          cod:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx coc
          coe:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cod
          cof:bool[] = lt 0 0
          cog:i32[] = add 0 1
          coh:i32[] = select_n cof 0 cog
          coi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] coh
          coj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] coi
          cok:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx coj
          col:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cok
          com:bool[] = lt 0 0
          con:i32[] = add 0 1
          coo:i32[] = select_n com 0 con
          cop:i32[] = convert_element_type[new_dtype=int32 weak_type=False] coo
          coq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cop
          cor:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx coq
          cos:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cor
          cot:bool[] = lt 0 0
          cou:i32[] = add 0 1
          cov:i32[] = select_n cot 0 cou
          cow:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cov
          cox:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cow
          coy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cox
          coz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] coy
          cpa:bool[] = lt 0 0
          cpb:i32[] = add 0 1
          cpc:i32[] = select_n cpa 0 cpb
          cpd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cpc
          cpe:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cpd
          cpf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cpe
          cpg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cpf
          cph:bool[] = lt 0 0
          cpi:i32[] = add 0 1
          cpj:i32[] = select_n cph 0 cpi
          cpk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cpj
          cpl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cpk
          cpm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cpl
          cpn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cpm
          cpo:bool[] = lt 0 0
          cpp:i32[] = add 0 1
          cpq:i32[] = select_n cpo 0 cpp
          cpr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cpq
          cps:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cpr
          cpt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cps
          cpu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cpt
          cpv:bool[] = lt 0 0
          cpw:i32[] = add 0 1
          cpx:i32[] = select_n cpv 0 cpw
          cpy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cpx
          cpz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cpy
          cqa:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cpz
          cqb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cqa
          cqc:bool[] = lt 0 0
          cqd:i32[] = add 0 1
          cqe:i32[] = select_n cqc 0 cqd
          cqf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cqe
          cqg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cqf
          cqh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cqg
          cqi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cqh
          cqj:bool[] = lt 0 0
          cqk:i32[] = add 0 1
          cql:i32[] = select_n cqj 0 cqk
          cqm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cql
          cqn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cqm
          cqo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cqn
          cqp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cqo
          cqq:bool[] = lt 0 0
          cqr:i32[] = add 0 1
          cqs:i32[] = select_n cqq 0 cqr
          cqt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cqs
          cqu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cqt
          cqv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cqu
          cqw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cqv
          cqx:bool[] = lt 0 0
          cqy:i32[] = add 0 1
          cqz:i32[] = select_n cqx 0 cqy
          cra:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cqz
          crb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cra
          crc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx crb
          crd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] crc
          cre:bool[] = lt 0 0
          crf:i32[] = add 0 1
          crg:i32[] = select_n cre 0 crf
          crh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] crg
          cri:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] crh
          crj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cri
          crk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] crj
          crl:bool[] = lt 0 0
          crm:i32[] = add 0 1
          crn:i32[] = select_n crl 0 crm
          cro:i32[] = convert_element_type[new_dtype=int32 weak_type=False] crn
          crp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cro
          crq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx crp
          crr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] crq
          crs:bool[] = lt 0 0
          crt:i32[] = add 0 1
          cru:i32[] = select_n crs 0 crt
          crv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cru
          crw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] crv
          crx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx crw
          cry:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] crx
          crz:bool[] = lt 0 0
          csa:i32[] = add 0 1
          csb:i32[] = select_n crz 0 csa
          csc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] csb
          csd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] csc
          cse:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx csd
          csf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cse
          csg:bool[] = lt 0 0
          csh:i32[] = add 0 1
          csi:i32[] = select_n csg 0 csh
          csj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] csi
          csk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] csj
          csl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx csk
          csm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] csl
          csn:bool[] = lt 0 0
          cso:i32[] = add 0 1
          csp:i32[] = select_n csn 0 cso
          csq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] csp
          csr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] csq
          css:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx csr
          cst:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] css
          csu:bool[] = lt 0 0
          csv:i32[] = add 0 1
          csw:i32[] = select_n csu 0 csv
          csx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] csw
          csy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] csx
          csz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx csy
          cta:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] csz
          ctb:bool[] = lt 0 0
          ctc:i32[] = add 0 1
          ctd:i32[] = select_n ctb 0 ctc
          cte:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ctd
          ctf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cte
          ctg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ctf
          cth:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ctg
          cti:bool[] = lt 0 0
          ctj:i32[] = add 0 1
          ctk:i32[] = select_n cti 0 ctj
          ctl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ctk
          ctm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ctl
          ctn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ctm
          cto:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ctn
          ctp:bool[] = lt 0 0
          ctq:i32[] = add 0 1
          ctr:i32[] = select_n ctp 0 ctq
          cts:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ctr
          ctt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cts
          ctu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ctt
          ctv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ctu
          ctw:bool[] = lt 0 0
          ctx:i32[] = add 0 1
          cty:i32[] = select_n ctw 0 ctx
          ctz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cty
          cua:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ctz
          cub:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cua
          cuc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cub
          cud:bool[] = lt 0 0
          cue:i32[] = add 0 1
          cuf:i32[] = select_n cud 0 cue
          cug:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cuf
          cuh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cug
          cui:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cuh
          cuj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cui
          cuk:bool[] = lt 0 0
          cul:i32[] = add 0 1
          cum:i32[] = select_n cuk 0 cul
          cun:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cum
          cuo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cun
          cup:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cuo
          cuq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cup
          cur:bool[] = lt 0 0
          cus:i32[] = add 0 1
          cut:i32[] = select_n cur 0 cus
          cuu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cut
          cuv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cuu
          cuw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cuv
          cux:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cuw
          cuy:bool[] = lt 0 0
          cuz:i32[] = add 0 1
          cva:i32[] = select_n cuy 0 cuz
          cvb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cva
          cvc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cvb
          cvd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cvc
          cve:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cvd
          cvf:bool[] = lt 0 0
          cvg:i32[] = add 0 1
          cvh:i32[] = select_n cvf 0 cvg
          cvi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cvh
          cvj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cvi
          cvk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cvj
          cvl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cvk
          cvm:bool[] = lt 0 0
          cvn:i32[] = add 0 1
          cvo:i32[] = select_n cvm 0 cvn
          cvp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cvo
          cvq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cvp
          cvr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cvq
          cvs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cvr
          cvt:bool[] = lt 0 0
          cvu:i32[] = add 0 1
          cvv:i32[] = select_n cvt 0 cvu
          cvw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cvv
          cvx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cvw
          cvy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cvx
          cvz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cvy
          cwa:bool[] = lt 0 0
          cwb:i32[] = add 0 1
          cwc:i32[] = select_n cwa 0 cwb
          cwd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cwc
          cwe:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cwd
          cwf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cwe
          cwg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cwf
          cwh:bool[] = lt 0 0
          cwi:i32[] = add 0 1
          cwj:i32[] = select_n cwh 0 cwi
          cwk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cwj
          cwl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cwk
          cwm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cwl
          cwn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cwm
          cwo:bool[] = lt 0 0
          cwp:i32[] = add 0 1
          cwq:i32[] = select_n cwo 0 cwp
          cwr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cwq
          cws:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cwr
          cwt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cws
          cwu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cwt
          cwv:bool[] = lt 0 0
          cww:i32[] = add 0 1
          cwx:i32[] = select_n cwv 0 cww
          cwy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cwx
          cwz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cwy
          cxa:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cwz
          cxb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cxa
          cxc:bool[] = lt 0 0
          cxd:i32[] = add 0 1
          cxe:i32[] = select_n cxc 0 cxd
          cxf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cxe
          cxg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cxf
          cxh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cxg
          cxi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cxh
          cxj:bool[] = lt 0 0
          cxk:i32[] = add 0 1
          cxl:i32[] = select_n cxj 0 cxk
          cxm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cxl
          cxn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cxm
          cxo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cxn
          cxp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cxo
          cxq:bool[] = lt 0 0
          cxr:i32[] = add 0 1
          cxs:i32[] = select_n cxq 0 cxr
          cxt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cxs
          cxu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cxt
          cxv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cxu
          cxw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cxv
          cxx:bool[] = lt 0 0
          cxy:i32[] = add 0 1
          cxz:i32[] = select_n cxx 0 cxy
          cya:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cxz
          cyb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cya
          cyc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cyb
          cyd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cyc
          cye:bool[] = lt 0 0
          cyf:i32[] = add 0 1
          cyg:i32[] = select_n cye 0 cyf
          cyh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cyg
          cyi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cyh
          cyj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cyi
          cyk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cyj
          cyl:bool[] = lt 0 0
          cym:i32[] = add 0 1
          cyn:i32[] = select_n cyl 0 cym
          cyo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cyn
          cyp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cyo
          cyq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cyp
          cyr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cyq
          cys:bool[] = lt 0 0
          cyt:i32[] = add 0 1
          cyu:i32[] = select_n cys 0 cyt
          cyv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] cyu
          cyw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] cyv
          cyx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx cyw
          cyy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cyx
          cyz:bool[] = lt 0 0
          cza:i32[] = add 0 1
          czb:i32[] = select_n cyz 0 cza
          czc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] czb
          czd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] czc
          cze:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx czd
          czf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] cze
          czg:bool[] = lt 0 0
          czh:i32[] = add 0 1
          czi:i32[] = select_n czg 0 czh
          czj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] czi
          czk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] czj
          czl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx czk
          czm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] czl
          czn:bool[] = lt 0 0
          czo:i32[] = add 0 1
          czp:i32[] = select_n czn 0 czo
          czq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] czp
          czr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] czq
          czs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx czr
          czt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] czs
          czu:bool[] = lt 0 0
          czv:i32[] = add 0 1
          czw:i32[] = select_n czu 0 czv
          czx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] czw
          czy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] czx
          czz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx czy
          daa:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] czz
          dab:bool[] = lt 0 0
          dac:i32[] = add 0 1
          dad:i32[] = select_n dab 0 dac
          dae:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dad
          daf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dae
          dag:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx daf
          dah:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dag
          dai:bool[] = lt 0 0
          daj:i32[] = add 0 1
          dak:i32[] = select_n dai 0 daj
          dal:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dak
          dam:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dal
          dan:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dam
          dao:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dan
          dap:bool[] = lt 0 0
          daq:i32[] = add 0 1
          dar:i32[] = select_n dap 0 daq
          das:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dar
          dat:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] das
          dau:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dat
          dav:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dau
          daw:bool[] = lt 0 0
          dax:i32[] = add 0 1
          day:i32[] = select_n daw 0 dax
          daz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] day
          dba:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] daz
          dbb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dba
          dbc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dbb
          dbd:bool[] = lt 0 0
          dbe:i32[] = add 0 1
          dbf:i32[] = select_n dbd 0 dbe
          dbg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dbf
          dbh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dbg
          dbi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dbh
          dbj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dbi
          dbk:bool[] = lt 0 0
          dbl:i32[] = add 0 1
          dbm:i32[] = select_n dbk 0 dbl
          dbn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dbm
          dbo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dbn
          dbp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dbo
          dbq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dbp
          dbr:bool[] = lt 0 0
          dbs:i32[] = add 0 1
          dbt:i32[] = select_n dbr 0 dbs
          dbu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dbt
          dbv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dbu
          dbw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dbv
          dbx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dbw
          dby:bool[] = lt 0 0
          dbz:i32[] = add 0 1
          dca:i32[] = select_n dby 0 dbz
          dcb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dca
          dcc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dcb
          dcd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dcc
          dce:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dcd
          dcf:bool[] = lt 0 0
          dcg:i32[] = add 0 1
          dch:i32[] = select_n dcf 0 dcg
          dci:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dch
          dcj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dci
          dck:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dcj
          dcl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dck
          dcm:bool[] = lt 0 0
          dcn:i32[] = add 0 1
          dco:i32[] = select_n dcm 0 dcn
          dcp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dco
          dcq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dcp
          dcr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dcq
          dcs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dcr
          dct:bool[] = lt 0 0
          dcu:i32[] = add 0 1
          dcv:i32[] = select_n dct 0 dcu
          dcw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dcv
          dcx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dcw
          dcy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dcx
          dcz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dcy
          dda:bool[] = lt 0 0
          ddb:i32[] = add 0 1
          ddc:i32[] = select_n dda 0 ddb
          ddd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ddc
          dde:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ddd
          ddf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dde
          ddg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ddf
          ddh:bool[] = lt 0 0
          ddi:i32[] = add 0 1
          ddj:i32[] = select_n ddh 0 ddi
          ddk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ddj
          ddl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ddk
          ddm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ddl
          ddn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ddm
          ddo:bool[] = lt 0 0
          ddp:i32[] = add 0 1
          ddq:i32[] = select_n ddo 0 ddp
          ddr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ddq
          dds:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ddr
          ddt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dds
          ddu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ddt
          ddv:bool[] = lt 0 0
          ddw:i32[] = add 0 1
          ddx:i32[] = select_n ddv 0 ddw
          ddy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ddx
          ddz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ddy
          dea:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ddz
          deb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dea
          dec:bool[] = lt 0 0
          ded:i32[] = add 0 1
          dee:i32[] = select_n dec 0 ded
          def:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dee
          deg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] def
          deh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx deg
          dei:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] deh
          dej:bool[] = lt 0 0
          dek:i32[] = add 0 1
          del:i32[] = select_n dej 0 dek
          dem:i32[] = convert_element_type[new_dtype=int32 weak_type=False] del
          den:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dem
          deo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx den
          dep:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] deo
          deq:bool[] = lt 0 0
          der:i32[] = add 0 1
          des:i32[] = select_n deq 0 der
          det:i32[] = convert_element_type[new_dtype=int32 weak_type=False] des
          deu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] det
          dev:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx deu
          dew:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dev
          dex:bool[] = lt 0 0
          dey:i32[] = add 0 1
          dez:i32[] = select_n dex 0 dey
          dfa:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dez
          dfb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dfa
          dfc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dfb
          dfd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dfc
          dfe:bool[] = lt 0 0
          dff:i32[] = add 0 1
          dfg:i32[] = select_n dfe 0 dff
          dfh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dfg
          dfi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dfh
          dfj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dfi
          dfk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dfj
          dfl:bool[] = lt 0 0
          dfm:i32[] = add 0 1
          dfn:i32[] = select_n dfl 0 dfm
          dfo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dfn
          dfp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dfo
          dfq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dfp
          dfr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dfq
          dfs:bool[] = lt 0 0
          dft:i32[] = add 0 1
          dfu:i32[] = select_n dfs 0 dft
          dfv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dfu
          dfw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dfv
          dfx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dfw
          dfy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dfx
          dfz:bool[] = lt 0 0
          dga:i32[] = add 0 1
          dgb:i32[] = select_n dfz 0 dga
          dgc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dgb
          dgd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dgc
          dge:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dgd
          dgf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dge
          dgg:bool[] = lt 0 0
          dgh:i32[] = add 0 1
          dgi:i32[] = select_n dgg 0 dgh
          dgj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dgi
          dgk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dgj
          dgl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dgk
          dgm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dgl
          dgn:bool[] = lt 0 0
          dgo:i32[] = add 0 1
          dgp:i32[] = select_n dgn 0 dgo
          dgq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dgp
          dgr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dgq
          dgs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dgr
          dgt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dgs
          dgu:bool[] = lt 0 0
          dgv:i32[] = add 0 1
          dgw:i32[] = select_n dgu 0 dgv
          dgx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dgw
          dgy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dgx
          dgz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dgy
          dha:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dgz
          dhb:bool[] = lt 0 0
          dhc:i32[] = add 0 1
          dhd:i32[] = select_n dhb 0 dhc
          dhe:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dhd
          dhf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dhe
          dhg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dhf
          dhh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dhg
          dhi:bool[] = lt 0 0
          dhj:i32[] = add 0 1
          dhk:i32[] = select_n dhi 0 dhj
          dhl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dhk
          dhm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dhl
          dhn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dhm
          dho:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dhn
          dhp:bool[] = lt 0 0
          dhq:i32[] = add 0 1
          dhr:i32[] = select_n dhp 0 dhq
          dhs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dhr
          dht:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dhs
          dhu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dht
          dhv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dhu
          dhw:bool[] = lt 0 0
          dhx:i32[] = add 0 1
          dhy:i32[] = select_n dhw 0 dhx
          dhz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dhy
          dia:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dhz
          dib:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dia
          dic:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dib
          did:bool[] = lt 0 0
          die:i32[] = add 0 1
          dif:i32[] = select_n did 0 die
          dig:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dif
          dih:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dig
          dii:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dih
          dij:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dii
          dik:bool[] = lt 0 0
          dil:i32[] = add 0 1
          dim:i32[] = select_n dik 0 dil
          din:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dim
          dio:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] din
          dip:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dio
          diq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dip
          dir:bool[] = lt 0 0
          dis:i32[] = add 0 1
          dit:i32[] = select_n dir 0 dis
          diu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dit
          div:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] diu
          diw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx div
          dix:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] diw
          diy:bool[] = lt 0 0
          diz:i32[] = add 0 1
          dja:i32[] = select_n diy 0 diz
          djb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dja
          djc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] djb
          djd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx djc
          dje:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] djd
          djf:bool[] = lt 0 0
          djg:i32[] = add 0 1
          djh:i32[] = select_n djf 0 djg
          dji:i32[] = convert_element_type[new_dtype=int32 weak_type=False] djh
          djj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dji
          djk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx djj
          djl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] djk
          djm:bool[] = lt 0 0
          djn:i32[] = add 0 1
          djo:i32[] = select_n djm 0 djn
          djp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] djo
          djq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] djp
          djr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx djq
          djs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] djr
          djt:bool[] = lt 0 0
          dju:i32[] = add 0 1
          djv:i32[] = select_n djt 0 dju
          djw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] djv
          djx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] djw
          djy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx djx
          djz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] djy
          dka:bool[] = lt 0 0
          dkb:i32[] = add 0 1
          dkc:i32[] = select_n dka 0 dkb
          dkd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dkc
          dke:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dkd
          dkf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dke
          dkg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dkf
          dkh:bool[] = lt 0 0
          dki:i32[] = add 0 1
          dkj:i32[] = select_n dkh 0 dki
          dkk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dkj
          dkl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dkk
          dkm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dkl
          dkn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dkm
          dko:bool[] = lt 0 0
          dkp:i32[] = add 0 1
          dkq:i32[] = select_n dko 0 dkp
          dkr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dkq
          dks:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dkr
          dkt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dks
          dku:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dkt
          dkv:bool[] = lt 0 0
          dkw:i32[] = add 0 1
          dkx:i32[] = select_n dkv 0 dkw
          dky:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dkx
          dkz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dky
          dla:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dkz
          dlb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dla
          dlc:bool[] = lt 0 0
          dld:i32[] = add 0 1
          dle:i32[] = select_n dlc 0 dld
          dlf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dle
          dlg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dlf
          dlh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dlg
          dli:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dlh
          dlj:bool[] = lt 0 0
          dlk:i32[] = add 0 1
          dll:i32[] = select_n dlj 0 dlk
          dlm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dll
          dln:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dlm
          dlo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dln
          dlp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dlo
          dlq:bool[] = lt 0 0
          dlr:i32[] = add 0 1
          dls:i32[] = select_n dlq 0 dlr
          dlt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dls
          dlu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dlt
          dlv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dlu
          dlw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dlv
          dlx:bool[] = lt 0 0
          dly:i32[] = add 0 1
          dlz:i32[] = select_n dlx 0 dly
          dma:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dlz
          dmb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dma
          dmc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dmb
          dmd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dmc
          dme:bool[] = lt 0 0
          dmf:i32[] = add 0 1
          dmg:i32[] = select_n dme 0 dmf
          dmh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dmg
          dmi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dmh
          dmj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dmi
          dmk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dmj
          dml:bool[] = lt 0 0
          dmm:i32[] = add 0 1
          dmn:i32[] = select_n dml 0 dmm
          dmo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dmn
          dmp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dmo
          dmq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dmp
          dmr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dmq
          dms:bool[] = lt 0 0
          dmt:i32[] = add 0 1
          dmu:i32[] = select_n dms 0 dmt
          dmv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dmu
          dmw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dmv
          dmx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dmw
          dmy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dmx
          dmz:bool[] = lt 0 0
          dna:i32[] = add 0 1
          dnb:i32[] = select_n dmz 0 dna
          dnc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dnb
          dnd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dnc
          dne:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dnd
          dnf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dne
          dng:bool[] = lt 0 0
          dnh:i32[] = add 0 1
          dni:i32[] = select_n dng 0 dnh
          dnj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dni
          dnk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dnj
          dnl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dnk
          dnm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dnl
          dnn:bool[] = lt 0 0
          dno:i32[] = add 0 1
          dnp:i32[] = select_n dnn 0 dno
          dnq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dnp
          dnr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dnq
          dns:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dnr
          dnt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dns
          dnu:bool[] = lt 0 0
          dnv:i32[] = add 0 1
          dnw:i32[] = select_n dnu 0 dnv
          dnx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dnw
          dny:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dnx
          dnz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dny
          doa:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dnz
          dob:bool[] = lt 0 0
          doc:i32[] = add 0 1
          dod:i32[] = select_n dob 0 doc
          doe:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dod
          dof:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] doe
          dog:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dof
          doh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dog
          doi:bool[] = lt 0 0
          doj:i32[] = add 0 1
          dok:i32[] = select_n doi 0 doj
          dol:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dok
          dom:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dol
          don:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dom
          doo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] don
          dop:bool[] = lt 0 0
          doq:i32[] = add 0 1
          dor:i32[] = select_n dop 0 doq
          dos:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dor
          dot:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dos
          dou:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dot
          dov:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dou
          dow:bool[] = lt 0 0
          dox:i32[] = add 0 1
          doy:i32[] = select_n dow 0 dox
          doz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] doy
          dpa:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] doz
          dpb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dpa
          dpc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dpb
          dpd:bool[] = lt 0 0
          dpe:i32[] = add 0 1
          dpf:i32[] = select_n dpd 0 dpe
          dpg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dpf
          dph:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dpg
          dpi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dph
          dpj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dpi
          dpk:bool[] = lt 0 0
          dpl:i32[] = add 0 1
          dpm:i32[] = select_n dpk 0 dpl
          dpn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dpm
          dpo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dpn
          dpp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dpo
          dpq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dpp
          dpr:bool[] = lt 0 0
          dps:i32[] = add 0 1
          dpt:i32[] = select_n dpr 0 dps
          dpu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dpt
          dpv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dpu
          dpw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dpv
          dpx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dpw
          dpy:bool[] = lt 0 0
          dpz:i32[] = add 0 1
          dqa:i32[] = select_n dpy 0 dpz
          dqb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dqa
          dqc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dqb
          dqd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dqc
          dqe:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dqd
          dqf:bool[] = lt 0 0
          dqg:i32[] = add 0 1
          dqh:i32[] = select_n dqf 0 dqg
          dqi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dqh
          dqj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dqi
          dqk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dqj
          dql:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dqk
          dqm:bool[] = lt 0 0
          dqn:i32[] = add 0 1
          dqo:i32[] = select_n dqm 0 dqn
          dqp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dqo
          dqq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dqp
          dqr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dqq
          dqs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dqr
          dqt:bool[] = lt 0 0
          dqu:i32[] = add 0 1
          dqv:i32[] = select_n dqt 0 dqu
          dqw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dqv
          dqx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dqw
          dqy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dqx
          dqz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dqy
          dra:bool[] = lt 0 0
          drb:i32[] = add 0 1
          drc:i32[] = select_n dra 0 drb
          drd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] drc
          dre:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] drd
          drf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dre
          drg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] drf
          drh:bool[] = lt 0 0
          dri:i32[] = add 0 1
          drj:i32[] = select_n drh 0 dri
          drk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] drj
          drl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] drk
          drm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx drl
          drn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] drm
          dro:bool[] = lt 0 0
          drp:i32[] = add 0 1
          drq:i32[] = select_n dro 0 drp
          drr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] drq
          drs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] drr
          drt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx drs
          dru:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] drt
          drv:bool[] = lt 0 0
          drw:i32[] = add 0 1
          drx:i32[] = select_n drv 0 drw
          dry:i32[] = convert_element_type[new_dtype=int32 weak_type=False] drx
          drz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dry
          dsa:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx drz
          dsb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dsa
          dsc:bool[] = lt 0 0
          dsd:i32[] = add 0 1
          dse:i32[] = select_n dsc 0 dsd
          dsf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dse
          dsg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dsf
          dsh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dsg
          dsi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dsh
          dsj:bool[] = lt 0 0
          dsk:i32[] = add 0 1
          dsl:i32[] = select_n dsj 0 dsk
          dsm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dsl
          dsn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dsm
          dso:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dsn
          dsp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dso
          dsq:bool[] = lt 0 0
          dsr:i32[] = add 0 1
          dss:i32[] = select_n dsq 0 dsr
          dst:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dss
          dsu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dst
          dsv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dsu
          dsw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dsv
          dsx:bool[] = lt 0 0
          dsy:i32[] = add 0 1
          dsz:i32[] = select_n dsx 0 dsy
          dta:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dsz
          dtb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dta
          dtc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dtb
          dtd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dtc
          dte:bool[] = lt 0 0
          dtf:i32[] = add 0 1
          dtg:i32[] = select_n dte 0 dtf
          dth:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dtg
          dti:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dth
          dtj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dti
          dtk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dtj
          dtl:bool[] = lt 0 0
          dtm:i32[] = add 0 1
          dtn:i32[] = select_n dtl 0 dtm
          dto:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dtn
          dtp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dto
          dtq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dtp
          dtr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dtq
          dts:bool[] = lt 0 0
          dtt:i32[] = add 0 1
          dtu:i32[] = select_n dts 0 dtt
          dtv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dtu
          dtw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dtv
          dtx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dtw
          dty:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dtx
          dtz:bool[] = lt 0 0
          dua:i32[] = add 0 1
          dub:i32[] = select_n dtz 0 dua
          duc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dub
          dud:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] duc
          due:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dud
          duf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] due
          dug:bool[] = lt 0 0
          duh:i32[] = add 0 1
          dui:i32[] = select_n dug 0 duh
          duj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dui
          duk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] duj
          dul:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx duk
          dum:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dul
          dun:bool[] = lt 0 0
          duo:i32[] = add 0 1
          dup:i32[] = select_n dun 0 duo
          duq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dup
          dur:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] duq
          dus:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dur
          dut:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dus
          duu:bool[] = lt 0 0
          duv:i32[] = add 0 1
          duw:i32[] = select_n duu 0 duv
          dux:i32[] = convert_element_type[new_dtype=int32 weak_type=False] duw
          duy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dux
          duz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx duy
          dva:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] duz
          dvb:bool[] = lt 0 0
          dvc:i32[] = add 0 1
          dvd:i32[] = select_n dvb 0 dvc
          dve:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dvd
          dvf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dve
          dvg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dvf
          dvh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dvg
          dvi:bool[] = lt 0 0
          dvj:i32[] = add 0 1
          dvk:i32[] = select_n dvi 0 dvj
          dvl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dvk
          dvm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dvl
          dvn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dvm
          dvo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dvn
          dvp:bool[] = lt 0 0
          dvq:i32[] = add 0 1
          dvr:i32[] = select_n dvp 0 dvq
          dvs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dvr
          dvt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dvs
          dvu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dvt
          dvv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dvu
          dvw:bool[] = lt 0 0
          dvx:i32[] = add 0 1
          dvy:i32[] = select_n dvw 0 dvx
          dvz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dvy
          dwa:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dvz
          dwb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dwa
          dwc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dwb
          dwd:bool[] = lt 0 0
          dwe:i32[] = add 0 1
          dwf:i32[] = select_n dwd 0 dwe
          dwg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dwf
          dwh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dwg
          dwi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dwh
          dwj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dwi
          dwk:bool[] = lt 0 0
          dwl:i32[] = add 0 1
          dwm:i32[] = select_n dwk 0 dwl
          dwn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dwm
          dwo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dwn
          dwp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dwo
          dwq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dwp
          dwr:bool[] = lt 0 0
          dws:i32[] = add 0 1
          dwt:i32[] = select_n dwr 0 dws
          dwu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dwt
          dwv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dwu
          dww:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dwv
          dwx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dww
          dwy:bool[] = lt 0 0
          dwz:i32[] = add 0 1
          dxa:i32[] = select_n dwy 0 dwz
          dxb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dxa
          dxc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dxb
          dxd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dxc
          dxe:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dxd
          dxf:bool[] = lt 0 0
          dxg:i32[] = add 0 1
          dxh:i32[] = select_n dxf 0 dxg
          dxi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dxh
          dxj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dxi
          dxk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dxj
          dxl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dxk
          dxm:bool[] = lt 0 0
          dxn:i32[] = add 0 1
          dxo:i32[] = select_n dxm 0 dxn
          dxp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dxo
          dxq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dxp
          dxr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dxq
          dxs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dxr
          dxt:bool[] = lt 0 0
          dxu:i32[] = add 0 1
          dxv:i32[] = select_n dxt 0 dxu
          dxw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dxv
          dxx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dxw
          dxy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dxx
          dxz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dxy
          dya:bool[] = lt 0 0
          dyb:i32[] = add 0 1
          dyc:i32[] = select_n dya 0 dyb
          dyd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dyc
          dye:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dyd
          dyf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dye
          dyg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dyf
          dyh:bool[] = lt 0 0
          dyi:i32[] = add 0 1
          dyj:i32[] = select_n dyh 0 dyi
          dyk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dyj
          dyl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dyk
          dym:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dyl
          dyn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dym
          dyo:bool[] = lt 0 0
          dyp:i32[] = add 0 1
          dyq:i32[] = select_n dyo 0 dyp
          dyr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dyq
          dys:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dyr
          dyt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dys
          dyu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dyt
          dyv:bool[] = lt 0 0
          dyw:i32[] = add 0 1
          dyx:i32[] = select_n dyv 0 dyw
          dyy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dyx
          dyz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dyy
          dza:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dyz
          dzb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dza
          dzc:bool[] = lt 0 0
          dzd:i32[] = add 0 1
          dze:i32[] = select_n dzc 0 dzd
          dzf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dze
          dzg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dzf
          dzh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dzg
          dzi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dzh
          dzj:bool[] = lt 0 0
          dzk:i32[] = add 0 1
          dzl:i32[] = select_n dzj 0 dzk
          dzm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dzl
          dzn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dzm
          dzo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dzn
          dzp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dzo
          dzq:bool[] = lt 0 0
          dzr:i32[] = add 0 1
          dzs:i32[] = select_n dzq 0 dzr
          dzt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dzs
          dzu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] dzt
          dzv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx dzu
          dzw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] dzv
          dzx:bool[] = lt 0 0
          dzy:i32[] = add 0 1
          dzz:i32[] = select_n dzx 0 dzy
          eaa:i32[] = convert_element_type[new_dtype=int32 weak_type=False] dzz
          eab:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eaa
          eac:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eab
          ead:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eac
          eae:bool[] = lt 0 0
          eaf:i32[] = add 0 1
          eag:i32[] = select_n eae 0 eaf
          eah:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eag
          eai:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eah
          eaj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eai
          eak:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eaj
          eal:bool[] = lt 0 0
          eam:i32[] = add 0 1
          ean:i32[] = select_n eal 0 eam
          eao:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ean
          eap:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eao
          eaq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eap
          ear:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eaq
          eas:bool[] = lt 0 0
          eat:i32[] = add 0 1
          eau:i32[] = select_n eas 0 eat
          eav:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eau
          eaw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eav
          eax:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eaw
          eay:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eax
          eaz:bool[] = lt 0 0
          eba:i32[] = add 0 1
          ebb:i32[] = select_n eaz 0 eba
          ebc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ebb
          ebd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ebc
          ebe:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ebd
          ebf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ebe
          ebg:bool[] = lt 0 0
          ebh:i32[] = add 0 1
          ebi:i32[] = select_n ebg 0 ebh
          ebj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ebi
          ebk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ebj
          ebl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ebk
          ebm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ebl
          ebn:bool[] = lt 0 0
          ebo:i32[] = add 0 1
          ebp:i32[] = select_n ebn 0 ebo
          ebq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ebp
          ebr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ebq
          ebs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ebr
          ebt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ebs
          ebu:bool[] = lt 0 0
          ebv:i32[] = add 0 1
          ebw:i32[] = select_n ebu 0 ebv
          ebx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ebw
          eby:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ebx
          ebz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eby
          eca:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ebz
          ecb:bool[] = lt 0 0
          ecc:i32[] = add 0 1
          ecd:i32[] = select_n ecb 0 ecc
          ece:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ecd
          ecf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ece
          ecg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ecf
          ech:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ecg
          eci:bool[] = lt 0 0
          ecj:i32[] = add 0 1
          eck:i32[] = select_n eci 0 ecj
          ecl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eck
          ecm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ecl
          ecn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ecm
          eco:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ecn
          ecp:bool[] = lt 0 0
          ecq:i32[] = add 0 1
          ecr:i32[] = select_n ecp 0 ecq
          ecs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ecr
          ect:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ecs
          ecu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ect
          ecv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ecu
          ecw:bool[] = lt 0 0
          ecx:i32[] = add 0 1
          ecy:i32[] = select_n ecw 0 ecx
          ecz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ecy
          eda:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ecz
          edb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eda
          edc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] edb
          edd:bool[] = lt 0 0
          ede:i32[] = add 0 1
          edf:i32[] = select_n edd 0 ede
          edg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] edf
          edh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] edg
          edi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx edh
          edj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] edi
          edk:bool[] = lt 0 0
          edl:i32[] = add 0 1
          edm:i32[] = select_n edk 0 edl
          edn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] edm
          edo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] edn
          edp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx edo
          edq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] edp
          edr:bool[] = lt 0 0
          eds:i32[] = add 0 1
          edt:i32[] = select_n edr 0 eds
          edu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] edt
          edv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] edu
          edw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx edv
          edx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] edw
          edy:bool[] = lt 0 0
          edz:i32[] = add 0 1
          eea:i32[] = select_n edy 0 edz
          eeb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eea
          eec:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eeb
          eed:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eec
          eee:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eed
          eef:bool[] = lt 0 0
          eeg:i32[] = add 0 1
          eeh:i32[] = select_n eef 0 eeg
          eei:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eeh
          eej:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eei
          eek:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eej
          eel:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eek
          eem:bool[] = lt 0 0
          een:i32[] = add 0 1
          eeo:i32[] = select_n eem 0 een
          eep:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eeo
          eeq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eep
          eer:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eeq
          ees:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eer
          eet:bool[] = lt 0 0
          eeu:i32[] = add 0 1
          eev:i32[] = select_n eet 0 eeu
          eew:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eev
          eex:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eew
          eey:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eex
          eez:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eey
          efa:bool[] = lt 0 0
          efb:i32[] = add 0 1
          efc:i32[] = select_n efa 0 efb
          efd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] efc
          efe:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] efd
          eff:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx efe
          efg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eff
          efh:bool[] = lt 0 0
          efi:i32[] = add 0 1
          efj:i32[] = select_n efh 0 efi
          efk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] efj
          efl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] efk
          efm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx efl
          efn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] efm
          efo:bool[] = lt 0 0
          efp:i32[] = add 0 1
          efq:i32[] = select_n efo 0 efp
          efr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] efq
          efs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] efr
          eft:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx efs
          efu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eft
          efv:bool[] = lt 0 0
          efw:i32[] = add 0 1
          efx:i32[] = select_n efv 0 efw
          efy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] efx
          efz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] efy
          ega:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx efz
          egb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ega
          egc:bool[] = lt 0 0
          egd:i32[] = add 0 1
          ege:i32[] = select_n egc 0 egd
          egf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ege
          egg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] egf
          egh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx egg
          egi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] egh
          egj:bool[] = lt 0 0
          egk:i32[] = add 0 1
          egl:i32[] = select_n egj 0 egk
          egm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] egl
          egn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] egm
          ego:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx egn
          egp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ego
          egq:bool[] = lt 0 0
          egr:i32[] = add 0 1
          egs:i32[] = select_n egq 0 egr
          egt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] egs
          egu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] egt
          egv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx egu
          egw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] egv
          egx:bool[] = lt 0 0
          egy:i32[] = add 0 1
          egz:i32[] = select_n egx 0 egy
          eha:i32[] = convert_element_type[new_dtype=int32 weak_type=False] egz
          ehb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eha
          ehc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ehb
          ehd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ehc
          ehe:bool[] = lt 0 0
          ehf:i32[] = add 0 1
          ehg:i32[] = select_n ehe 0 ehf
          ehh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ehg
          ehi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ehh
          ehj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ehi
          ehk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ehj
          ehl:bool[] = lt 0 0
          ehm:i32[] = add 0 1
          ehn:i32[] = select_n ehl 0 ehm
          eho:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ehn
          ehp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eho
          ehq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ehp
          ehr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ehq
          ehs:bool[] = lt 0 0
          eht:i32[] = add 0 1
          ehu:i32[] = select_n ehs 0 eht
          ehv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ehu
          ehw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ehv
          ehx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ehw
          ehy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ehx
          ehz:bool[] = lt 0 0
          eia:i32[] = add 0 1
          eib:i32[] = select_n ehz 0 eia
          eic:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eib
          eid:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eic
          eie:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eid
          eif:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eie
          eig:bool[] = lt 0 0
          eih:i32[] = add 0 1
          eii:i32[] = select_n eig 0 eih
          eij:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eii
          eik:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eij
          eil:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eik
          eim:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eil
          ein:bool[] = lt 0 0
          eio:i32[] = add 0 1
          eip:i32[] = select_n ein 0 eio
          eiq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eip
          eir:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eiq
          eis:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eir
          eit:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eis
          eiu:bool[] = lt 0 0
          eiv:i32[] = add 0 1
          eiw:i32[] = select_n eiu 0 eiv
          eix:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eiw
          eiy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eix
          eiz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eiy
          eja:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eiz
          ejb:bool[] = lt 0 0
          ejc:i32[] = add 0 1
          ejd:i32[] = select_n ejb 0 ejc
          eje:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ejd
          ejf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eje
          ejg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ejf
          ejh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ejg
          eji:bool[] = lt 0 0
          ejj:i32[] = add 0 1
          ejk:i32[] = select_n eji 0 ejj
          ejl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ejk
          ejm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ejl
          ejn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ejm
          ejo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ejn
          ejp:bool[] = lt 0 0
          ejq:i32[] = add 0 1
          ejr:i32[] = select_n ejp 0 ejq
          ejs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ejr
          ejt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ejs
          eju:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ejt
          ejv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eju
          ejw:bool[] = lt 0 0
          ejx:i32[] = add 0 1
          ejy:i32[] = select_n ejw 0 ejx
          ejz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ejy
          eka:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ejz
          ekb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eka
          ekc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ekb
          ekd:bool[] = lt 0 0
          eke:i32[] = add 0 1
          ekf:i32[] = select_n ekd 0 eke
          ekg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ekf
          ekh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ekg
          eki:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ekh
          ekj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eki
          ekk:bool[] = lt 0 0
          ekl:i32[] = add 0 1
          ekm:i32[] = select_n ekk 0 ekl
          ekn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ekm
          eko:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ekn
          ekp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eko
          ekq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ekp
          ekr:bool[] = lt 0 0
          eks:i32[] = add 0 1
          ekt:i32[] = select_n ekr 0 eks
          eku:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ekt
          ekv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eku
          ekw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ekv
          ekx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ekw
          eky:bool[] = lt 0 0
          ekz:i32[] = add 0 1
          ela:i32[] = select_n eky 0 ekz
          elb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ela
          elc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] elb
          eld:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx elc
          ele:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eld
          elf:bool[] = lt 0 0
          elg:i32[] = add 0 1
          elh:i32[] = select_n elf 0 elg
          eli:i32[] = convert_element_type[new_dtype=int32 weak_type=False] elh
          elj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eli
          elk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx elj
          ell:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] elk
          elm:bool[] = lt 0 0
          eln:i32[] = add 0 1
          elo:i32[] = select_n elm 0 eln
          elp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] elo
          elq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] elp
          elr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx elq
          els:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] elr
          elt:bool[] = lt 0 0
          elu:i32[] = add 0 1
          elv:i32[] = select_n elt 0 elu
          elw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] elv
          elx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] elw
          ely:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx elx
          elz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ely
          ema:bool[] = lt 0 0
          emb:i32[] = add 0 1
          emc:i32[] = select_n ema 0 emb
          emd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] emc
          eme:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] emd
          emf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eme
          emg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] emf
          emh:bool[] = lt 0 0
          emi:i32[] = add 0 1
          emj:i32[] = select_n emh 0 emi
          emk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] emj
          eml:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] emk
          emm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eml
          emn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] emm
          emo:bool[] = lt 0 0
          emp:i32[] = add 0 1
          emq:i32[] = select_n emo 0 emp
          emr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] emq
          ems:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] emr
          emt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ems
          emu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] emt
          emv:bool[] = lt 0 0
          emw:i32[] = add 0 1
          emx:i32[] = select_n emv 0 emw
          emy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] emx
          emz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] emy
          ena:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx emz
          enb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ena
          enc:bool[] = lt 0 0
          end:i32[] = add 0 1
          ene:i32[] = select_n enc 0 end
          enf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ene
          eng:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] enf
          enh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eng
          eni:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] enh
          enj:bool[] = lt 0 0
          enk:i32[] = add 0 1
          enl:i32[] = select_n enj 0 enk
          enm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] enl
          enn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] enm
          eno:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx enn
          enp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eno
          enq:bool[] = lt 0 0
          enr:i32[] = add 0 1
          ens:i32[] = select_n enq 0 enr
          ent:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ens
          enu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ent
          env:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx enu
          enw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] env
          enx:bool[] = lt 0 0
          eny:i32[] = add 0 1
          enz:i32[] = select_n enx 0 eny
          eoa:i32[] = convert_element_type[new_dtype=int32 weak_type=False] enz
          eob:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eoa
          eoc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eob
          eod:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eoc
          eoe:bool[] = lt 0 0
          eof:i32[] = add 0 1
          eog:i32[] = select_n eoe 0 eof
          eoh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eog
          eoi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eoh
          eoj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eoi
          eok:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eoj
          eol:bool[] = lt 0 0
          eom:i32[] = add 0 1
          eon:i32[] = select_n eol 0 eom
          eoo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eon
          eop:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eoo
          eoq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eop
          eor:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eoq
          eos:bool[] = lt 0 0
          eot:i32[] = add 0 1
          eou:i32[] = select_n eos 0 eot
          eov:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eou
          eow:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eov
          eox:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eow
          eoy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eox
          eoz:bool[] = lt 0 0
          epa:i32[] = add 0 1
          epb:i32[] = select_n eoz 0 epa
          epc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] epb
          epd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] epc
          epe:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx epd
          epf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] epe
          epg:bool[] = lt 0 0
          eph:i32[] = add 0 1
          epi:i32[] = select_n epg 0 eph
          epj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] epi
          epk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] epj
          epl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx epk
          epm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] epl
          epn:bool[] = lt 0 0
          epo:i32[] = add 0 1
          epp:i32[] = select_n epn 0 epo
          epq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] epp
          epr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] epq
          eps:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx epr
          ept:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eps
          epu:bool[] = lt 0 0
          epv:i32[] = add 0 1
          epw:i32[] = select_n epu 0 epv
          epx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] epw
          epy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] epx
          epz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx epy
          eqa:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] epz
          eqb:bool[] = lt 0 0
          eqc:i32[] = add 0 1
          eqd:i32[] = select_n eqb 0 eqc
          eqe:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eqd
          eqf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eqe
          eqg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eqf
          eqh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eqg
          eqi:bool[] = lt 0 0
          eqj:i32[] = add 0 1
          eqk:i32[] = select_n eqi 0 eqj
          eql:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eqk
          eqm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eql
          eqn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eqm
          eqo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eqn
          eqp:bool[] = lt 0 0
          eqq:i32[] = add 0 1
          eqr:i32[] = select_n eqp 0 eqq
          eqs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eqr
          eqt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eqs
          equ:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eqt
          eqv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] equ
          eqw:bool[] = lt 0 0
          eqx:i32[] = add 0 1
          eqy:i32[] = select_n eqw 0 eqx
          eqz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eqy
          era:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eqz
          erb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx era
          erc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] erb
          erd:bool[] = lt 0 0
          ere:i32[] = add 0 1
          erf:i32[] = select_n erd 0 ere
          erg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] erf
          erh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] erg
          eri:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx erh
          erj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eri
          erk:bool[] = lt 0 0
          erl:i32[] = add 0 1
          erm:i32[] = select_n erk 0 erl
          ern:i32[] = convert_element_type[new_dtype=int32 weak_type=False] erm
          ero:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ern
          erp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ero
          erq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] erp
          err:bool[] = lt 0 0
          ers:i32[] = add 0 1
          ert:i32[] = select_n err 0 ers
          eru:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ert
          erv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eru
          erw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx erv
          erx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] erw
          ery:bool[] = lt 0 0
          erz:i32[] = add 0 1
          esa:i32[] = select_n ery 0 erz
          esb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] esa
          esc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] esb
          esd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx esc
          ese:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] esd
          esf:bool[] = lt 0 0
          esg:i32[] = add 0 1
          esh:i32[] = select_n esf 0 esg
          esi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] esh
          esj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] esi
          esk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx esj
          esl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] esk
          esm:bool[] = lt 0 0
          esn:i32[] = add 0 1
          eso:i32[] = select_n esm 0 esn
          esp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eso
          esq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] esp
          esr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx esq
          ess:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] esr
          est:bool[] = lt 0 0
          esu:i32[] = add 0 1
          esv:i32[] = select_n est 0 esu
          esw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] esv
          esx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] esw
          esy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx esx
          esz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] esy
          eta:bool[] = lt 0 0
          etb:i32[] = add 0 1
          etc:i32[] = select_n eta 0 etb
          etd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] etc
          ete:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] etd
          etf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ete
          etg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] etf
          eth:bool[] = lt 0 0
          eti:i32[] = add 0 1
          etj:i32[] = select_n eth 0 eti
          etk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] etj
          etl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] etk
          etm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx etl
          etn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] etm
          eto:bool[] = lt 0 0
          etp:i32[] = add 0 1
          etq:i32[] = select_n eto 0 etp
          etr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] etq
          ets:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] etr
          ett:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ets
          etu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ett
          etv:bool[] = lt 0 0
          etw:i32[] = add 0 1
          etx:i32[] = select_n etv 0 etw
          ety:i32[] = convert_element_type[new_dtype=int32 weak_type=False] etx
          etz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ety
          eua:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx etz
          eub:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eua
          euc:bool[] = lt 0 0
          eud:i32[] = add 0 1
          eue:i32[] = select_n euc 0 eud
          euf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eue
          eug:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] euf
          euh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eug
          eui:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] euh
          euj:bool[] = lt 0 0
          euk:i32[] = add 0 1
          eul:i32[] = select_n euj 0 euk
          eum:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eul
          eun:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eum
          euo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eun
          eup:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] euo
          euq:bool[] = lt 0 0
          eur:i32[] = add 0 1
          eus:i32[] = select_n euq 0 eur
          eut:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eus
          euu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eut
          euv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx euu
          euw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] euv
          eux:bool[] = lt 0 0
          euy:i32[] = add 0 1
          euz:i32[] = select_n eux 0 euy
          eva:i32[] = convert_element_type[new_dtype=int32 weak_type=False] euz
          evb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eva
          evc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx evb
          evd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] evc
          eve:bool[] = lt 0 0
          evf:i32[] = add 0 1
          evg:i32[] = select_n eve 0 evf
          evh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] evg
          evi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] evh
          evj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx evi
          evk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] evj
          evl:bool[] = lt 0 0
          evm:i32[] = add 0 1
          evn:i32[] = select_n evl 0 evm
          evo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] evn
          evp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] evo
          evq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx evp
          evr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] evq
          evs:bool[] = lt 0 0
          evt:i32[] = add 0 1
          evu:i32[] = select_n evs 0 evt
          evv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] evu
          evw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] evv
          evx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx evw
          evy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] evx
          evz:bool[] = lt 0 0
          ewa:i32[] = add 0 1
          ewb:i32[] = select_n evz 0 ewa
          ewc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ewb
          ewd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ewc
          ewe:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ewd
          ewf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ewe
          ewg:bool[] = lt 0 0
          ewh:i32[] = add 0 1
          ewi:i32[] = select_n ewg 0 ewh
          ewj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ewi
          ewk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ewj
          ewl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ewk
          ewm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ewl
          ewn:bool[] = lt 0 0
          ewo:i32[] = add 0 1
          ewp:i32[] = select_n ewn 0 ewo
          ewq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ewp
          ewr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ewq
          ews:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ewr
          ewt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ews
          ewu:bool[] = lt 0 0
          ewv:i32[] = add 0 1
          eww:i32[] = select_n ewu 0 ewv
          ewx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eww
          ewy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ewx
          ewz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ewy
          exa:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ewz
          exb:bool[] = lt 0 0
          exc:i32[] = add 0 1
          exd:i32[] = select_n exb 0 exc
          exe:i32[] = convert_element_type[new_dtype=int32 weak_type=False] exd
          exf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] exe
          exg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx exf
          exh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] exg
          exi:bool[] = lt 0 0
          exj:i32[] = add 0 1
          exk:i32[] = select_n exi 0 exj
          exl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] exk
          exm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] exl
          exn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx exm
          exo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] exn
          exp:bool[] = lt 0 0
          exq:i32[] = add 0 1
          exr:i32[] = select_n exp 0 exq
          exs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] exr
          ext:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] exs
          exu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ext
          exv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] exu
          exw:bool[] = lt 0 0
          exx:i32[] = add 0 1
          exy:i32[] = select_n exw 0 exx
          exz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] exy
          eya:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] exz
          eyb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eya
          eyc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eyb
          eyd:bool[] = lt 0 0
          eye:i32[] = add 0 1
          eyf:i32[] = select_n eyd 0 eye
          eyg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eyf
          eyh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eyg
          eyi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eyh
          eyj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eyi
          eyk:bool[] = lt 0 0
          eyl:i32[] = add 0 1
          eym:i32[] = select_n eyk 0 eyl
          eyn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eym
          eyo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eyn
          eyp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eyo
          eyq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eyp
          eyr:bool[] = lt 0 0
          eys:i32[] = add 0 1
          eyt:i32[] = select_n eyr 0 eys
          eyu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eyt
          eyv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] eyu
          eyw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx eyv
          eyx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] eyw
          eyy:bool[] = lt 0 0
          eyz:i32[] = add 0 1
          eza:i32[] = select_n eyy 0 eyz
          ezb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] eza
          ezc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ezb
          ezd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ezc
          eze:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ezd
          ezf:bool[] = lt 0 0
          ezg:i32[] = add 0 1
          ezh:i32[] = select_n ezf 0 ezg
          ezi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ezh
          ezj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ezi
          ezk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ezj
          ezl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ezk
          ezm:bool[] = lt 0 0
          ezn:i32[] = add 0 1
          ezo:i32[] = select_n ezm 0 ezn
          ezp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ezo
          ezq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ezp
          ezr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ezq
          ezs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ezr
          ezt:bool[] = lt 0 0
          ezu:i32[] = add 0 1
          ezv:i32[] = select_n ezt 0 ezu
          ezw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ezv
          ezx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ezw
          ezy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ezx
          ezz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ezy
          faa:bool[] = lt 0 0
          fab:i32[] = add 0 1
          fac:i32[] = select_n faa 0 fab
          fad:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fac
          fae:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fad
          faf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fae
          fag:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] faf
          fah:bool[] = lt 0 0
          fai:i32[] = add 0 1
          faj:i32[] = select_n fah 0 fai
          fak:i32[] = convert_element_type[new_dtype=int32 weak_type=False] faj
          fal:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fak
          fam:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fal
          fan:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fam
          fao:bool[] = lt 0 0
          fap:i32[] = add 0 1
          faq:i32[] = select_n fao 0 fap
          far:i32[] = convert_element_type[new_dtype=int32 weak_type=False] faq
          fas:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] far
          fat:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fas
          fau:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fat
          fav:bool[] = lt 0 0
          faw:i32[] = add 0 1
          fax:i32[] = select_n fav 0 faw
          fay:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fax
          faz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fay
          fba:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx faz
          fbb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fba
          fbc:bool[] = lt 0 0
          fbd:i32[] = add 0 1
          fbe:i32[] = select_n fbc 0 fbd
          fbf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fbe
          fbg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fbf
          fbh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fbg
          fbi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fbh
          fbj:bool[] = lt 0 0
          fbk:i32[] = add 0 1
          fbl:i32[] = select_n fbj 0 fbk
          fbm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fbl
          fbn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fbm
          fbo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fbn
          fbp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fbo
          fbq:bool[] = lt 0 0
          fbr:i32[] = add 0 1
          fbs:i32[] = select_n fbq 0 fbr
          fbt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fbs
          fbu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fbt
          fbv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fbu
          fbw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fbv
          fbx:bool[] = lt 0 0
          fby:i32[] = add 0 1
          fbz:i32[] = select_n fbx 0 fby
          fca:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fbz
          fcb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fca
          fcc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fcb
          fcd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fcc
          fce:bool[] = lt 0 0
          fcf:i32[] = add 0 1
          fcg:i32[] = select_n fce 0 fcf
          fch:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fcg
          fci:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fch
          fcj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fci
          fck:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fcj
          fcl:bool[] = lt 0 0
          fcm:i32[] = add 0 1
          fcn:i32[] = select_n fcl 0 fcm
          fco:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fcn
          fcp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fco
          fcq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fcp
          fcr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fcq
          fcs:bool[] = lt 0 0
          fct:i32[] = add 0 1
          fcu:i32[] = select_n fcs 0 fct
          fcv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fcu
          fcw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fcv
          fcx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fcw
          fcy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fcx
          fcz:bool[] = lt 0 0
          fda:i32[] = add 0 1
          fdb:i32[] = select_n fcz 0 fda
          fdc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fdb
          fdd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fdc
          fde:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fdd
          fdf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fde
          fdg:bool[] = lt 0 0
          fdh:i32[] = add 0 1
          fdi:i32[] = select_n fdg 0 fdh
          fdj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fdi
          fdk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fdj
          fdl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fdk
          fdm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fdl
          fdn:bool[] = lt 0 0
          fdo:i32[] = add 0 1
          fdp:i32[] = select_n fdn 0 fdo
          fdq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fdp
          fdr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fdq
          fds:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fdr
          fdt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fds
          fdu:bool[] = lt 0 0
          fdv:i32[] = add 0 1
          fdw:i32[] = select_n fdu 0 fdv
          fdx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fdw
          fdy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fdx
          fdz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fdy
          fea:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fdz
          feb:bool[] = lt 0 0
          fec:i32[] = add 0 1
          fed:i32[] = select_n feb 0 fec
          fee:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fed
          fef:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fee
          feg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fef
          feh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] feg
          fei:bool[] = lt 0 0
          fej:i32[] = add 0 1
          fek:i32[] = select_n fei 0 fej
          fel:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fek
          fem:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fel
          fen:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fem
          feo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fen
          fep:bool[] = lt 0 0
          feq:i32[] = add 0 1
          fer:i32[] = select_n fep 0 feq
          fes:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fer
          fet:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fes
          feu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fet
          fev:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] feu
          few:bool[] = lt 0 0
          fex:i32[] = add 0 1
          fey:i32[] = select_n few 0 fex
          fez:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fey
          ffa:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fez
          ffb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ffa
          ffc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ffb
          ffd:bool[] = lt 0 0
          ffe:i32[] = add 0 1
          fff:i32[] = select_n ffd 0 ffe
          ffg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fff
          ffh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ffg
          ffi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ffh
          ffj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ffi
          ffk:bool[] = lt 0 0
          ffl:i32[] = add 0 1
          ffm:i32[] = select_n ffk 0 ffl
          ffn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ffm
          ffo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ffn
          ffp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ffo
          ffq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ffp
          ffr:bool[] = lt 0 0
          ffs:i32[] = add 0 1
          fft:i32[] = select_n ffr 0 ffs
          ffu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fft
          ffv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ffu
          ffw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ffv
          ffx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ffw
          ffy:bool[] = lt 0 0
          ffz:i32[] = add 0 1
          fga:i32[] = select_n ffy 0 ffz
          fgb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fga
          fgc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fgb
          fgd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fgc
          fge:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fgd
          fgf:bool[] = lt 0 0
          fgg:i32[] = add 0 1
          fgh:i32[] = select_n fgf 0 fgg
          fgi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fgh
          fgj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fgi
          fgk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fgj
          fgl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fgk
          fgm:bool[] = lt 0 0
          fgn:i32[] = add 0 1
          fgo:i32[] = select_n fgm 0 fgn
          fgp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fgo
          fgq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fgp
          fgr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fgq
          fgs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fgr
          fgt:bool[] = lt 0 0
          fgu:i32[] = add 0 1
          fgv:i32[] = select_n fgt 0 fgu
          fgw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fgv
          fgx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fgw
          fgy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fgx
          fgz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fgy
          fha:bool[] = lt 0 0
          fhb:i32[] = add 0 1
          fhc:i32[] = select_n fha 0 fhb
          fhd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fhc
          fhe:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fhd
          fhf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fhe
          fhg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fhf
          fhh:bool[] = lt 0 0
          fhi:i32[] = add 0 1
          fhj:i32[] = select_n fhh 0 fhi
          fhk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fhj
          fhl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fhk
          fhm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fhl
          fhn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fhm
          fho:bool[] = lt 0 0
          fhp:i32[] = add 0 1
          fhq:i32[] = select_n fho 0 fhp
          fhr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fhq
          fhs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fhr
          fht:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fhs
          fhu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fht
          fhv:bool[] = lt 0 0
          fhw:i32[] = add 0 1
          fhx:i32[] = select_n fhv 0 fhw
          fhy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fhx
          fhz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fhy
          fia:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fhz
          fib:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fia
          fic:bool[] = lt 0 0
          fid:i32[] = add 0 1
          fie:i32[] = select_n fic 0 fid
          fif:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fie
          fig:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fif
          fih:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fig
          fii:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fih
          fij:bool[] = lt 0 0
          fik:i32[] = add 0 1
          fil:i32[] = select_n fij 0 fik
          fim:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fil
          fin:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fim
          fio:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fin
          fip:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fio
          fiq:bool[] = lt 0 0
          fir:i32[] = add 0 1
          fis:i32[] = select_n fiq 0 fir
          fit:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fis
          fiu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fit
          fiv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fiu
          fiw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fiv
          fix:bool[] = lt 0 0
          fiy:i32[] = add 0 1
          fiz:i32[] = select_n fix 0 fiy
          fja:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fiz
          fjb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fja
          fjc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fjb
          fjd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fjc
          fje:bool[] = lt 0 0
          fjf:i32[] = add 0 1
          fjg:i32[] = select_n fje 0 fjf
          fjh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fjg
          fji:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fjh
          fjj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fji
          fjk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fjj
          fjl:bool[] = lt 0 0
          fjm:i32[] = add 0 1
          fjn:i32[] = select_n fjl 0 fjm
          fjo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fjn
          fjp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fjo
          fjq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fjp
          fjr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fjq
          fjs:bool[] = lt 0 0
          fjt:i32[] = add 0 1
          fju:i32[] = select_n fjs 0 fjt
          fjv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fju
          fjw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fjv
          fjx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fjw
          fjy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fjx
          fjz:bool[] = lt 0 0
          fka:i32[] = add 0 1
          fkb:i32[] = select_n fjz 0 fka
          fkc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fkb
          fkd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fkc
          fke:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fkd
          fkf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fke
          fkg:bool[] = lt 0 0
          fkh:i32[] = add 0 1
          fki:i32[] = select_n fkg 0 fkh
          fkj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fki
          fkk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fkj
          fkl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fkk
          fkm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fkl
          fkn:bool[] = lt 0 0
          fko:i32[] = add 0 1
          fkp:i32[] = select_n fkn 0 fko
          fkq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fkp
          fkr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fkq
          fks:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fkr
          fkt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fks
          fku:bool[] = lt 0 0
          fkv:i32[] = add 0 1
          fkw:i32[] = select_n fku 0 fkv
          fkx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fkw
          fky:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fkx
          fkz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fky
          fla:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fkz
          flb:bool[] = lt 0 0
          flc:i32[] = add 0 1
          fld:i32[] = select_n flb 0 flc
          fle:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fld
          flf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fle
          flg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx flf
          flh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] flg
          fli:bool[] = lt 0 0
          flj:i32[] = add 0 1
          flk:i32[] = select_n fli 0 flj
          fll:i32[] = convert_element_type[new_dtype=int32 weak_type=False] flk
          flm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fll
          fln:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx flm
          flo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fln
          flp:bool[] = lt 0 0
          flq:i32[] = add 0 1
          flr:i32[] = select_n flp 0 flq
          fls:i32[] = convert_element_type[new_dtype=int32 weak_type=False] flr
          flt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fls
          flu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx flt
          flv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] flu
          flw:bool[] = lt 0 0
          flx:i32[] = add 0 1
          fly:i32[] = select_n flw 0 flx
          flz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fly
          fma:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] flz
          fmb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fma
          fmc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fmb
          fmd:bool[] = lt 0 0
          fme:i32[] = add 0 1
          fmf:i32[] = select_n fmd 0 fme
          fmg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fmf
          fmh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fmg
          fmi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fmh
          fmj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fmi
          fmk:bool[] = lt 0 0
          fml:i32[] = add 0 1
          fmm:i32[] = select_n fmk 0 fml
          fmn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fmm
          fmo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fmn
          fmp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fmo
          fmq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fmp
          fmr:bool[] = lt 0 0
          fms:i32[] = add 0 1
          fmt:i32[] = select_n fmr 0 fms
          fmu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fmt
          fmv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fmu
          fmw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fmv
          fmx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fmw
          fmy:bool[] = lt 0 0
          fmz:i32[] = add 0 1
          fna:i32[] = select_n fmy 0 fmz
          fnb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fna
          fnc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fnb
          fnd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fnc
          fne:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fnd
          fnf:bool[] = lt 0 0
          fng:i32[] = add 0 1
          fnh:i32[] = select_n fnf 0 fng
          fni:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fnh
          fnj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fni
          fnk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fnj
          fnl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fnk
          fnm:bool[] = lt 0 0
          fnn:i32[] = add 0 1
          fno:i32[] = select_n fnm 0 fnn
          fnp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fno
          fnq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fnp
          fnr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fnq
          fns:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fnr
          fnt:bool[] = lt 0 0
          fnu:i32[] = add 0 1
          fnv:i32[] = select_n fnt 0 fnu
          fnw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fnv
          fnx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fnw
          fny:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fnx
          fnz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fny
          foa:bool[] = lt 0 0
          fob:i32[] = add 0 1
          foc:i32[] = select_n foa 0 fob
          fod:i32[] = convert_element_type[new_dtype=int32 weak_type=False] foc
          foe:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fod
          fof:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx foe
          fog:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fof
          foh:bool[] = lt 0 0
          foi:i32[] = add 0 1
          foj:i32[] = select_n foh 0 foi
          fok:i32[] = convert_element_type[new_dtype=int32 weak_type=False] foj
          fol:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fok
          fom:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fol
          fon:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fom
          foo:bool[] = lt 0 0
          fop:i32[] = add 0 1
          foq:i32[] = select_n foo 0 fop
          for:i32[] = convert_element_type[new_dtype=int32 weak_type=False] foq
          fos:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] for
          fot:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fos
          fou:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fot
          fov:bool[] = lt 0 0
          fow:i32[] = add 0 1
          fox:i32[] = select_n fov 0 fow
          foy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fox
          foz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] foy
          fpa:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx foz
          fpb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fpa
          fpc:bool[] = lt 0 0
          fpd:i32[] = add 0 1
          fpe:i32[] = select_n fpc 0 fpd
          fpf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fpe
          fpg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fpf
          fph:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fpg
          fpi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fph
          fpj:bool[] = lt 0 0
          fpk:i32[] = add 0 1
          fpl:i32[] = select_n fpj 0 fpk
          fpm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fpl
          fpn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fpm
          fpo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fpn
          fpp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fpo
          fpq:bool[] = lt 0 0
          fpr:i32[] = add 0 1
          fps:i32[] = select_n fpq 0 fpr
          fpt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fps
          fpu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fpt
          fpv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fpu
          fpw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fpv
          fpx:bool[] = lt 0 0
          fpy:i32[] = add 0 1
          fpz:i32[] = select_n fpx 0 fpy
          fqa:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fpz
          fqb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fqa
          fqc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fqb
          fqd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fqc
          fqe:bool[] = lt 0 0
          fqf:i32[] = add 0 1
          fqg:i32[] = select_n fqe 0 fqf
          fqh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fqg
          fqi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fqh
          fqj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fqi
          fqk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fqj
          fql:bool[] = lt 0 0
          fqm:i32[] = add 0 1
          fqn:i32[] = select_n fql 0 fqm
          fqo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fqn
          fqp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fqo
          fqq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fqp
          fqr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fqq
          fqs:bool[] = lt 0 0
          fqt:i32[] = add 0 1
          fqu:i32[] = select_n fqs 0 fqt
          fqv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fqu
          fqw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fqv
          fqx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fqw
          fqy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fqx
          fqz:bool[] = lt 0 0
          fra:i32[] = add 0 1
          frb:i32[] = select_n fqz 0 fra
          frc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] frb
          frd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] frc
          fre:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx frd
          frf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fre
          frg:bool[] = lt 0 0
          frh:i32[] = add 0 1
          fri:i32[] = select_n frg 0 frh
          frj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fri
          frk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] frj
          frl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx frk
          frm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] frl
          frn:bool[] = lt 0 0
          fro:i32[] = add 0 1
          frp:i32[] = select_n frn 0 fro
          frq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] frp
          frr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] frq
          frs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx frr
          frt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] frs
          fru:bool[] = lt 0 0
          frv:i32[] = add 0 1
          frw:i32[] = select_n fru 0 frv
          frx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] frw
          fry:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] frx
          frz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fry
          fsa:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] frz
          fsb:bool[] = lt 0 0
          fsc:i32[] = add 0 1
          fsd:i32[] = select_n fsb 0 fsc
          fse:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fsd
          fsf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fse
          fsg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fsf
          fsh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fsg
          fsi:bool[] = lt 0 0
          fsj:i32[] = add 0 1
          fsk:i32[] = select_n fsi 0 fsj
          fsl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fsk
          fsm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fsl
          fsn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fsm
          fso:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fsn
          fsp:bool[] = lt 0 0
          fsq:i32[] = add 0 1
          fsr:i32[] = select_n fsp 0 fsq
          fss:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fsr
          fst:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fss
          fsu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fst
          fsv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fsu
          fsw:bool[] = lt 0 0
          fsx:i32[] = add 0 1
          fsy:i32[] = select_n fsw 0 fsx
          fsz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fsy
          fta:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fsz
          ftb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fta
          ftc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ftb
          ftd:bool[] = lt 0 0
          fte:i32[] = add 0 1
          ftf:i32[] = select_n ftd 0 fte
          ftg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ftf
          fth:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ftg
          fti:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fth
          ftj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fti
          ftk:bool[] = lt 0 0
          ftl:i32[] = add 0 1
          ftm:i32[] = select_n ftk 0 ftl
          ftn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ftm
          fto:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ftn
          ftp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fto
          ftq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ftp
          ftr:bool[] = lt 0 0
          fts:i32[] = add 0 1
          ftt:i32[] = select_n ftr 0 fts
          ftu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ftt
          ftv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ftu
          ftw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ftv
          ftx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ftw
          fty:bool[] = lt 0 0
          ftz:i32[] = add 0 1
          fua:i32[] = select_n fty 0 ftz
          fub:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fua
          fuc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fub
          fud:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fuc
          fue:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fud
          fuf:bool[] = lt 0 0
          fug:i32[] = add 0 1
          fuh:i32[] = select_n fuf 0 fug
          fui:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fuh
          fuj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fui
          fuk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fuj
          ful:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fuk
          fum:bool[] = lt 0 0
          fun:i32[] = add 0 1
          fuo:i32[] = select_n fum 0 fun
          fup:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fuo
          fuq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fup
          fur:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fuq
          fus:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fur
          fut:bool[] = lt 0 0
          fuu:i32[] = add 0 1
          fuv:i32[] = select_n fut 0 fuu
          fuw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fuv
          fux:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fuw
          fuy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fux
          fuz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fuy
          fva:bool[] = lt 0 0
          fvb:i32[] = add 0 1
          fvc:i32[] = select_n fva 0 fvb
          fvd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fvc
          fve:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fvd
          fvf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fve
          fvg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fvf
          fvh:bool[] = lt 0 0
          fvi:i32[] = add 0 1
          fvj:i32[] = select_n fvh 0 fvi
          fvk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fvj
          fvl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fvk
          fvm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fvl
          fvn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fvm
          fvo:bool[] = lt 0 0
          fvp:i32[] = add 0 1
          fvq:i32[] = select_n fvo 0 fvp
          fvr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fvq
          fvs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fvr
          fvt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fvs
          fvu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fvt
          fvv:bool[] = lt 0 0
          fvw:i32[] = add 0 1
          fvx:i32[] = select_n fvv 0 fvw
          fvy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fvx
          fvz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fvy
          fwa:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fvz
          fwb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fwa
          fwc:bool[] = lt 0 0
          fwd:i32[] = add 0 1
          fwe:i32[] = select_n fwc 0 fwd
          fwf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fwe
          fwg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fwf
          fwh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fwg
          fwi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fwh
          fwj:bool[] = lt 0 0
          fwk:i32[] = add 0 1
          fwl:i32[] = select_n fwj 0 fwk
          fwm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fwl
          fwn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fwm
          fwo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fwn
          fwp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fwo
          fwq:bool[] = lt 0 0
          fwr:i32[] = add 0 1
          fws:i32[] = select_n fwq 0 fwr
          fwt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fws
          fwu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fwt
          fwv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fwu
          fww:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fwv
          fwx:bool[] = lt 0 0
          fwy:i32[] = add 0 1
          fwz:i32[] = select_n fwx 0 fwy
          fxa:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fwz
          fxb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fxa
          fxc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fxb
          fxd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fxc
          fxe:bool[] = lt 0 0
          fxf:i32[] = add 0 1
          fxg:i32[] = select_n fxe 0 fxf
          fxh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fxg
          fxi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fxh
          fxj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fxi
          fxk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fxj
          fxl:bool[] = lt 0 0
          fxm:i32[] = add 0 1
          fxn:i32[] = select_n fxl 0 fxm
          fxo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fxn
          fxp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fxo
          fxq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fxp
          fxr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fxq
          fxs:bool[] = lt 0 0
          fxt:i32[] = add 0 1
          fxu:i32[] = select_n fxs 0 fxt
          fxv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fxu
          fxw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fxv
          fxx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fxw
          fxy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fxx
          fxz:bool[] = lt 0 0
          fya:i32[] = add 0 1
          fyb:i32[] = select_n fxz 0 fya
          fyc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fyb
          fyd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fyc
          fye:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fyd
          fyf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fye
          fyg:bool[] = lt 0 0
          fyh:i32[] = add 0 1
          fyi:i32[] = select_n fyg 0 fyh
          fyj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fyi
          fyk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fyj
          fyl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fyk
          fym:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fyl
          fyn:bool[] = lt 0 0
          fyo:i32[] = add 0 1
          fyp:i32[] = select_n fyn 0 fyo
          fyq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fyp
          fyr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fyq
          fys:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fyr
          fyt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fys
          fyu:bool[] = lt 0 0
          fyv:i32[] = add 0 1
          fyw:i32[] = select_n fyu 0 fyv
          fyx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fyw
          fyy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fyx
          fyz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fyy
          fza:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fyz
          fzb:bool[] = lt 0 0
          fzc:i32[] = add 0 1
          fzd:i32[] = select_n fzb 0 fzc
          fze:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fzd
          fzf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fze
          fzg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fzf
          fzh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fzg
          fzi:bool[] = lt 0 0
          fzj:i32[] = add 0 1
          fzk:i32[] = select_n fzi 0 fzj
          fzl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fzk
          fzm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fzl
          fzn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fzm
          fzo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fzn
          fzp:bool[] = lt 0 0
          fzq:i32[] = add 0 1
          fzr:i32[] = select_n fzp 0 fzq
          fzs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fzr
          fzt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fzs
          fzu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx fzt
          fzv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] fzu
          fzw:bool[] = lt 0 0
          fzx:i32[] = add 0 1
          fzy:i32[] = select_n fzw 0 fzx
          fzz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] fzy
          gaa:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] fzz
          gab:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gaa
          gac:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gab
          gad:bool[] = lt 0 0
          gae:i32[] = add 0 1
          gaf:i32[] = select_n gad 0 gae
          gag:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gaf
          gah:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gag
          gai:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gah
          gaj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gai
          gak:bool[] = lt 0 0
          gal:i32[] = add 0 1
          gam:i32[] = select_n gak 0 gal
          gan:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gam
          gao:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gan
          gap:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gao
          gaq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gap
          gar:bool[] = lt 0 0
          gas:i32[] = add 0 1
          gat:i32[] = select_n gar 0 gas
          gau:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gat
          gav:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gau
          gaw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gav
          gax:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gaw
          gay:bool[] = lt 0 0
          gaz:i32[] = add 0 1
          gba:i32[] = select_n gay 0 gaz
          gbb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gba
          gbc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gbb
          gbd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gbc
          gbe:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gbd
          gbf:bool[] = lt 0 0
          gbg:i32[] = add 0 1
          gbh:i32[] = select_n gbf 0 gbg
          gbi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gbh
          gbj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gbi
          gbk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gbj
          gbl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gbk
          gbm:bool[] = lt 0 0
          gbn:i32[] = add 0 1
          gbo:i32[] = select_n gbm 0 gbn
          gbp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gbo
          gbq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gbp
          gbr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gbq
          gbs:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gbr
          gbt:bool[] = lt 0 0
          gbu:i32[] = add 0 1
          gbv:i32[] = select_n gbt 0 gbu
          gbw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gbv
          gbx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gbw
          gby:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gbx
          gbz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gby
          gca:bool[] = lt 0 0
          gcb:i32[] = add 0 1
          gcc:i32[] = select_n gca 0 gcb
          gcd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gcc
          gce:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gcd
          gcf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gce
          gcg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gcf
          gch:bool[] = lt 0 0
          gci:i32[] = add 0 1
          gcj:i32[] = select_n gch 0 gci
          gck:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gcj
          gcl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gck
          gcm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gcl
          gcn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gcm
          gco:bool[] = lt 0 0
          gcp:i32[] = add 0 1
          gcq:i32[] = select_n gco 0 gcp
          gcr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gcq
          gcs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gcr
          gct:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gcs
          gcu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gct
          gcv:bool[] = lt 0 0
          gcw:i32[] = add 0 1
          gcx:i32[] = select_n gcv 0 gcw
          gcy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gcx
          gcz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gcy
          gda:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gcz
          gdb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gda
          gdc:bool[] = lt 0 0
          gdd:i32[] = add 0 1
          gde:i32[] = select_n gdc 0 gdd
          gdf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gde
          gdg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gdf
          gdh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gdg
          gdi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gdh
          gdj:bool[] = lt 0 0
          gdk:i32[] = add 0 1
          gdl:i32[] = select_n gdj 0 gdk
          gdm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gdl
          gdn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gdm
          gdo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gdn
          gdp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gdo
          gdq:bool[] = lt 0 0
          gdr:i32[] = add 0 1
          gds:i32[] = select_n gdq 0 gdr
          gdt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gds
          gdu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gdt
          gdv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gdu
          gdw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gdv
          gdx:bool[] = lt 0 0
          gdy:i32[] = add 0 1
          gdz:i32[] = select_n gdx 0 gdy
          gea:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gdz
          geb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gea
          gec:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx geb
          ged:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gec
          gee:bool[] = lt 0 0
          gef:i32[] = add 0 1
          geg:i32[] = select_n gee 0 gef
          geh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] geg
          gei:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] geh
          gej:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gei
          gek:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gej
          gel:bool[] = lt 0 0
          gem:i32[] = add 0 1
          gen:i32[] = select_n gel 0 gem
          geo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gen
          gep:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] geo
          geq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gep
          ger:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] geq
          ges:bool[] = lt 0 0
          get:i32[] = add 0 1
          geu:i32[] = select_n ges 0 get
          gev:i32[] = convert_element_type[new_dtype=int32 weak_type=False] geu
          gew:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gev
          gex:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gew
          gey:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gex
          gez:bool[] = lt 0 0
          gfa:i32[] = add 0 1
          gfb:i32[] = select_n gez 0 gfa
          gfc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gfb
          gfd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gfc
          gfe:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gfd
          gff:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gfe
          gfg:bool[] = lt 0 0
          gfh:i32[] = add 0 1
          gfi:i32[] = select_n gfg 0 gfh
          gfj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gfi
          gfk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gfj
          gfl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gfk
          gfm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gfl
          gfn:bool[] = lt 0 0
          gfo:i32[] = add 0 1
          gfp:i32[] = select_n gfn 0 gfo
          gfq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gfp
          gfr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gfq
          gfs:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gfr
          gft:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gfs
          gfu:bool[] = lt 0 0
          gfv:i32[] = add 0 1
          gfw:i32[] = select_n gfu 0 gfv
          gfx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gfw
          gfy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gfx
          gfz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gfy
          gga:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gfz
          ggb:bool[] = lt 0 0
          ggc:i32[] = add 0 1
          ggd:i32[] = select_n ggb 0 ggc
          gge:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ggd
          ggf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gge
          ggg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ggf
          ggh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ggg
          ggi:bool[] = lt 0 0
          ggj:i32[] = add 0 1
          ggk:i32[] = select_n ggi 0 ggj
          ggl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ggk
          ggm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ggl
          ggn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ggm
          ggo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ggn
          ggp:bool[] = lt 0 0
          ggq:i32[] = add 0 1
          ggr:i32[] = select_n ggp 0 ggq
          ggs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ggr
          ggt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ggs
          ggu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ggt
          ggv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ggu
          ggw:bool[] = lt 0 0
          ggx:i32[] = add 0 1
          ggy:i32[] = select_n ggw 0 ggx
          ggz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ggy
          gha:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ggz
          ghb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gha
          ghc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ghb
          ghd:bool[] = lt 0 0
          ghe:i32[] = add 0 1
          ghf:i32[] = select_n ghd 0 ghe
          ghg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ghf
          ghh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ghg
          ghi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ghh
          ghj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ghi
          ghk:bool[] = lt 0 0
          ghl:i32[] = add 0 1
          ghm:i32[] = select_n ghk 0 ghl
          ghn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ghm
          gho:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ghn
          ghp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gho
          ghq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ghp
          ghr:bool[] = lt 0 0
          ghs:i32[] = add 0 1
          ght:i32[] = select_n ghr 0 ghs
          ghu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] ght
          ghv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] ghu
          ghw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx ghv
          ghx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] ghw
          ghy:bool[] = lt 0 0
          ghz:i32[] = add 0 1
          gia:i32[] = select_n ghy 0 ghz
          gib:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gia
          gic:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gib
          gid:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gic
          gie:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gid
          gif:bool[] = lt 0 0
          gig:i32[] = add 0 1
          gih:i32[] = select_n gif 0 gig
          gii:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gih
          gij:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gii
          gik:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gij
          gil:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gik
          gim:bool[] = lt 0 0
          gin:i32[] = add 0 1
          gio:i32[] = select_n gim 0 gin
          gip:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gio
          giq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gip
          gir:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx giq
          gis:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gir
          git:bool[] = lt 0 0
          giu:i32[] = add 0 1
          giv:i32[] = select_n git 0 giu
          giw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] giv
          gix:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] giw
          giy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gix
          giz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] giy
          gja:bool[] = lt 0 0
          gjb:i32[] = add 0 1
          gjc:i32[] = select_n gja 0 gjb
          gjd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gjc
          gje:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gjd
          gjf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gje
          gjg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gjf
          gjh:bool[] = lt 0 0
          gji:i32[] = add 0 1
          gjj:i32[] = select_n gjh 0 gji
          gjk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gjj
          gjl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gjk
          gjm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gjl
          gjn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gjm
          gjo:bool[] = lt 0 0
          gjp:i32[] = add 0 1
          gjq:i32[] = select_n gjo 0 gjp
          gjr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gjq
          gjs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gjr
          gjt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gjs
          gju:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gjt
          gjv:bool[] = lt 0 0
          gjw:i32[] = add 0 1
          gjx:i32[] = select_n gjv 0 gjw
          gjy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gjx
          gjz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gjy
          gka:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gjz
          gkb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gka
          gkc:bool[] = lt 0 0
          gkd:i32[] = add 0 1
          gke:i32[] = select_n gkc 0 gkd
          gkf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gke
          gkg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gkf
          gkh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gkg
          gki:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gkh
          gkj:bool[] = lt 0 0
          gkk:i32[] = add 0 1
          gkl:i32[] = select_n gkj 0 gkk
          gkm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gkl
          gkn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gkm
          gko:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gkn
          gkp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gko
          gkq:bool[] = lt 0 0
          gkr:i32[] = add 0 1
          gks:i32[] = select_n gkq 0 gkr
          gkt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gks
          gku:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gkt
          gkv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gku
          gkw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gkv
          gkx:bool[] = lt 0 0
          gky:i32[] = add 0 1
          gkz:i32[] = select_n gkx 0 gky
          gla:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gkz
          glb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gla
          glc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx glb
          gld:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] glc
          gle:bool[] = lt 0 0
          glf:i32[] = add 0 1
          glg:i32[] = select_n gle 0 glf
          glh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] glg
          gli:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] glh
          glj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gli
          glk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] glj
          gll:bool[] = lt 0 0
          glm:i32[] = add 0 1
          gln:i32[] = select_n gll 0 glm
          glo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gln
          glp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] glo
          glq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx glp
          glr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] glq
          gls:bool[] = lt 0 0
          glt:i32[] = add 0 1
          glu:i32[] = select_n gls 0 glt
          glv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] glu
          glw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] glv
          glx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx glw
          gly:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] glx
          glz:bool[] = lt 0 0
          gma:i32[] = add 0 1
          gmb:i32[] = select_n glz 0 gma
          gmc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gmb
          gmd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gmc
          gme:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gmd
          gmf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gme
          gmg:bool[] = lt 0 0
          gmh:i32[] = add 0 1
          gmi:i32[] = select_n gmg 0 gmh
          gmj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gmi
          gmk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gmj
          gml:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gmk
          gmm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gml
          gmn:bool[] = lt 0 0
          gmo:i32[] = add 0 1
          gmp:i32[] = select_n gmn 0 gmo
          gmq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gmp
          gmr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gmq
          gms:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gmr
          gmt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gms
          gmu:bool[] = lt 0 0
          gmv:i32[] = add 0 1
          gmw:i32[] = select_n gmu 0 gmv
          gmx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gmw
          gmy:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gmx
          gmz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gmy
          gna:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gmz
          gnb:bool[] = lt 0 0
          gnc:i32[] = add 0 1
          gnd:i32[] = select_n gnb 0 gnc
          gne:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gnd
          gnf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gne
          gng:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gnf
          gnh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gng
          gni:bool[] = lt 0 0
          gnj:i32[] = add 0 1
          gnk:i32[] = select_n gni 0 gnj
          gnl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gnk
          gnm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gnl
          gnn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gnm
          gno:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gnn
          gnp:bool[] = lt 0 0
          gnq:i32[] = add 0 1
          gnr:i32[] = select_n gnp 0 gnq
          gns:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gnr
          gnt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gns
          gnu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gnt
          gnv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gnu
          gnw:bool[] = lt 0 0
          gnx:i32[] = add 0 1
          gny:i32[] = select_n gnw 0 gnx
          gnz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gny
          goa:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gnz
          gob:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx goa
          goc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gob
          god:bool[] = lt 0 0
          goe:i32[] = add 0 1
          gof:i32[] = select_n god 0 goe
          gog:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gof
          goh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gog
          goi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx goh
          goj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] goi
          gok:bool[] = lt 0 0
          gol:i32[] = add 0 1
          gom:i32[] = select_n gok 0 gol
          gon:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gom
          goo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gon
          gop:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx goo
          goq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gop
          gor:bool[] = lt 0 0
          gos:i32[] = add 0 1
          got:i32[] = select_n gor 0 gos
          gou:i32[] = convert_element_type[new_dtype=int32 weak_type=False] got
          gov:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gou
          gow:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gov
          gox:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gow
          goy:bool[] = lt 0 0
          goz:i32[] = add 0 1
          gpa:i32[] = select_n goy 0 goz
          gpb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gpa
          gpc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gpb
          gpd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gpc
          gpe:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gpd
          gpf:bool[] = lt 0 0
          gpg:i32[] = add 0 1
          gph:i32[] = select_n gpf 0 gpg
          gpi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gph
          gpj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gpi
          gpk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gpj
          gpl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gpk
          gpm:bool[] = lt 0 0
          gpn:i32[] = add 0 1
          gpo:i32[] = select_n gpm 0 gpn
          gpp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gpo
          gpq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gpp
          gpr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gpq
          gps:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gpr
          gpt:bool[] = lt 0 0
          gpu:i32[] = add 0 1
          gpv:i32[] = select_n gpt 0 gpu
          gpw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gpv
          gpx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gpw
          gpy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gpx
          gpz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gpy
          gqa:bool[] = lt 0 0
          gqb:i32[] = add 0 1
          gqc:i32[] = select_n gqa 0 gqb
          gqd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gqc
          gqe:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gqd
          gqf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gqe
          gqg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gqf
          gqh:bool[] = lt 0 0
          gqi:i32[] = add 0 1
          gqj:i32[] = select_n gqh 0 gqi
          gqk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gqj
          gql:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gqk
          gqm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gql
          gqn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gqm
          gqo:bool[] = lt 0 0
          gqp:i32[] = add 0 1
          gqq:i32[] = select_n gqo 0 gqp
          gqr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gqq
          gqs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gqr
          gqt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gqs
          gqu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gqt
          gqv:bool[] = lt 0 0
          gqw:i32[] = add 0 1
          gqx:i32[] = select_n gqv 0 gqw
          gqy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gqx
          gqz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gqy
          gra:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gqz
          grb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gra
          grc:bool[] = lt 0 0
          grd:i32[] = add 0 1
          gre:i32[] = select_n grc 0 grd
          grf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gre
          grg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] grf
          grh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx grg
          gri:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] grh
          grj:bool[] = lt 0 0
          grk:i32[] = add 0 1
          grl:i32[] = select_n grj 0 grk
          grm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] grl
          grn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] grm
          gro:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx grn
          grp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gro
          grq:bool[] = lt 0 0
          grr:i32[] = add 0 1
          grs:i32[] = select_n grq 0 grr
          grt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] grs
          gru:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] grt
          grv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gru
          grw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] grv
          grx:bool[] = lt 0 0
          gry:i32[] = add 0 1
          grz:i32[] = select_n grx 0 gry
          gsa:i32[] = convert_element_type[new_dtype=int32 weak_type=False] grz
          gsb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gsa
          gsc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gsb
          gsd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gsc
          gse:bool[] = lt 0 0
          gsf:i32[] = add 0 1
          gsg:i32[] = select_n gse 0 gsf
          gsh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gsg
          gsi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gsh
          gsj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gsi
          gsk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gsj
          gsl:bool[] = lt 0 0
          gsm:i32[] = add 0 1
          gsn:i32[] = select_n gsl 0 gsm
          gso:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gsn
          gsp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gso
          gsq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gsp
          gsr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gsq
          gss:bool[] = lt 0 0
          gst:i32[] = add 0 1
          gsu:i32[] = select_n gss 0 gst
          gsv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gsu
          gsw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gsv
          gsx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gsw
          gsy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gsx
          gsz:bool[] = lt 0 0
          gta:i32[] = add 0 1
          gtb:i32[] = select_n gsz 0 gta
          gtc:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gtb
          gtd:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gtc
          gte:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gtd
          gtf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gte
          gtg:bool[] = lt 0 0
          gth:i32[] = add 0 1
          gti:i32[] = select_n gtg 0 gth
          gtj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gti
          gtk:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gtj
          gtl:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gtk
          gtm:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gtl
          gtn:bool[] = lt 0 0
          gto:i32[] = add 0 1
          gtp:i32[] = select_n gtn 0 gto
          gtq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gtp
          gtr:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gtq
          gts:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gtr
          gtt:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gts
          gtu:bool[] = lt 0 0
          gtv:i32[] = add 0 1
          gtw:i32[] = select_n gtu 0 gtv
          gtx:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gtw
          gty:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gtx
          gtz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gty
          gua:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gtz
          gub:bool[] = lt 0 0
          guc:i32[] = add 0 1
          gud:i32[] = select_n gub 0 guc
          gue:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gud
          guf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gue
          gug:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx guf
          guh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gug
          gui:bool[] = lt 0 0
          guj:i32[] = add 0 1
          guk:i32[] = select_n gui 0 guj
          gul:i32[] = convert_element_type[new_dtype=int32 weak_type=False] guk
          gum:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gul
          gun:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gum
          guo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gun
          gup:bool[] = lt 0 0
          guq:i32[] = add 0 1
          gur:i32[] = select_n gup 0 guq
          gus:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gur
          gut:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gus
          guu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gut
          guv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] guu
          guw:bool[] = lt 0 0
          gux:i32[] = add 0 1
          guy:i32[] = select_n guw 0 gux
          guz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] guy
          gva:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] guz
          gvb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gva
          gvc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gvb
          gvd:bool[] = lt 0 0
          gve:i32[] = add 0 1
          gvf:i32[] = select_n gvd 0 gve
          gvg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gvf
          gvh:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gvg
          gvi:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gvh
          gvj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gvi
          gvk:bool[] = lt 0 0
          gvl:i32[] = add 0 1
          gvm:i32[] = select_n gvk 0 gvl
          gvn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gvm
          gvo:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gvn
          gvp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gvo
          gvq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gvp
          gvr:bool[] = lt 0 0
          gvs:i32[] = add 0 1
          gvt:i32[] = select_n gvr 0 gvs
          gvu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gvt
          gvv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gvu
          gvw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gvv
          gvx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gvw
          gvy:bool[] = lt 0 0
          gvz:i32[] = add 0 1
          gwa:i32[] = select_n gvy 0 gvz
          gwb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gwa
          gwc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gwb
          gwd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gwc
          gwe:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gwd
          gwf:bool[] = lt 0 0
          gwg:i32[] = add 0 1
          gwh:i32[] = select_n gwf 0 gwg
          gwi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gwh
          gwj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gwi
          gwk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gwj
          gwl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gwk
          gwm:bool[] = lt 0 0
          gwn:i32[] = add 0 1
          gwo:i32[] = select_n gwm 0 gwn
          gwp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gwo
          gwq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gwp
          gwr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gwq
          gws:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gwr
          gwt:bool[] = lt 0 0
          gwu:i32[] = add 0 1
          gwv:i32[] = select_n gwt 0 gwu
          gww:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gwv
          gwx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gww
          gwy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gwx
          gwz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gwy
          gxa:bool[] = lt 0 0
          gxb:i32[] = add 0 1
          gxc:i32[] = select_n gxa 0 gxb
          gxd:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gxc
          gxe:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gxd
          gxf:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gxe
          gxg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gxf
          gxh:bool[] = lt 0 0
          gxi:i32[] = add 0 1
          gxj:i32[] = select_n gxh 0 gxi
          gxk:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gxj
          gxl:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gxk
          gxm:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gxl
          gxn:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gxm
          gxo:bool[] = lt 0 0
          gxp:i32[] = add 0 1
          gxq:i32[] = select_n gxo 0 gxp
          gxr:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gxq
          gxs:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gxr
          gxt:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gxs
          gxu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gxt
          gxv:bool[] = lt 0 0
          gxw:i32[] = add 0 1
          gxx:i32[] = select_n gxv 0 gxw
          gxy:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gxx
          gxz:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gxy
          gya:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gxz
          gyb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gya
          gyc:bool[] = lt 0 0
          gyd:i32[] = add 0 1
          gye:i32[] = select_n gyc 0 gyd
          gyf:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gye
          gyg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gyf
          gyh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gyg
          gyi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gyh
          gyj:bool[] = lt 0 0
          gyk:i32[] = add 0 1
          gyl:i32[] = select_n gyj 0 gyk
          gym:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gyl
          gyn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gym
          gyo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gyn
          gyp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gyo
          gyq:bool[] = lt 0 0
          gyr:i32[] = add 0 1
          gys:i32[] = select_n gyq 0 gyr
          gyt:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gys
          gyu:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gyt
          gyv:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gyu
          gyw:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gyv
          gyx:bool[] = lt 0 0
          gyy:i32[] = add 0 1
          gyz:i32[] = select_n gyx 0 gyy
          gza:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gyz
          gzb:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gza
          gzc:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gzb
          gzd:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gzc
          gze:bool[] = lt 0 0
          gzf:i32[] = add 0 1
          gzg:i32[] = select_n gze 0 gzf
          gzh:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gzg
          gzi:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gzh
          gzj:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gzi
          gzk:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gzj
          gzl:bool[] = lt 0 0
          gzm:i32[] = add 0 1
          gzn:i32[] = select_n gzl 0 gzm
          gzo:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gzn
          gzp:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gzo
          gzq:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gzp
          gzr:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gzq
          gzs:bool[] = lt 0 0
          gzt:i32[] = add 0 1
          gzu:i32[] = select_n gzs 0 gzt
          gzv:i32[] = convert_element_type[new_dtype=int32 weak_type=False] gzu
          gzw:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] gzv
          gzx:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx gzw
          gzy:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] gzx
          gzz:bool[] = lt 0 0
          haa:i32[] = add 0 1
          hab:i32[] = select_n gzz 0 haa
          hac:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hab
          had:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hac
          hae:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx had
          haf:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hae
          hag:bool[] = lt 0 0
          hah:i32[] = add 0 1
          hai:i32[] = select_n hag 0 hah
          haj:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hai
          hak:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] haj
          hal:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hak
          ham:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hal
          han:bool[] = lt 0 0
          hao:i32[] = add 0 1
          hap:i32[] = select_n han 0 hao
          haq:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hap
          har:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] haq
          has:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx har
          hat:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] has
          hau:bool[] = lt 0 0
          hav:i32[] = add 0 1
          haw:i32[] = select_n hau 0 hav
          hax:i32[] = convert_element_type[new_dtype=int32 weak_type=False] haw
          hay:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hax
          haz:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hay
          hba:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] haz
          hbb:bool[] = lt 0 0
          hbc:i32[] = add 0 1
          hbd:i32[] = select_n hbb 0 hbc
          hbe:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hbd
          hbf:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hbe
          hbg:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hbf
          hbh:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hbg
          hbi:bool[] = lt 0 0
          hbj:i32[] = add 0 1
          hbk:i32[] = select_n hbi 0 hbj
          hbl:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hbk
          hbm:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hbl
          hbn:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hbm
          hbo:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hbn
          hbp:bool[] = lt 0 0
          hbq:i32[] = add 0 1
          hbr:i32[] = select_n hbp 0 hbq
          hbs:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hbr
          hbt:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hbs
          hbu:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hbt
          hbv:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hbu
          hbw:bool[] = lt 0 0
          hbx:i32[] = add 0 1
          hby:i32[] = select_n hbw 0 hbx
          hbz:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hby
          hca:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hbz
          hcb:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hca
          hcc:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hcb
          hcd:bool[] = lt 0 0
          hce:i32[] = add 0 1
          hcf:i32[] = select_n hcd 0 hce
          hcg:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hcf
          hch:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hcg
          hci:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hch
          hcj:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hci
          hck:bool[] = lt 0 0
          hcl:i32[] = add 0 1
          hcm:i32[] = select_n hck 0 hcl
          hcn:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hcm
          hco:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hcn
          hcp:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hco
          hcq:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hcp
          hcr:bool[] = lt 0 0
          hcs:i32[] = add 0 1
          hct:i32[] = select_n hcr 0 hcs
          hcu:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hct
          hcv:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hcu
          hcw:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hcv
          hcx:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hcw
          hcy:bool[] = lt 0 0
          hcz:i32[] = add 0 1
          hda:i32[] = select_n hcy 0 hcz
          hdb:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hda
          hdc:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hdb
          hdd:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hdc
          hde:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hdd
          hdf:bool[] = lt 0 0
          hdg:i32[] = add 0 1
          hdh:i32[] = select_n hdf 0 hdg
          hdi:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hdh
          hdj:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hdi
          hdk:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hdj
          hdl:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hdk
          hdm:bool[] = lt 0 0
          hdn:i32[] = add 0 1
          hdo:i32[] = select_n hdm 0 hdn
          hdp:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hdo
          hdq:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hdp
          hdr:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hdq
          hds:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hdr
          hdt:bool[] = lt 0 0
          hdu:i32[] = add 0 1
          hdv:i32[] = select_n hdt 0 hdu
          hdw:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hdv
          hdx:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hdw
          hdy:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hdx
          hdz:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hdy
          hea:bool[] = lt 0 0
          heb:i32[] = add 0 1
          hec:i32[] = select_n hea 0 heb
          hed:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hec
          hee:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hed
          hef:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hee
          heg:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hef
          heh:bool[] = lt 0 0
          hei:i32[] = add 0 1
          hej:i32[] = select_n heh 0 hei
          hek:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hej
          hel:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hek
          hem:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hel
          hen:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hem
          heo:bool[] = lt 0 0
          hep:i32[] = add 0 1
          heq:i32[] = select_n heo 0 hep
          her:i32[] = convert_element_type[new_dtype=int32 weak_type=False] heq
          hes:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] her
          het:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hes
          heu:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] het
          hev:bool[] = lt 0 0
          hew:i32[] = add 0 1
          hex:i32[] = select_n hev 0 hew
          hey:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hex
          hez:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hey
          hfa:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hez
          hfb:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hfa
          hfc:bool[] = lt 0 0
          hfd:i32[] = add 0 1
          hfe:i32[] = select_n hfc 0 hfd
          hff:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hfe
          hfg:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hff
          hfh:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hfg
          hfi:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hfh
          hfj:bool[] = lt 0 0
          hfk:i32[] = add 0 1
          hfl:i32[] = select_n hfj 0 hfk
          hfm:i32[] = convert_element_type[new_dtype=int32 weak_type=False] hfl
          hfn:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hfm
          hfo:f32[256] = gather[
            dimension_numbers=GatherDimensionNumbers(offset_dims=(0,), collapsed_slice_dims=(0,), start_index_map=(0,))
            fill_value=None
            indices_are_sorted=True
            mode=GatherScatterMode.PROMISE_IN_BOUNDS
            slice_sizes=(1, 256)
            unique_indices=True
          ] cx hfn
          hfp:f32[1,256] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(1, 256)
          ] hfo
          hfq:f32[16,256] = concatenate[dimension=0] de dl ds dz eg en eu fb fi fp
            fw gd gk gr gy hf
          hfr:f32[16,256] = concatenate[dimension=0] hm ht ia ih io iv jc jj jq jx
            ke kl ks kz lg ln
          hfs:f32[16,256] = concatenate[dimension=0] lu mb mi mp mw nd nk nr ny of
            om ot pa ph po pv
          hft:f32[16,256] = concatenate[dimension=0] qc qj qq qx re rl rs rz sg sn
            su tb ti tp tw ud
          hfu:f32[16,256] = concatenate[dimension=0] uk ur uy vf vm vt wa wh wo wv
            xc xj xq xx ye yl
          hfv:f32[16,256] = concatenate[dimension=0] ys yz zg zn zu bab bai bap baw
            bbd bbk bbr bby bcf bcm bct
          hfw:f32[16,256] = concatenate[dimension=0] bda bdh bdo bdv bec bej beq
            bex bfe bfl bfs bfz bgg bgn bgu bhb
          hfx:f32[16,256] = concatenate[dimension=0] bhi bhp bhw bid bik bir biy
            bjf bjm bjt bka bkh bko bkv blc blj
          hfy:f32[16,256] = concatenate[dimension=0] blq blx bme bml bms bmz bng
            bnn bnu bob boi bop bow bpd bpk bpr
          hfz:f32[16,256] = concatenate[dimension=0] bpy bqf bqm bqt bra brh bro
            brv bsc bsj bsq bsx bte btl bts btz
          hga:f32[16,256] = concatenate[dimension=0] bug bun buu bvb bvi bvp bvw
            bwd bwk bwr bwy bxf bxm bxt bya byh
          hgb:f32[16,256] = concatenate[dimension=0] byo byv bzc bzj bzq bzx cae
            cal cas caz cbg cbn cbu ccb cci ccp
          hgc:f32[16,256] = concatenate[dimension=0] ccw cdd cdk cdr cdy cef cem
            cet cfa cfh cfo cfv cgc cgj cgq cgx
          hgd:f32[16,256] = concatenate[dimension=0] che chl chs chz cig cin ciu
            cjb cji cjp cjw ckd ckk ckr cky clf
          hge:f32[16,256] = concatenate[dimension=0] clm clt cma cmh cmo cmv cnc
            cnj cnq cnx coe col cos coz cpg cpn
          hgf:f32[16,256] = concatenate[dimension=0] cpu cqb cqi cqp cqw crd crk
            crr cry csf csm cst cta cth cto ctv
          hgg:f32[16,256] = concatenate[dimension=0] cuc cuj cuq cux cve cvl cvs
            cvz cwg cwn cwu cxb cxi cxp cxw cyd
          hgh:f32[16,256] = concatenate[dimension=0] cyk cyr cyy czf czm czt daa
            dah dao dav dbc dbj dbq dbx dce dcl
          hgi:f32[16,256] = concatenate[dimension=0] dcs dcz ddg ddn ddu deb dei
            dep dew dfd dfk dfr dfy dgf dgm dgt
          hgj:f32[16,256] = concatenate[dimension=0] dha dhh dho dhv dic dij diq
            dix dje djl djs djz dkg dkn dku dlb
          hgk:f32[16,256] = concatenate[dimension=0] dli dlp dlw dmd dmk dmr dmy
            dnf dnm dnt doa doh doo dov dpc dpj
          hgl:f32[16,256] = concatenate[dimension=0] dpq dpx dqe dql dqs dqz drg
            drn dru dsb dsi dsp dsw dtd dtk dtr
          hgm:f32[16,256] = concatenate[dimension=0] dty duf dum dut dva dvh dvo
            dvv dwc dwj dwq dwx dxe dxl dxs dxz
          hgn:f32[16,256] = concatenate[dimension=0] dyg dyn dyu dzb dzi dzp dzw
            ead eak ear eay ebf ebm ebt eca ech
          hgo:f32[16,256] = concatenate[dimension=0] eco ecv edc edj edq edx eee
            eel ees eez efg efn efu egb egi egp
          hgp:f32[16,256] = concatenate[dimension=0] egw ehd ehk ehr ehy eif eim
            eit eja ejh ejo ejv ekc ekj ekq ekx
          hgq:f32[16,256] = concatenate[dimension=0] ele ell els elz emg emn emu
            enb eni enp enw eod eok eor eoy epf
          hgr:f32[16,256] = concatenate[dimension=0] epm ept eqa eqh eqo eqv erc
            erj erq erx ese esl ess esz etg etn
          hgs:f32[16,256] = concatenate[dimension=0] etu eub eui eup euw evd evk
            evr evy ewf ewm ewt exa exh exo exv
          hgt:f32[16,256] = concatenate[dimension=0] eyc eyj eyq eyx eze ezl ezs
            ezz fag fan fau fbb fbi fbp fbw fcd
          hgu:f32[16,256] = concatenate[dimension=0] fck fcr fcy fdf fdm fdt fea
            feh feo fev ffc ffj ffq ffx fge fgl
          hgv:f32[16,256] = concatenate[dimension=0] fgs fgz fhg fhn fhu fib fii
            fip fiw fjd fjk fjr fjy fkf fkm fkt
          hgw:f32[16,256] = concatenate[dimension=0] fla flh flo flv fmc fmj fmq
            fmx fne fnl fns fnz fog fon fou fpb
          hgx:f32[16,256] = concatenate[dimension=0] fpi fpp fpw fqd fqk fqr fqy
            frf frm frt fsa fsh fso fsv ftc ftj
          hgy:f32[16,256] = concatenate[dimension=0] ftq ftx fue ful fus fuz fvg
            fvn fvu fwb fwi fwp fww fxd fxk fxr
          hgz:f32[16,256] = concatenate[dimension=0] fxy fyf fym fyt fza fzh fzo
            fzv gac gaj gaq gax gbe gbl gbs gbz
          hha:f32[16,256] = concatenate[dimension=0] gcg gcn gcu gdb gdi gdp gdw
            ged gek ger gey gff gfm gft gga ggh
          hhb:f32[16,256] = concatenate[dimension=0] ggo ggv ghc ghj ghq ghx gie
            gil gis giz gjg gjn gju gkb gki gkp
          hhc:f32[16,256] = concatenate[dimension=0] gkw gld glk glr gly gmf gmm
            gmt gna gnh gno gnv goc goj goq gox
          hhd:f32[16,256] = concatenate[dimension=0] gpe gpl gps gpz gqg gqn gqu
            grb gri grp grw gsd gsk gsr gsy gtf
          hhe:f32[16,256] = concatenate[dimension=0] gtm gtt gua guh guo guv gvc
            gvj gvq gvx gwe gwl gws gwz gxg gxn
          hhf:f32[16,256] = concatenate[dimension=0] gxu gyb gyi gyp gyw gzd gzk
            gzr gzy haf ham hat hba hbh hbo hbv
          hhg:f32[14,256] = concatenate[dimension=0] hcc hcj hcq hcx hde hdl hds
            hdz heg hen heu hfb hfi hfp
          hhh:f32[256,256] = concatenate[dimension=0] hfq hfr hfs hft hfu hfv hfw
            hfx hfy hfz hga hgb hgc hgd hge hgf
          hhi:f32[256,256] = concatenate[dimension=0] hgg hgh hgi hgj hgk hgl hgm
            hgn hgo hgp hgq hgr hgs hgt hgu hgv
          hhj:f32[174,256] = concatenate[dimension=0] hgw hgx hgy hgz hha hhb hhc
            hhd hhe hhf hhg
          hhk:f32[686,256] = concatenate[dimension=0] hhh hhi hhj
          hhl:f32[686,768] = concatenate[dimension=1] bc hhk
          hhm:f32[686,512] = dot_general[
            dimension_numbers=(((1,), (0,)), ((), ()))
            precision=None
            preferred_element_type=None
          ] hhl t
          hhn:f32[686,512] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(686, 512)
          ] s
          hho:f32[686,512] = add hhm hhn
          hhp:f32[686,512] = custom_jvp_call_jaxpr[
            fun_jaxpr={ lambda ; hhq:f32[686,512]. let
                hhr:f32[686,512] = xla_call[
                  call_jaxpr={ lambda ; hhs:f32[686,512]. let
                      hht:f32[686,512] = max hhs 0.0
                    in (hht,) }
                  name=relu
                ] hhq
              in (hhr,) }
            jvp_jaxpr_thunk=<function _memoize.<locals>.memoized at 0x7f14791b5940>
            num_consts=0
          ] hho
          hhu:f32[686,1024] = dot_general[
            dimension_numbers=(((1,), (0,)), ((), ()))
            precision=None
            preferred_element_type=None
          ] hhp v
          hhv:f32[686,1024] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(686, 1024)
          ] u
          hhw:f32[686,1024] = add hhu hhv
          hhx:f32[686,1024] = custom_jvp_call_jaxpr[
            fun_jaxpr={ lambda ; hhy:f32[686,1024]. let
                hhz:f32[686,1024] = xla_call[
                  call_jaxpr={ lambda ; hia:f32[686,1024]. let
                      hib:f32[686,1024] = max hia 0.0
                    in (hib,) }
                  name=relu
                ] hhy
              in (hhz,) }
            jvp_jaxpr_thunk=<function _memoize.<locals>.memoized at 0x7f146e2a7310>
            num_consts=0
          ] hhw
          hic:f32[686,1] = dot_general[
            dimension_numbers=(((1,), (0,)), ((), ()))
            precision=None
            preferred_element_type=None
          ] hhx x
          hid:f32[686,1] = broadcast_in_dim[
            broadcast_dimensions=(1,)
            shape=(686, 1)
          ] w
          hie:f32[686,1] = add hic hid
        in (cx, cn, hie) }
      name=apply_fn
    ] a b c d e f g h i j k l m n
    hif:f32[686] = reshape[dimensions=None new_sizes=(686,)] q
    hig:f32[686] = xla_call[
      call_jaxpr={ lambda ; hih:f32[686]. let
          hii:f32[] = reduce_max[axes=(0,)] hih
          hij:f32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hii
          hik:f32[1] = stop_gradient hij
          hil:f32[686] = sub hih hik
          him:f32[686] = exp hil
          hin:f32[] = reduce_sum[axes=(0,)] him
          hio:f32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hin
          hip:f32[1] = log hio
          hiq:f32[686] = sub hil hip
        in (hiq,) }
      name=log_softmax
    ] hif
    hir:f32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] 1.1754943508222875e-38
    his:f32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] 1.0
    hit:u32[686] = iota[dimension=0 dtype=uint32 shape=(686,)] 
    hiu:u32[1] = slice[limit_indices=(1,) start_indices=(0,) strides=(1,)] j
    hiv:u32[] = squeeze[dimensions=(0,)] hiu
    hiw:u32[1] = slice[limit_indices=(2,) start_indices=(1,) strides=(1,)] j
    hix:u32[] = squeeze[dimensions=(0,)] hiw
    hiy:u32[343] = slice[limit_indices=(343,) start_indices=(0,) strides=None] hit
    hiz:u32[343] = slice[limit_indices=(686,) start_indices=(343,) strides=None] hit
    hja:u32[343] hjb:u32[343] = threefry2x32 hiv hix hiy hiz
    hjc:u32[686] = concatenate[dimension=0] hja hjb
    hjd:u32[686] = shift_right_logical hjc 9
    hje:u32[686] = or hjd 1065353216
    hjf:f32[686] = bitcast_convert_type[new_dtype=float32] hje
    hjg:f32[686] = sub hjf 1.0
    hjh:f32[1] = sub his hir
    hji:f32[686] = mul hjg hjh
    hjj:f32[686] = add hji hir
    hjk:f32[686] = max hir hjj
    hjl:f32[686] = log hjk
    hjm:f32[686] = neg hjl
    hjn:f32[686] = log hjm
    hjo:f32[686] = neg hjn
    hjp:f32[686] = add hjo hig
    hjq:i32[] = argmax[axes=(0,) index_dtype=int32] hjp
    hjr:bool[] = lt hjq 0
    hjs:i32[] = add hjq 686
    hjt:i32[] = select_n hjr hjq hjs
    hju:i32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] hjt
    hjv:f32[] = gather[
      dimension_numbers=GatherDimensionNumbers(offset_dims=(), collapsed_slice_dims=(0,), start_index_map=(0,))
      fill_value=None
      indices_are_sorted=True
      mode=GatherScatterMode.PROMISE_IN_BOUNDS
      slice_sizes=(1,)
      unique_indices=True
    ] hig hju
  in (hjv, hjq, o, p) }